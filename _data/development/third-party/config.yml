---
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.util.List<java.lang.String>"
  name: "azure.activedirectory.active-directory-groups"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReason: "Configuration moved to UserGroup class to keep UserGroup properties\
    \ together"
  deprecationReplacement: "azure.activedirectory.user-group.allowed-groups"
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.Boolean"
  description: "If Telemetry events should be published to Azure AD."
  shortDescription: "If Telemetry events should be published to Azure AD."
  name: "azure.activedirectory.allow-telemetry"
  defaultValue: true
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.String"
  description: "App ID URI which might be used in the <code>\"aud\"</code> claim of\
    \ an <code>id_token</code>."
  shortDescription: "App ID URI which might be used in the <code>\"aud\"</code> claim\
    \ of an <code>id_token</code>."
  name: "azure.activedirectory.app-id-uri"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties"
  type: "java.lang.Boolean"
  description: "Telemetry data will be collected if true, or disable data collection."
  shortDescription: "Telemetry data will be collected if true, or disable data collection."
  name: "azure.activedirectory.b2c.allow-telemetry"
  defaultValue: true
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties"
  type: "java.lang.String"
  description: "The application ID that registered under b2c tenant."
  shortDescription: "The application ID that registered under b2c tenant."
  name: "azure.activedirectory.b2c.client-id"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties"
  type: "java.lang.String"
  description: "The application secret that registered under b2c tenant."
  shortDescription: "The application secret that registered under b2c tenant."
  name: "azure.activedirectory.b2c.client-secret"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties"
  type: "java.lang.String"
  name: "azure.activedirectory.b2c.logout-success-url"
  defaultValue: "http://localhost:8080/login"
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties"
  type: "java.lang.Boolean"
  description: "Use OIDC ${@link OidcAuthorizationCodeAuthenticationProvider} by default.\
    \ If set to false, will use Oauth2 ${@link OAuth2AuthorizationCodeAuthenticationProvider}."
  shortDescription: "Use OIDC ${@link OidcAuthorizationCodeAuthenticationProvider}\
    \ by default."
  name: "azure.activedirectory.b2c.oidc-enabled"
  defaultValue: true
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties"
  type: "java.lang.String"
  name: "azure.activedirectory.b2c.reply-url"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties"
  type: "java.lang.String"
  description: "The name of the b2c tenant."
  shortDescription: "The name of the b2c tenant."
  name: "azure.activedirectory.b2c.tenant"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties$UserFlows"
  type: "java.lang.String"
  description: "The password-reset user flow which is created under b2c tenant."
  shortDescription: "The password-reset user flow which is created under b2c tenant."
  name: "azure.activedirectory.b2c.user-flows.password-reset"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties$UserFlows"
  type: "java.lang.String"
  description: "The profile-edit user flow which is created under b2c tenant."
  shortDescription: "The profile-edit user flow which is created under b2c tenant."
  name: "azure.activedirectory.b2c.user-flows.profile-edit"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.b2c.AADB2CProperties$UserFlows"
  type: "java.lang.String"
  description: "The sign-up-or-sign-in user flow which is created under b2c tenant."
  shortDescription: "The sign-up-or-sign-in user flow which is created under b2c tenant."
  name: "azure.activedirectory.b2c.user-flows.sign-up-or-sign-in"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.String"
  description: "Registered application ID in Azure AD. Must be configured when OAuth2\
    \ authentication is done in front end"
  shortDescription: "Registered application ID in Azure AD."
  name: "azure.activedirectory.client-id"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.String"
  description: "API Access Key of the registered application. Must be configured when\
    \ OAuth2 authentication is done in front end"
  shortDescription: "API Access Key of the registered application."
  name: "azure.activedirectory.client-secret"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.String"
  description: "Azure service environment/region name, e.g., cn, global"
  shortDescription: "Azure service environment/region name, e.g., cn, global"
  name: "azure.activedirectory.environment"
  defaultValue: "global"
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.Long"
  description: "The lifespan of the cached JWK set before it expires, default is 5\
    \ minutes."
  shortDescription: "The lifespan of the cached JWK set before it expires, default\
    \ is 5 minutes."
  name: "azure.activedirectory.jwk-set-cache-lifespan"
  defaultValue: 5
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.Integer"
  description: "Connection Timeout for the JWKSet Remote URL call."
  shortDescription: "Connection Timeout for the JWKSet Remote URL call."
  name: "azure.activedirectory.jwt-connect-timeout"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.Integer"
  description: "Read Timeout for the JWKSet Remote URL call."
  shortDescription: "Read Timeout for the JWKSet Remote URL call."
  name: "azure.activedirectory.jwt-read-timeout"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.Integer"
  description: "Size limit in Bytes of the JWKSet Remote URL call."
  shortDescription: "Size limit in Bytes of the JWKSet Remote URL call."
  name: "azure.activedirectory.jwt-size-limit"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.Boolean"
  description: "If <code>true</code> activates the stateless auth filter {@link AADAppRoleStatelessAuthenticationFilter}.\
    \ The default is <code>false</code> which activates {@link AADAuthenticationFilter}."
  shortDescription: "If <code>true</code> activates the stateless auth filter {@link\
    \ AADAppRoleStatelessAuthenticationFilter}."
  name: "azure.activedirectory.session-stateless"
  defaultValue: false
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties"
  type: "java.lang.String"
  description: "Azure Tenant ID."
  shortDescription: "Azure Tenant ID."
  name: "azure.activedirectory.tenant-id"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties$UserGroupProperties"
  type: "java.util.List<java.lang.String>"
  description: "Expected UserGroups that an authority will be granted to if found\
    \ in the response from the MemeberOf Graph API Call."
  shortDescription: "Expected UserGroups that an authority will be granted to if found\
    \ in the response from the MemeberOf Graph API Call."
  name: "azure.activedirectory.user-group.allowed-groups"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties$UserGroupProperties"
  type: "java.lang.String"
  description: "Key of the JSON Node to get from the Azure AD response object that\
    \ will be checked to contain the {@code azure.activedirectory.user-group.value}\
    \  to signify that this node is a valid {@code UserGroup}."
  shortDescription: "Key of the JSON Node to get from the Azure AD response object\
    \ that will be checked to contain the {@code azure.activedirectory.user-group.value}\
    \  to signify that this node is a valid {@code UserGroup}."
  name: "azure.activedirectory.user-group.key"
  defaultValue: "objectType"
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties$UserGroupProperties"
  type: "java.lang.String"
  description: "Key of the JSON Node containing the Azure Object ID for the {@code\
    \ UserGroup}."
  shortDescription: "Key of the JSON Node containing the Azure Object ID for the {@code\
    \ UserGroup}."
  name: "azure.activedirectory.user-group.object-i-d-key"
  defaultValue: "objectId"
- owner: "com.microsoft.azure.spring.autoconfigure.aad.AADAuthenticationProperties$UserGroupProperties"
  type: "java.lang.String"
  description: "Value of the JSON Node identified by the {@code azure.activedirectory.user-group.key}\
    \ to validate the JSON Node is a UserGroup."
  shortDescription: "Value of the JSON Node identified by the {@code azure.activedirectory.user-group.key}\
    \ to validate the JSON Node is a UserGroup."
  name: "azure.activedirectory.user-group.value"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.cosmosdb.CosmosDBProperties"
  type: "java.lang.Boolean"
  description: "Whether allow Microsoft to collect telemetry data."
  shortDescription: "Whether allow Microsoft to collect telemetry data."
  name: "azure.cosmosdb.allow-telemetry"
  defaultValue: true
- owner: "com.microsoft.azure.spring.autoconfigure.cosmosdb.CosmosDBProperties"
  type: "com.azure.data.cosmos.ConnectionPolicy"
  name: "azure.cosmosdb.connection-policy"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.cosmosdb.CosmosDBProperties"
  type: "com.azure.data.cosmos.ConsistencyLevel"
  description: "Document DB consistency level."
  shortDescription: "Document DB consistency level."
  name: "azure.cosmosdb.consistency-level"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.cosmosdb.CosmosDBProperties"
  type: "java.lang.String"
  description: "Document DB database name."
  shortDescription: "Document DB database name."
  name: "azure.cosmosdb.database"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.cosmosdb.CosmosDBProperties"
  type: "java.lang.String"
  description: "Document DB key."
  shortDescription: "Document DB key."
  name: "azure.cosmosdb.key"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.cosmosdb.CosmosDBProperties"
  type: "java.lang.Boolean"
  description: "Populate Diagnostics Strings and Query metrics"
  shortDescription: "Populate Diagnostics Strings and Query metrics"
  name: "azure.cosmosdb.populate-query-metrics"
  defaultValue: false
- owner: "com.microsoft.azure.spring.autoconfigure.cosmosdb.CosmosDBProperties"
  type: "com.microsoft.azure.spring.data.cosmosdb.core.ResponseDiagnosticsProcessor"
  description: "Response Diagnostics processor Default implementation is to log the\
    \ response diagnostics string"
  shortDescription: "Response Diagnostics processor Default implementation is to log\
    \ the response diagnostics string"
  name: "azure.cosmosdb.response-diagnostics-processor"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.cosmosdb.CosmosDBProperties"
  type: "java.lang.String"
  description: "Document DB URI."
  shortDescription: "Document DB URI."
  name: "azure.cosmosdb.uri"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.String"
  name: "azure.keyvault.allow-telemetry"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.String"
  description: "Defines the constant for the property that enables/disables case sensitive\
    \ keys."
  shortDescription: "Defines the constant for the property that enables/disables case\
    \ sensitive keys."
  name: "azure.keyvault.case-sensitive-keys"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.String"
  name: "azure.keyvault.certificate-password"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.String"
  name: "azure.keyvault.certificate-path"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.String"
  name: "azure.keyvault.client-id"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.String"
  name: "azure.keyvault.client-key"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.Boolean"
  name: "azure.keyvault.enabled"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.String"
  description: "The constant used to define the order of the key vaults you are delivering\
    \ (comma delimited, e.g 'my-vault, my-vault-2')."
  shortDescription: "The constant used to define the order of the key vaults you are\
    \ delivering (comma delimited, e.g 'my-vault, my-vault-2')."
  name: "azure.keyvault.order"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.Long"
  name: "azure.keyvault.refresh-interval"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.util.List<java.lang.String>"
  name: "azure.keyvault.secret-keys"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.String"
  name: "azure.keyvault.tenant-id"
  defaultValue: ""
- owner: "com.microsoft.azure.keyvault.spring.KeyVaultProperties"
  type: "java.lang.String"
  name: "azure.keyvault.uri"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpointsProperties"
  type: "java.util.Map<java.lang.String,com.microsoft.azure.spring.autoconfigure.aad.ServiceEndpoints>"
  name: "azure.service.endpoints"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsCredentialsProperties"
  type: "java.lang.String"
  description: "The access key to be used with a static provider."
  shortDescription: "The access key to be used with a static provider."
  name: "cloud.aws.credentials.access-key"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsCredentialsProperties"
  type: "java.lang.Boolean"
  description: "Configures an instance profile credentials provider with no further\
    \ configuration."
  shortDescription: "Configures an instance profile credentials provider with no further\
    \ configuration."
  name: "cloud.aws.credentials.instance-profile"
  defaultValue: true
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsCredentialsProperties"
  type: "java.lang.String"
  description: "The AWS profile name."
  shortDescription: "The AWS profile name."
  name: "cloud.aws.credentials.profile-name"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsCredentialsProperties"
  type: "java.lang.String"
  description: "The AWS profile path."
  shortDescription: "The AWS profile path."
  name: "cloud.aws.credentials.profile-path"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsCredentialsProperties"
  type: "java.lang.String"
  description: "The secret key to be used with a static provider."
  shortDescription: "The secret key to be used with a static provider."
  name: "cloud.aws.credentials.secret-key"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsCredentialsProperties"
  type: "java.lang.Boolean"
  description: "Use the DefaultAWSCredentials Chain instead of configuring a custom\
    \ credentials chain."
  shortDescription: "Use the DefaultAWSCredentials Chain instead of configuring a\
    \ custom credentials chain."
  name: "cloud.aws.credentials.use-default-aws-credentials-chain"
  defaultValue: false
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsS3ResourceLoaderProperties"
  type: "java.lang.Integer"
  description: "The core pool size of the Task Executor used for parallel S3 interaction.\
    \ @see org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor#setCorePoolSize(int)"
  shortDescription: "The core pool size of the Task Executor used for parallel S3\
    \ interaction."
  name: "cloud.aws.loader.core-pool-size"
  defaultValue: 1
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsS3ResourceLoaderProperties"
  type: "java.lang.Integer"
  description: "The maximum pool size of the Task Executor used for parallel S3 interaction.\
    \ @see org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor#setMaxPoolSize(int)"
  shortDescription: "The maximum pool size of the Task Executor used for parallel\
    \ S3 interaction."
  name: "cloud.aws.loader.max-pool-size"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsS3ResourceLoaderProperties"
  type: "java.lang.Integer"
  description: "The maximum queue capacity for backed up S3 requests. @see org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor#setQueueCapacity(int)"
  shortDescription: "The maximum queue capacity for backed up S3 requests."
  name: "cloud.aws.loader.queue-capacity"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsRegionProperties"
  type: "java.lang.Boolean"
  description: "Enables automatic region detection based on the EC2 meta data service."
  shortDescription: "Enables automatic region detection based on the EC2 meta data\
    \ service."
  name: "cloud.aws.region.auto"
  defaultValue: true
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsRegionProperties"
  type: "java.lang.String"
  name: "cloud.aws.region.static"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsRegionProperties"
  type: "java.lang.Boolean"
  description: "Whether default AWS SDK region provider chain should be used when\
    \ auto is set to true."
  shortDescription: "Whether default AWS SDK region provider chain should be used\
    \ when auto is set to true."
  name: "cloud.aws.region.use-default-aws-region-chain"
  defaultValue: false
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsStackProperties"
  type: "java.lang.Boolean"
  description: "Enables the automatic stack name detection for the application."
  shortDescription: "Enables the automatic stack name detection for the application."
  name: "cloud.aws.stack.auto"
  defaultValue: true
- owner: "org.springframework.cloud.aws.autoconfigure.context.properties.AwsStackProperties"
  type: "java.lang.String"
  description: "The name of the manually configured stack name that will be used to\
    \ retrieve the resources."
  shortDescription: "The name of the manually configured stack name that will be used\
    \ to retrieve the resources."
  name: "cloud.aws.stack.name"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Enable debug logs."
  shortDescription: "Enable debug logs."
  name: "debug"
  defaultValue: false
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties"
  type: "java.lang.Boolean"
  description: "Flag to say that a process should fail if there is an encryption or\
    \ decryption error."
  shortDescription: "Flag to say that a process should fail if there is an encryption\
    \ or decryption error."
  name: "encrypt.fail-on-error"
  defaultValue: true
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties"
  type: "java.lang.String"
  description: "A symmetric key. As a stronger alternative, consider using a keystore."
  shortDescription: "A symmetric key."
  name: "encrypt.key"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "java.lang.String"
  description: "Alias for a key in the store."
  shortDescription: "Alias for a key in the store."
  name: "encrypt.key-store.alias"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file, e.g. classpath:/keystore.jks."
  shortDescription: "Location of the key store file, e.g. classpath:/keystore.jks."
  name: "encrypt.key-store.location"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "java.lang.String"
  description: "Password that locks the keystore."
  shortDescription: "Password that locks the keystore."
  name: "encrypt.key-store.password"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "java.lang.String"
  description: "Secret protecting the key (defaults to the same as the password)."
  shortDescription: "Secret protecting the key (defaults to the same as the password)."
  name: "encrypt.key-store.secret"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "java.lang.String"
  description: "The KeyStore type. Defaults to jks."
  shortDescription: "The KeyStore type."
  name: "encrypt.key-store.type"
  defaultValue: "jks"
- owner: "org.springframework.cloud.bootstrap.encrypt.RsaProperties"
  type: "org.springframework.security.rsa.crypto.RsaAlgorithm"
  description: "The RSA algorithm to use (DEFAULT or OEAP). Once it is set, do not\
    \ change it (or existing ciphers will not be decryptable)."
  shortDescription: "The RSA algorithm to use (DEFAULT or OEAP)."
  name: "encrypt.rsa.algorithm"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.RsaProperties"
  type: "java.lang.String"
  description: "Salt for the random secret used to encrypt cipher text. Once it is\
    \ set, do not change it (or existing ciphers will not be decryptable)."
  shortDescription: "Salt for the random secret used to encrypt cipher text."
  name: "encrypt.rsa.salt"
  defaultValue: "deadbeef"
- owner: "org.springframework.cloud.bootstrap.encrypt.RsaProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that \"strong\" AES encryption should be used internally.\
    \ If true, then the GCM algorithm is applied to the AES encrypted bytes. Default\
    \ is false (in which case \"standard\" CBC is used instead). Once it is set, do\
    \ not change it (or existing ciphers will not be decryptable)."
  shortDescription: "Flag to indicate that \"strong\" AES encryption should be used\
    \ internally."
  name: "encrypt.rsa.strong"
  defaultValue: false
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties"
  type: "java.lang.String"
  description: "A salt for the symmetric key, in the form of a hex-encoded byte array.\
    \ As a stronger alternative, consider using a keystore."
  shortDescription: "A salt for the symmetric key, in the form of a hex-encoded byte\
    \ array."
  name: "encrypt.salt"
  defaultValue: "deadbeef"
- type: "java.lang.Boolean"
  description: "Enable the /zookeeper endpoint to inspect the state of zookeeper."
  shortDescription: "Enable the /zookeeper endpoint to inspect the state of zookeeper."
  name: "endpoints.zookeeper.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether server can redirect a client request to a backup\
    \ server/cluster. If set to false, the server will handle the request directly,\
    \ If set to true, it may send HTTP redirect to the client, with a new server location."
  shortDescription: "Indicates whether server can redirect a client request to a backup\
    \ server/cluster."
  name: "eureka.client.allow-redirects"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Gets the list of availability zones (used in AWS data centers) for\
    \ the region in which this instance resides. The changes are effective at runtime\
    \ at the next registry fetch cycle as specified by registryFetchIntervalSeconds."
  shortDescription: "Gets the list of availability zones (used in AWS data centers)\
    \ for the region in which this instance resides."
  name: "eureka.client.availability-zones"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Gets the name of the implementation which implements BackupRegistry\
    \ to fetch the registry information as a fall back option for only the first time\
    \ when the eureka client starts. This may be needed for applications which needs\
    \ additional resiliency for registry information without which it cannot operate."
  shortDescription: "Gets the name of the implementation which implements BackupRegistry\
    \ to fetch the registry information as a fall back option for only the first time\
    \ when the eureka client starts."
  name: "eureka.client.backup-registry-impl"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Cache refresh executor exponential back off related property. It is\
    \ a maximum multiplier value for retry delay, in case where a sequence of timeouts\
    \ occurred."
  shortDescription: "Cache refresh executor exponential back off related property."
  name: "eureka.client.cache-refresh-executor-exponential-back-off-bound"
  defaultValue: 10
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "The thread pool size for the cacheRefreshExecutor to initialise with."
  shortDescription: "The thread pool size for the cacheRefreshExecutor to initialise\
    \ with."
  name: "eureka.client.cache-refresh-executor-thread-pool-size"
  defaultValue: 2
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "EurekaAccept name for client data accept."
  shortDescription: "EurekaAccept name for client data accept."
  name: "eureka.client.client-data-accept"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "This is a transient config and once the latest codecs are stable,\
    \ can be removed (as there will only be one)."
  shortDescription: "This is a transient config and once the latest codecs are stable,\
    \ can be removed (as there will only be one)."
  name: "eureka.client.decoder-name"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether the eureka client should disable fetching of delta\
    \ and should rather resort to getting the full registry information. Note that\
    \ the delta fetches can reduce the traffic tremendously, because the rate of change\
    \ with the eureka server is normally much lower than the rate of fetches. The\
    \ changes are effective at runtime at the next registry fetch cycle as specified\
    \ by registryFetchIntervalSeconds"
  shortDescription: "Indicates whether the eureka client should disable fetching of\
    \ delta and should rather resort to getting the full registry information."
  name: "eureka.client.disable-delta"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Get a replacement string for Dollar sign <code>$</code> during serializing/deserializing\
    \ information in eureka server."
  shortDescription: "Get a replacement string for Dollar sign <code>$</code> during\
    \ serializing/deserializing information in eureka server."
  name: "eureka.client.dollar-replacement"
  defaultValue: "_-"
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Flag to indicate that the Eureka client is enabled."
  shortDescription: "Flag to indicate that the Eureka client is enabled."
  name: "eureka.client.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "This is a transient config and once the latest codecs are stable,\
    \ can be removed (as there will only be one)."
  shortDescription: "This is a transient config and once the latest codecs are stable,\
    \ can be removed (as there will only be one)."
  name: "eureka.client.encoder-name"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Get a replacement string for underscore sign <code>_</code> during\
    \ serializing/ deserializing information in eureka server."
  shortDescription: "Get a replacement string for underscore sign <code>_</code> during\
    \ serializing/ deserializing information in eureka server."
  name: "eureka.client.escape-char-replacement"
  defaultValue: "__"
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Indicates how much time (in seconds) that the HTTP connections to\
    \ eureka server can stay idle before it can be closed. In the AWS environment,\
    \ it is recommended that the values is 30 seconds or less, since the firewall\
    \ cleans up the connection information after a few mins leaving the connection\
    \ hanging in limbo."
  shortDescription: "Indicates how much time (in seconds) that the HTTP connections\
    \ to eureka server can stay idle before it can be closed."
  name: "eureka.client.eureka-connection-idle-timeout-seconds"
  defaultValue: 30
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Indicates how long to wait (in seconds) before a connection to eureka\
    \ server needs to timeout. Note that the connections in the client are pooled\
    \ by org.apache.http.client.HttpClient and this setting affects the actual connection\
    \ creation and also the wait time to get the connection from the pool."
  shortDescription: "Indicates how long to wait (in seconds) before a connection to\
    \ eureka server needs to timeout."
  name: "eureka.client.eureka-server-connect-timeout-seconds"
  defaultValue: 5
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Gets the DNS name to be queried to get the list of eureka servers.This\
    \ information is not required if the contract returns the service urls by implementing\
    \ serviceUrls. The DNS mechanism is used when useDnsForFetchingServiceUrls is\
    \ set to true and the eureka client expects the DNS to configured a certain way\
    \ so that it can fetch changing eureka servers dynamically. The changes are effective\
    \ at runtime."
  shortDescription: "Gets the DNS name to be queried to get the list of eureka servers.This\
    \ information is not required if the contract returns the service urls by implementing\
    \ serviceUrls."
  name: "eureka.client.eureka-server-d-n-s-name"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Gets the port to be used to construct the service url to contact eureka\
    \ server when the list of eureka servers come from the DNS.This information is\
    \ not required if the contract returns the service urls eurekaServerServiceUrls(String).\
    \ The DNS mechanism is used when useDnsForFetchingServiceUrls is set to true and\
    \ the eureka client expects the DNS to configured a certain way so that it can\
    \ fetch changing eureka servers dynamically. The changes are effective at runtime."
  shortDescription: "Gets the port to be used to construct the service url to contact\
    \ eureka server when the list of eureka servers come from the DNS.This information\
    \ is not required if the contract returns the service urls eurekaServerServiceUrls(String)."
  name: "eureka.client.eureka-server-port"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Indicates how long to wait (in seconds) before a read from eureka\
    \ server needs to timeout."
  shortDescription: "Indicates how long to wait (in seconds) before a read from eureka\
    \ server needs to timeout."
  name: "eureka.client.eureka-server-read-timeout-seconds"
  defaultValue: 8
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Gets the total number of connections that is allowed from eureka client\
    \ to all eureka servers."
  shortDescription: "Gets the total number of connections that is allowed from eureka\
    \ client to all eureka servers."
  name: "eureka.client.eureka-server-total-connections"
  defaultValue: 200
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Gets the total number of connections that is allowed from eureka client\
    \ to a eureka server host."
  shortDescription: "Gets the total number of connections that is allowed from eureka\
    \ client to a eureka server host."
  name: "eureka.client.eureka-server-total-connections-per-host"
  defaultValue: 50
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Gets the URL context to be used to construct the service url to contact\
    \ eureka server when the list of eureka servers come from the DNS. This information\
    \ is not required if the contract returns the service urls from eurekaServerServiceUrls.\
    \ The DNS mechanism is used when useDnsForFetchingServiceUrls is set to true and\
    \ the eureka client expects the DNS to configured a certain way so that it can\
    \ fetch changing eureka servers dynamically. The changes are effective at runtime."
  shortDescription: "Gets the URL context to be used to construct the service url\
    \ to contact eureka server when the list of eureka servers come from the DNS."
  name: "eureka.client.eureka-server-u-r-l-context"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Indicates how often(in seconds) to poll for changes to eureka server\
    \ information. Eureka servers could be added or removed and this setting controls\
    \ how soon the eureka clients should know about it."
  shortDescription: "Indicates how often(in seconds) to poll for changes to eureka\
    \ server information."
  name: "eureka.client.eureka-service-url-poll-interval-seconds"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether this client should fetch eureka registry information\
    \ from eureka server."
  shortDescription: "Indicates whether this client should fetch eureka registry information\
    \ from eureka server."
  name: "eureka.client.fetch-registry"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Comma separated list of regions for which the eureka registry information\
    \ will be fetched. It is mandatory to define the availability zones for each of\
    \ these regions as returned by availabilityZones. Failing to do so, will result\
    \ in failure of discovery client startup."
  shortDescription: "Comma separated list of regions for which the eureka registry\
    \ information will be fetched."
  name: "eureka.client.fetch-remote-regions-registry"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether to get the applications after filtering the applications\
    \ for instances with only InstanceStatus UP states."
  shortDescription: "Indicates whether to get the applications after filtering the\
    \ applications for instances with only InstanceStatus UP states."
  name: "eureka.client.filter-only-up-instances"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether the content fetched from eureka server has to be\
    \ compressed whenever it is supported by the server. The registry information\
    \ from the eureka server is compressed for optimum network traffic."
  shortDescription: "Indicates whether the content fetched from eureka server has\
    \ to be compressed whenever it is supported by the server."
  name: "eureka.client.g-zip-content"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables the Eureka health check handler."
  shortDescription: "Enables the Eureka health check handler."
  name: "eureka.client.healthcheck.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Heartbeat executor exponential back off related property. It is a\
    \ maximum multiplier value for retry delay, in case where a sequence of timeouts\
    \ occurred."
  shortDescription: "Heartbeat executor exponential back off related property."
  name: "eureka.client.heartbeat-executor-exponential-back-off-bound"
  defaultValue: 10
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "The thread pool size for the heartbeatExecutor to initialise with."
  shortDescription: "The thread pool size for the heartbeatExecutor to initialise\
    \ with."
  name: "eureka.client.heartbeat-executor-thread-pool-size"
  defaultValue: 2
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Indicates how long initially (in seconds) to replicate instance info\
    \ to the eureka server."
  shortDescription: "Indicates how long initially (in seconds) to replicate instance\
    \ info to the eureka server."
  name: "eureka.client.initial-instance-info-replication-interval-seconds"
  defaultValue: 40
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Indicates how often(in seconds) to replicate instance changes to be\
    \ replicated to the eureka server."
  shortDescription: "Indicates how often(in seconds) to replicate instance changes\
    \ to be replicated to the eureka server."
  name: "eureka.client.instance-info-replication-interval-seconds"
  defaultValue: 30
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether to log differences between the eureka server and\
    \ the eureka client in terms of registry information. Eureka client tries to retrieve\
    \ only delta changes from eureka server to minimize network traffic. After receiving\
    \ the deltas, eureka client reconciles the information from the server to verify\
    \ it has not missed out some information. Reconciliation failures could happen\
    \ when the client has had network issues communicating to server.If the reconciliation\
    \ fails, eureka client gets the full registry information. While getting the full\
    \ registry information, the eureka client can log the differences between the\
    \ client and the server and this setting controls that. The changes are effective\
    \ at runtime at the next registry fetch cycle as specified by registryFetchIntervalSecondsr"
  shortDescription: "Indicates whether to log differences between the eureka server\
    \ and the eureka client in terms of registry information."
  name: "eureka.client.log-delta-diff"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "If set to true, local status updates via ApplicationInfoManager will\
    \ trigger on-demand (but rate limited) register/updates to remote eureka servers."
  shortDescription: "If set to true, local status updates via ApplicationInfoManager\
    \ will trigger on-demand (but rate limited) register/updates to remote eureka\
    \ servers."
  name: "eureka.client.on-demand-update-status-change"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Order of the discovery client used by `CompositeDiscoveryClient` for\
    \ sorting available clients."
  shortDescription: "Order of the discovery client used by `CompositeDiscoveryClient`\
    \ for sorting available clients."
  name: "eureka.client.order"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether or not this instance should try to use the eureka\
    \ server in the same zone for latency and/or other reason. Ideally eureka clients\
    \ are configured to talk to servers in the same zone The changes are effective\
    \ at runtime at the next registry fetch cycle as specified by registryFetchIntervalSeconds"
  shortDescription: "Indicates whether or not this instance should try to use the\
    \ eureka server in the same zone for latency and/or other reason."
  name: "eureka.client.prefer-same-zone-eureka"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "org.springframework.core.env.PropertyResolver"
  name: "eureka.client.property-resolver"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Gets the proxy host to eureka server if any."
  shortDescription: "Gets the proxy host to eureka server if any."
  name: "eureka.client.proxy-host"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Gets the proxy password if any."
  shortDescription: "Gets the proxy password if any."
  name: "eureka.client.proxy-password"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Gets the proxy port to eureka server if any."
  shortDescription: "Gets the proxy port to eureka server if any."
  name: "eureka.client.proxy-port"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Gets the proxy user name if any."
  shortDescription: "Gets the proxy user name if any."
  name: "eureka.client.proxy-user-name"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Determines whether the EurekaClient instance can be refreshed or not(If\
    \ disabled none of the Eureka client properties will be refreshable)."
  shortDescription: "Determines whether the EurekaClient instance can be refreshed\
    \ or not(If disabled none of the Eureka client properties will be refreshable)."
  name: "eureka.client.refresh.enable"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Gets the region (used in AWS datacenters) where this instance resides."
  shortDescription: "Gets the region (used in AWS datacenters) where this instance\
    \ resides."
  name: "eureka.client.region"
  defaultValue: "us-east-1"
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether or not this instance should register its information\
    \ with eureka server for discovery by others. In some cases, you do not want your\
    \ instances to be discovered whereas you just want do discover other instances."
  shortDescription: "Indicates whether or not this instance should register its information\
    \ with eureka server for discovery by others."
  name: "eureka.client.register-with-eureka"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Integer"
  description: "Indicates how often(in seconds) to fetch the registry information\
    \ from the eureka server."
  shortDescription: "Indicates how often(in seconds) to fetch the registry information\
    \ from the eureka server."
  name: "eureka.client.registry-fetch-interval-seconds"
  defaultValue: 30
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.String"
  description: "Indicates whether the client is only interested in the registry information\
    \ for a single VIP."
  shortDescription: "Indicates whether the client is only interested in the registry\
    \ information for a single VIP."
  name: "eureka.client.registry-refresh-single-vip-address"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Map of availability zone to list of fully qualified URLs to communicate\
    \ with eureka server. Each value can be a single URL or a comma separated list\
    \ of alternative locations. Typically the eureka server URLs carry protocol,host,port,context\
    \ and version information if any. Example: https://ec2-256-156-243-129.compute-1.amazonaws.com:7001/eureka/\
    \ The changes are effective at runtime at the next service url refresh cycle as\
    \ specified by eurekaServiceUrlPollIntervalSeconds."
  shortDescription: "Map of availability zone to list of fully qualified URLs to communicate\
    \ with eureka server."
  name: "eureka.client.service-url"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether the client should enforce registration during initialization.\
    \ Defaults to false."
  shortDescription: "Indicates whether the client should enforce registration during\
    \ initialization."
  name: "eureka.client.should-enforce-registration-at-init"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether the client should explicitly unregister itself from\
    \ the remote server on client shutdown."
  shortDescription: "Indicates whether the client should explicitly unregister itself\
    \ from the remote server on client shutdown."
  name: "eureka.client.should-unregister-on-shutdown"
  defaultValue: true
- owner: "org.springframework.cloud.configuration.TlsProperties"
  type: "java.lang.Boolean"
  name: "eureka.client.tls.enabled"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.TlsProperties"
  type: "java.lang.String"
  name: "eureka.client.tls.key-password"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.TlsProperties"
  type: "org.springframework.core.io.Resource"
  name: "eureka.client.tls.key-store"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.TlsProperties"
  type: "java.lang.String"
  name: "eureka.client.tls.key-store-password"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.TlsProperties"
  type: "java.lang.String"
  name: "eureka.client.tls.key-store-type"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.TlsProperties"
  type: "org.springframework.core.io.Resource"
  name: "eureka.client.tls.trust-store"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.TlsProperties"
  type: "java.lang.String"
  name: "eureka.client.tls.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.TlsProperties"
  type: "java.lang.String"
  name: "eureka.client.tls.trust-store-type"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether the eureka client should use the DNS mechanism to\
    \ fetch a list of eureka servers to talk to. When the DNS name is updated to have\
    \ additional servers, that information is used immediately after the eureka client\
    \ polls for that information as specified in eurekaServiceUrlPollIntervalSeconds.\
    \ Alternatively, the service urls can be returned serviceUrls, but the users should\
    \ implement their own mechanism to return the updated list in case of changes.\
    \ The changes are effective at runtime."
  shortDescription: "Indicates whether the eureka client should use the DNS mechanism\
    \ to fetch a list of eureka servers to talk to."
  name: "eureka.client.use-dns-for-fetching-service-urls"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Enables the use of WebClient for Eureka HTTP Client."
  shortDescription: "Enables the use of WebClient for Eureka HTTP Client."
  name: "eureka.client.webclient.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaDashboardProperties"
  type: "java.lang.Boolean"
  description: "Flag to enable the Eureka dashboard. Default true."
  shortDescription: "Flag to enable the Eureka dashboard."
  name: "eureka.dashboard.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaDashboardProperties"
  type: "java.lang.String"
  description: "The path to the Eureka dashboard (relative to the servlet path). Defaults\
    \ to \"/\"."
  shortDescription: "The path to the Eureka dashboard (relative to the servlet path)."
  name: "eureka.dashboard.path"
  defaultValue: "/"
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the AWS autoscaling group name associated with this instance.\
    \ This information is specifically used in an AWS environment to automatically\
    \ put an instance out of service after the instance is launched and it has been\
    \ disabled for traffic.."
  shortDescription: "Gets the AWS autoscaling group name associated with this instance."
  name: "eureka.instance.a-s-g-name"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Get the name of the application group to be registered with eureka."
  shortDescription: "Get the name of the application group to be registered with eureka."
  name: "eureka.instance.app-group-name"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Get the name of the application to be registered with eureka."
  shortDescription: "Get the name of the application to be registered with eureka."
  name: "eureka.instance.appname"
  defaultValue: "unknown"
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "com.netflix.appinfo.DataCenterInfo"
  description: "Returns the data center this instance is deployed. This information\
    \ is used to get some AWS specific instance information if the instance is deployed\
    \ in AWS."
  shortDescription: "Returns the data center this instance is deployed."
  name: "eureka.instance.data-center-info"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String[]"
  name: "eureka.instance.default-address-resolution-order"
  defaultValue: []
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "org.springframework.core.env.Environment"
  name: "eureka.instance.environment"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the absolute health check page URL for this instance. The users\
    \ can provide the healthCheckUrlPath if the health check page resides in the same\
    \ instance talking to eureka, else in the cases where the instance is a proxy\
    \ for some other server, users can provide the full URL. If the full URL is provided\
    \ it takes precedence. <p> It is normally used for making educated decisions based\
    \ on the health of the instance - for example, it can be used to determine whether\
    \ to proceed deployments to an entire farm or stop the deployments without causing\
    \ further damage. The full URL should follow the format http://${eureka.hostname}:7001/\
    \ where the value ${eureka.hostname} is replaced at runtime."
  shortDescription: "Gets the absolute health check page URL for this instance."
  name: "eureka.instance.health-check-url"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the relative health check URL path for this instance. The health\
    \ check page URL is then constructed out of the hostname and the type of communication\
    \ - secure or unsecure as specified in securePort and nonSecurePort. It is normally\
    \ used for making educated decisions based on the health of the instance - for\
    \ example, it can be used to determine whether to proceed deployments to an entire\
    \ farm or stop the deployments without causing further damage."
  shortDescription: "Gets the relative health check URL path for this instance."
  name: "eureka.instance.health-check-url-path"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the absolute home page URL for this instance. The users can provide\
    \ the homePageUrlPath if the home page resides in the same instance talking to\
    \ eureka, else in the cases where the instance is a proxy for some other server,\
    \ users can provide the full URL. If the full URL is provided it takes precedence.\
    \ It is normally used for informational purposes for other services to use it\
    \ as a landing page. The full URL should follow the format http://${eureka.hostname}:7001/\
    \ where the value ${eureka.hostname} is replaced at runtime."
  shortDescription: "Gets the absolute home page URL for this instance."
  name: "eureka.instance.home-page-url"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the relative home page URL Path for this instance. The home page\
    \ URL is then constructed out of the hostName and the type of communication -\
    \ secure or unsecure. It is normally used for informational purposes for other\
    \ services to use it as a landing page."
  shortDescription: "Gets the relative home page URL Path for this instance."
  name: "eureka.instance.home-page-url-path"
  defaultValue: "/"
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "The hostname if it can be determined at configuration time (otherwise\
    \ it will be guessed from OS primitives)."
  shortDescription: "The hostname if it can be determined at configuration time (otherwise\
    \ it will be guessed from OS primitives)."
  name: "eureka.instance.hostname"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "com.netflix.appinfo.InstanceInfo$InstanceStatus"
  description: "Initial status to register with remote Eureka server."
  shortDescription: "Initial status to register with remote Eureka server."
  name: "eureka.instance.initial-status"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether the instance should be enabled for taking traffic\
    \ as soon as it is registered with eureka. Sometimes the application might need\
    \ to do some pre-processing before it is ready to take traffic."
  shortDescription: "Indicates whether the instance should be enabled for taking traffic\
    \ as soon as it is registered with eureka."
  name: "eureka.instance.instance-enabled-onit"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Get the unique Id (within the scope of the appName) of this instance\
    \ to be registered with eureka."
  shortDescription: "Get the unique Id (within the scope of the appName) of this instance\
    \ to be registered with eureka."
  name: "eureka.instance.instance-id"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Get the IPAdress of the instance. This information is for academic\
    \ purposes only as the communication from other instances primarily happen using\
    \ the information supplied in {@link #getHostName(boolean)}."
  shortDescription: "Get the IPAdress of the instance."
  name: "eureka.instance.ip-address"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.Integer"
  description: "Indicates the time in seconds that the eureka server waits since it\
    \ received the last heartbeat before it can remove this instance from its view\
    \ and there by disallowing traffic to this instance. Setting this value too long\
    \ could mean that the traffic could be routed to the instance even though the\
    \ instance is not alive. Setting this value too small could mean, the instance\
    \ may be taken out of traffic because of temporary network glitches.This value\
    \ to be set to atleast higher than the value specified in leaseRenewalIntervalInSeconds."
  shortDescription: "Indicates the time in seconds that the eureka server waits since\
    \ it received the last heartbeat before it can remove this instance from its view\
    \ and there by disallowing traffic to this instance."
  name: "eureka.instance.lease-expiration-duration-in-seconds"
  defaultValue: 90
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.Integer"
  description: "Indicates how often (in seconds) the eureka client needs to send heartbeats\
    \ to eureka server to indicate that it is still alive. If the heartbeats are not\
    \ received for the period specified in leaseExpirationDurationInSeconds, eureka\
    \ server will remove the instance from its view, there by disallowing traffic\
    \ to this instance. Note that the instance could still not take traffic if it\
    \ implements HealthCheckCallback and then decides to make itself unavailable."
  shortDescription: "Indicates how often (in seconds) the eureka client needs to send\
    \ heartbeats to eureka server to indicate that it is still alive."
  name: "eureka.instance.lease-renewal-interval-in-seconds"
  defaultValue: 30
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Gets the metadata name/value pairs associated with this instance.\
    \ This information is sent to eureka server and can be used by other instances."
  shortDescription: "Gets the metadata name/value pairs associated with this instance."
  name: "eureka.instance.metadata-map"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Get the namespace used to find properties. Ignored in Spring Cloud."
  shortDescription: "Get the namespace used to find properties."
  name: "eureka.instance.namespace"
  defaultValue: "eureka"
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.Integer"
  description: "Get the non-secure port on which the instance should receive traffic."
  shortDescription: "Get the non-secure port on which the instance should receive\
    \ traffic."
  name: "eureka.instance.non-secure-port"
  defaultValue: 80
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether the non-secure port should be enabled for traffic\
    \ or not."
  shortDescription: "Indicates whether the non-secure port should be enabled for traffic\
    \ or not."
  name: "eureka.instance.non-secure-port-enabled"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.Boolean"
  description: "Flag to say that, when guessing a hostname, the IP address of the\
    \ server should be used in preference to the hostname reported by the OS."
  shortDescription: "Flag to say that, when guessing a hostname, the IP address of\
    \ the server should be used in preference to the hostname reported by the OS."
  name: "eureka.instance.prefer-ip-address"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.server.InstanceRegistryProperties"
  type: "java.lang.Integer"
  description: "Value used in determining when leases are cancelled, default to 1\
    \ for standalone. Should be set to 0 for peer replicated eurekas"
  shortDescription: "Value used in determining when leases are cancelled, default\
    \ to 1 for standalone."
  name: "eureka.instance.registry.default-open-for-traffic-count"
  defaultValue: 1
- owner: "org.springframework.cloud.netflix.eureka.server.InstanceRegistryProperties"
  type: "java.lang.Integer"
  name: "eureka.instance.registry.expected-number-of-clients-sending-renews"
  defaultValue: 1
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the absolute secure health check page URL for this instance.\
    \ The users can provide the secureHealthCheckUrl if the health check page resides\
    \ in the same instance talking to eureka, else in the cases where the instance\
    \ is a proxy for some other server, users can provide the full URL. If the full\
    \ URL is provided it takes precedence. <p> It is normally used for making educated\
    \ decisions based on the health of the instance - for example, it can be used\
    \ to determine whether to proceed deployments to an entire farm or stop the deployments\
    \ without causing further damage. The full URL should follow the format http://${eureka.hostname}:7001/\
    \ where the value ${eureka.hostname} is replaced at runtime."
  shortDescription: "Gets the absolute secure health check page URL for this instance."
  name: "eureka.instance.secure-health-check-url"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.Integer"
  description: "Get the Secure port on which the instance should receive traffic."
  shortDescription: "Get the Secure port on which the instance should receive traffic."
  name: "eureka.instance.secure-port"
  defaultValue: 443
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.Boolean"
  description: "Indicates whether the secure port should be enabled for traffic or\
    \ not."
  shortDescription: "Indicates whether the secure port should be enabled for traffic\
    \ or not."
  name: "eureka.instance.secure-port-enabled"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the secure virtual host name defined for this instance. This\
    \ is typically the way other instance would find this instance by using the secure\
    \ virtual host name.Think of this as similar to the fully qualified domain name,\
    \ that the users of your services will need to find this instance."
  shortDescription: "Gets the secure virtual host name defined for this instance."
  name: "eureka.instance.secure-virtual-host-name"
  defaultValue: "unknown"
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the absolute status page URL path for this instance. The users\
    \ can provide the statusPageUrlPath if the status page resides in the same instance\
    \ talking to eureka, else in the cases where the instance is a proxy for some\
    \ other server, users can provide the full URL. If the full URL is provided it\
    \ takes precedence. It is normally used for informational purposes for other services\
    \ to find about the status of this instance. Users can provide a simple HTML indicating\
    \ what is the current status of the instance."
  shortDescription: "Gets the absolute status page URL path for this instance."
  name: "eureka.instance.status-page-url"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the relative status page URL path for this instance. The status\
    \ page URL is then constructed out of the hostName and the type of communication\
    \ - secure or unsecure as specified in securePort and nonSecurePort. It is normally\
    \ used for informational purposes for other services to find about the status\
    \ of this instance. Users can provide a simple HTML indicating what is the current\
    \ status of the instance."
  shortDescription: "Gets the relative status page URL path for this instance."
  name: "eureka.instance.status-page-url-path"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean"
  type: "java.lang.String"
  description: "Gets the virtual host name defined for this instance. This is typically\
    \ the way other instance would find this instance by using the virtual host name.Think\
    \ of this as similar to the fully qualified domain name, that the users of your\
    \ services will need to find this instance."
  shortDescription: "Gets the virtual host name defined for this instance."
  name: "eureka.instance.virtual-host-name"
  defaultValue: "unknown"
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.a-s-g-cache-expiry-timeout-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.a-s-g-query-timeout-ms"
  defaultValue: 300
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.a-s-g-update-interval-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.String"
  name: "eureka.server.a-w-s-access-id"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.String"
  name: "eureka.server.a-w-s-secret-key"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.batch-replication"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "com.netflix.eureka.aws.AwsBindingStrategy"
  name: "eureka.server.binding-strategy"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.delta-retention-timer-interval-in-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.disable-delta"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.disable-delta-for-remote-regions"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.disable-transparent-fallback-to-other-region"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.e-i-p-bind-rebind-retries"
  defaultValue: 3
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.e-i-p-binding-retry-interval-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.e-i-p-binding-retry-interval-ms-when-unbound"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.enable-replicated-request-compression"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.enable-self-preservation"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.eviction-interval-timer-in-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.expected-client-renewal-interval-seconds"
  defaultValue: 30
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.g-zip-content-from-remote-region"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.initial-capacity-of-response-cache"
  defaultValue: 1000
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.String"
  name: "eureka.server.json-codec-name"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.String"
  name: "eureka.server.list-auto-scaling-groups-role-name"
  defaultValue: "ListAutoScalingGroups"
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.log-identity-headers"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.max-elements-in-peer-replication-pool"
  defaultValue: 10000
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.max-elements-in-status-replication-pool"
  defaultValue: 10000
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.max-idle-thread-age-in-minutes-for-peer-replication"
  defaultValue: 15
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.max-idle-thread-in-minutes-age-for-status-replication"
  defaultValue: 10
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.max-threads-for-peer-replication"
  defaultValue: 20
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.max-threads-for-status-replication"
  defaultValue: 1
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.max-time-for-replication"
  defaultValue: 30000
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.min-available-instances-for-peer-replication"
  defaultValue: -1
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.min-threads-for-peer-replication"
  defaultValue: 5
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.min-threads-for-status-replication"
  defaultValue: 1
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.String"
  name: "eureka.server.my-url"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.number-of-replication-retries"
  defaultValue: 5
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.peer-eureka-nodes-update-interval-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.peer-eureka-status-refresh-time-interval-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.peer-node-connect-timeout-ms"
  defaultValue: 200
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.peer-node-connection-idle-timeout-seconds"
  defaultValue: 30
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.peer-node-read-timeout-ms"
  defaultValue: 200
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.peer-node-total-connections"
  defaultValue: 1000
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.peer-node-total-connections-per-host"
  defaultValue: 500
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.prime-aws-replica-connections"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "org.springframework.core.env.PropertyResolver"
  name: "eureka.server.property-resolver"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.rate-limiter-burst-size"
  defaultValue: 10
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.rate-limiter-enabled"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.rate-limiter-full-fetch-average-rate"
  defaultValue: 100
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.util.Set<java.lang.String>"
  name: "eureka.server.rate-limiter-privileged-clients"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.rate-limiter-registry-fetch-average-rate"
  defaultValue: 500
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.rate-limiter-throttle-standard-clients"
  defaultValue: false
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.registry-sync-retries"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.registry-sync-retry-wait-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.util.Map<java.lang.String,java.util.Set<java.lang.String>>"
  name: "eureka.server.remote-region-app-whitelist"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.remote-region-connect-timeout-ms"
  defaultValue: 1000
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.remote-region-connection-idle-timeout-seconds"
  defaultValue: 30
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.remote-region-fetch-thread-pool-size"
  defaultValue: 20
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.remote-region-read-timeout-ms"
  defaultValue: 1000
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.remote-region-registry-fetch-interval"
  defaultValue: 30
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.remote-region-total-connections"
  defaultValue: 1000
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.remote-region-total-connections-per-host"
  defaultValue: 500
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.String"
  name: "eureka.server.remote-region-trust-store"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.String"
  name: "eureka.server.remote-region-trust-store-password"
  defaultValue: "changeit"
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.String[]"
  name: "eureka.server.remote-region-urls"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  name: "eureka.server.remote-region-urls-with-name"
  defaultValue: ""
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Double"
  name: "eureka.server.renewal-percent-threshold"
  defaultValue: 0.85
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.renewal-threshold-update-interval-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.response-cache-auto-expiration-in-seconds"
  defaultValue: 180
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.response-cache-update-interval-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.retention-time-in-m-s-in-delta-queue"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.route53-bind-rebind-retries"
  defaultValue: 3
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.route53-binding-retry-interval-ms"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Long"
  name: "eureka.server.route53-domain-t-t-l"
  defaultValue: 30
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.sync-when-timestamp-differs"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Boolean"
  name: "eureka.server.use-read-only-response-cache"
  defaultValue: true
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.Integer"
  name: "eureka.server.wait-time-in-ms-when-sync-empty"
  defaultValue: 0
- owner: "org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean"
  type: "java.lang.String"
  name: "eureka.server.xml-codec-name"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.gremlin.GremlinProperties"
  type: "java.lang.String"
  name: "gremlin.endpoint"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.gremlin.GremlinProperties"
  type: "java.lang.String"
  name: "gremlin.password"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.gremlin.GremlinProperties"
  type: "java.lang.Integer"
  name: "gremlin.port"
  defaultValue: 0
- owner: "com.microsoft.azure.spring.autoconfigure.gremlin.GremlinProperties"
  type: "java.lang.Boolean"
  name: "gremlin.ssl-enabled"
  defaultValue: true
- owner: "com.microsoft.azure.spring.autoconfigure.gremlin.GremlinProperties"
  type: "java.lang.Boolean"
  name: "gremlin.telemetry-allowed"
  defaultValue: true
- owner: "com.microsoft.azure.spring.autoconfigure.gremlin.GremlinProperties"
  type: "java.lang.String"
  name: "gremlin.username"
  defaultValue: ""
- owner: "org.springframework.cloud.config.client.ConfigClientHealthProperties"
  type: "java.time.Duration"
  description: "Time to live for cached result. Default 5 min."
  shortDescription: "Time to live for cached result."
  name: "health.config.time-to-live"
  defaultValue: "5m"
- type: "java.util.Map<java.lang.String,java.lang.Object>"
  description: "Arbitrary properties to add to the info endpoint."
  shortDescription: "Arbitrary properties to add to the info endpoint."
  name: "info"
  defaultValue: ""
- owner: "net.bull.javamelody.JavaMelodyConfigurationProperties"
  type: "java.lang.Boolean"
  description: "If JavaMelody should be enabled within the application."
  shortDescription: "If JavaMelody should be enabled within the application."
  name: "javamelody.enabled"
  defaultValue: true
- owner: "net.bull.javamelody.JavaMelodyConfigurationProperties"
  type: "java.lang.String"
  description: "Comma-separated list of data source names which should be excluded\
    \ from monitoring."
  shortDescription: "Comma-separated list of data source names which should be excluded\
    \ from monitoring."
  name: "javamelody.excluded-datasources"
  defaultValue: ""
- owner: "net.bull.javamelody.JavaMelodyConfigurationProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Map of initialization parameters to be passed to the JavaMelody monitoring\
    \ filter. The available parameters are listed here: https://github.com/javamelody/javamelody/wiki/UserGuide#6-optional-parameters"
  shortDescription: "Map of initialization parameters to be passed to the JavaMelody\
    \ monitoring filter."
  name: "javamelody.init-parameters"
  defaultValue: ""
- owner: "net.bull.javamelody.JavaMelodyConfigurationProperties"
  type: "java.lang.Boolean"
  description: "If /monitoring should be enabled for reports in the management http\
    \ port instead of on the application http port."
  shortDescription: "If /monitoring should be enabled for reports in the management\
    \ http port instead of on the application http port."
  name: "javamelody.management-endpoint-monitoring-enabled"
  defaultValue: false
- type: "java.nio.charset.Charset"
  description: "Charset to use for console output."
  shortDescription: "Charset to use for console output."
  name: "logging.charset.console"
  defaultValue: ""
- type: "java.nio.charset.Charset"
  description: "Charset to use for file output."
  shortDescription: "Charset to use for file output."
  name: "logging.charset.file"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Location of the logging configuration file. For instance, `classpath:logback.xml`\
    \ for Logback."
  shortDescription: "Location of the logging configuration file."
  name: "logging.config"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Conversion word used when logging exceptions."
  shortDescription: "Conversion word used when logging exceptions."
  name: "logging.exception-conversion-word"
  defaultValue: "%wEx"
- type: "java.lang.String"
  description: "Log file name (for instance, `myapp.log`). Names can be an exact location\
    \ or relative to the current directory."
  shortDescription: "Log file name (for instance, `myapp.log`)."
  name: "logging.file"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "logging.file.name"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Whether to clean the archive log files on startup. Only supported\
    \ with the default logback setup."
  shortDescription: "Whether to clean the archive log files on startup."
  name: "logging.file.clean-history-on-start"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.clean-history-on-start"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Integer"
  description: "Maximum number of days archive log files are kept. Only supported\
    \ with the default logback setup."
  shortDescription: "Maximum number of days archive log files are kept."
  name: "logging.file.max-history"
  defaultValue: 7
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.max-history"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum log file size. Only supported with the default logback setup."
  shortDescription: "Maximum log file size."
  name: "logging.file.max-size"
  defaultValue: "10MB"
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.max-file-size"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Log file name (for instance, `myapp.log`). Names can be an exact location\
    \ or relative to the current directory."
  shortDescription: "Log file name (for instance, `myapp.log`)."
  name: "logging.file.name"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Location of the log file. For instance, `/var/log`."
  shortDescription: "Location of the log file."
  name: "logging.file.path"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "org.springframework.util.unit.DataSize"
  description: "Total size of log backups to be kept. Only supported with the default\
    \ logback setup."
  shortDescription: "Total size of log backups to be kept."
  name: "logging.file.total-size-cap"
  defaultValue: "0B"
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.total-size-cap"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  description: "Log groups to quickly change multiple loggers at the same time. For\
    \ instance, `logging.group.db=org.hibernate,org.springframework.jdbc`."
  shortDescription: "Log groups to quickly change multiple loggers at the same time."
  name: "logging.group"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`."
  shortDescription: "Log levels severity mapping."
  name: "logging.level"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Whether to clean the archive log files on startup."
  shortDescription: "Whether to clean the archive log files on startup."
  name: "logging.logback.rollingpolicy.clean-history-on-start"
  defaultValue: false
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Pattern for rolled-over log file names."
  shortDescription: "Pattern for rolled-over log file names."
  name: "logging.logback.rollingpolicy.file-name-pattern"
  defaultValue: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum log file size."
  shortDescription: "Maximum log file size."
  name: "logging.logback.rollingpolicy.max-file-size"
  defaultValue: "10MB"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Integer"
  description: "Maximum number of days archive log files are kept."
  shortDescription: "Maximum number of days archive log files are kept."
  name: "logging.logback.rollingpolicy.max-history"
  defaultValue: 7
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "org.springframework.util.unit.DataSize"
  description: "Total size of log backups to be kept."
  shortDescription: "Total size of log backups to be kept."
  name: "logging.logback.rollingpolicy.total-size-cap"
  defaultValue: "0B"
- type: "java.lang.String"
  description: "Location of the log file. For instance, `/var/log`."
  shortDescription: "Location of the log file."
  name: "logging.path"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "logging.file.path"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Appender pattern for output to the console. Supported only with the\
    \ default Logback setup."
  shortDescription: "Appender pattern for output to the console."
  name: "logging.pattern.console"
  defaultValue: "%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint}\
    \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint}\
    \ %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Appender pattern for log date format. Supported only with the default\
    \ Logback setup."
  shortDescription: "Appender pattern for log date format."
  name: "logging.pattern.dateformat"
  defaultValue: "yyyy-MM-dd HH:mm:ss.SSS"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Appender pattern for output to a file. Supported only with the default\
    \ Logback setup."
  shortDescription: "Appender pattern for output to a file."
  name: "logging.pattern.file"
  defaultValue: "%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p}\
    \ ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Appender pattern for log level. Supported only with the default Logback\
    \ setup."
  shortDescription: "Appender pattern for log level."
  name: "logging.pattern.level"
  defaultValue: "%5p"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Pattern for rolled-over log file names. Supported only with the default\
    \ Logback setup."
  shortDescription: "Pattern for rolled-over log file names."
  name: "logging.pattern.rolling-file-name"
  defaultValue: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.file-name-pattern"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Register a shutdown hook for the logging system when it is initialized.\
    \ Disabled automatically when deployed as a war file."
  shortDescription: "Register a shutdown hook for the logging system when it is initialized."
  name: "logging.register-shutdown-hook"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable storage of audit events."
  shortDescription: "Whether to enable storage of audit events."
  name: "management.auditevents.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable extended Cloud Foundry actuator endpoints."
  shortDescription: "Whether to enable extended Cloud Foundry actuator endpoints."
  name: "management.cloudfoundry.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to skip SSL verification for Cloud Foundry actuator endpoint\
    \ security calls."
  shortDescription: "Whether to skip SSL verification for Cloud Foundry actuator endpoint\
    \ security calls."
  name: "management.cloudfoundry.skip-ssl-validation"
  defaultValue: false
- owner: "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.auditevents.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the auditevents endpoint."
  shortDescription: "Whether to enable the auditevents endpoint."
  name: "management.endpoint.auditevents.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.beans.BeansEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.beans.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.beans.BeansEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the beans endpoint."
  shortDescription: "Whether to enable the beans endpoint."
  name: "management.endpoint.beans.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.stream.endpoint.BindingsEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.bindings.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.cloud.stream.endpoint.BindingsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the bindings endpoint."
  shortDescription: "Whether to enable the bindings endpoint."
  name: "management.endpoint.bindings.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.bus.endpoint.EnvironmentBusEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the busenv endpoint."
  shortDescription: "Whether to enable the busenv endpoint."
  name: "management.endpoint.busenv.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.bus.endpoint.RefreshBusEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the busrefresh endpoint."
  shortDescription: "Whether to enable the busrefresh endpoint."
  name: "management.endpoint.busrefresh.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.cache.CachesEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.caches.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.cache.CachesEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the caches endpoint."
  shortDescription: "Whether to enable the caches endpoint."
  name: "management.endpoint.caches.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.stream.endpoint.ChannelsEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.channels.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.cloud.stream.endpoint.ChannelsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the channels endpoint."
  shortDescription: "Whether to enable the channels endpoint."
  name: "management.endpoint.channels.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.conditions.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the conditions endpoint."
  shortDescription: "Whether to enable the conditions endpoint."
  name: "management.endpoint.conditions.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
  type: "java.lang.String[]"
  description: "Keys that should be sanitized in addition to those already configured.\
    \ Keys can be simple strings that the property ends with or regular expressions."
  shortDescription: "Keys that should be sanitized in addition to those already configured."
  name: "management.endpoint.configprops.additional-keys-to-sanitize"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.configprops.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the configprops endpoint."
  shortDescription: "Whether to enable the configprops endpoint."
  name: "management.endpoint.configprops.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
  type: "java.lang.String[]"
  description: "Keys that should be sanitized. Keys can be simple strings that the\
    \ property ends with or regular expressions."
  shortDescription: "Keys that should be sanitized."
  name: "management.endpoint.configprops.keys-to-sanitize"
  defaultValue:
  - "password"
  - "secret"
  - "key"
  - "token"
  - ".*credentials.*"
  - "vcap_services"
  - "sun.java.command"
- owner: "org.springframework.cloud.consul.ConsulEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.consul.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.cloud.consul.ConsulEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the consul endpoint."
  shortDescription: "Whether to enable the consul endpoint."
  name: "management.endpoint.consul.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
  type: "java.lang.String[]"
  description: "Keys that should be sanitized in addition to those already configured.\
    \ Keys can be simple strings that the property ends with or regular expressions."
  shortDescription: "Keys that should be sanitized in addition to those already configured."
  name: "management.endpoint.env.additional-keys-to-sanitize"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.env.EnvironmentEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.env.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.env.EnvironmentEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the env endpoint."
  shortDescription: "Whether to enable the env endpoint."
  name: "management.endpoint.env.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
  type: "java.lang.String[]"
  description: "Keys that should be sanitized. Keys can be simple strings that the\
    \ property ends with or regular expressions."
  shortDescription: "Keys that should be sanitized."
  name: "management.endpoint.env.keys-to-sanitize"
  defaultValue:
  - "password"
  - "secret"
  - "key"
  - "token"
  - ".*credentials.*"
  - "vcap_services"
  - "sun.java.command"
- type: "java.lang.Boolean"
  description: "Enables writable environment endpoint."
  shortDescription: "Enables writable environment endpoint."
  name: "management.endpoint.env.post.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.client.actuator.FeaturesEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.features.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.cloud.client.actuator.FeaturesEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the features endpoint."
  shortDescription: "Whether to enable the features endpoint."
  name: "management.endpoint.features.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.flyway.FlywayEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.flyway.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.flyway.FlywayEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the flyway endpoint."
  shortDescription: "Whether to enable the flyway endpoint."
  name: "management.endpoint.flyway.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.health.HealthEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.health.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.health.HealthEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the health endpoint."
  shortDescription: "Whether to enable the health endpoint."
  name: "management.endpoint.health.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
  type: "java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group>"
  description: "Health endpoint groups."
  shortDescription: "Health endpoint groups."
  name: "management.endpoint.health.group"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable liveness and readiness probes."
  shortDescription: "Whether to enable liveness and readiness probes."
  name: "management.endpoint.health.probes.enabled"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
  type: "java.util.Set<java.lang.String>"
  description: "Roles used to determine whether or not a user is authorized to be\
    \ shown details. When empty, all authenticated users are authorized."
  shortDescription: "Roles used to determine whether or not a user is authorized to\
    \ be shown details."
  name: "management.endpoint.health.roles"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
  type: "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"
  description: "When to show components. If not specified the 'show-details' setting\
    \ will be used."
  shortDescription: "When to show components."
  name: "management.endpoint.health.show-components"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
  type: "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"
  description: "When to show full health details."
  shortDescription: "When to show full health details."
  name: "management.endpoint.health.show-details"
  defaultValue: "never"
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
  type: "java.util.Map<java.lang.String,java.lang.Integer>"
  description: "Mapping of health statuses to HTTP status codes. By default, registered\
    \ health statuses map to sensible defaults (for example, UP maps to 200)."
  shortDescription: "Mapping of health statuses to HTTP status codes."
  name: "management.endpoint.health.status.http-mapping"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of health statuses in order of severity."
  shortDescription: "Comma-separated list of health statuses in order of severity."
  name: "management.endpoint.health.status.order"
  defaultValue:
  - "DOWN"
  - "OUT_OF_SERVICE"
  - "UP"
  - "UNKNOWN"
- owner: "org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.heapdump.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the heapdump endpoint."
  shortDescription: "Whether to enable the heapdump endpoint."
  name: "management.endpoint.heapdump.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.trace.http.HttpTraceEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.httptrace.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.trace.http.HttpTraceEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the httptrace endpoint."
  shortDescription: "Whether to enable the httptrace endpoint."
  name: "management.endpoint.httptrace.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.info.InfoEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.info.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.info.InfoEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the info endpoint."
  shortDescription: "Whether to enable the info endpoint."
  name: "management.endpoint.info.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.integration.IntegrationGraphEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.integrationgraph.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.integration.IntegrationGraphEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the integrationgraph endpoint."
  shortDescription: "Whether to enable the integrationgraph endpoint."
  name: "management.endpoint.integrationgraph.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Jolokia settings. Refer to the documentation of Jolokia for more details."
  shortDescription: "Jolokia settings."
  name: "management.endpoint.jolokia.config"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the jolokia endpoint."
  shortDescription: "Whether to enable the jolokia endpoint."
  name: "management.endpoint.jolokia.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.liquibase.LiquibaseEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.liquibase.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.liquibase.LiquibaseEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the liquibase endpoint."
  shortDescription: "Whether to enable the liquibase endpoint."
  name: "management.endpoint.liquibase.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.logfile.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the logfile endpoint."
  shortDescription: "Whether to enable the logfile endpoint."
  name: "management.endpoint.logfile.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties"
  type: "java.io.File"
  description: "External Logfile to be accessed. Can be used if the logfile is written\
    \ by output redirect and not by the logging system itself."
  shortDescription: "External Logfile to be accessed."
  name: "management.endpoint.logfile.external-file"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.logging.LoggersEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.loggers.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.logging.LoggersEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the loggers endpoint."
  shortDescription: "Whether to enable the loggers endpoint."
  name: "management.endpoint.loggers.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.mappings.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the mappings endpoint."
  shortDescription: "Whether to enable the mappings endpoint."
  name: "management.endpoint.mappings.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.metrics.MetricsEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.metrics.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.metrics.MetricsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the metrics endpoint."
  shortDescription: "Whether to enable the metrics endpoint."
  name: "management.endpoint.metrics.enabled"
  defaultValue: true
- owner: "net.bull.javamelody.MonitoringEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the monitoring endpoint."
  shortDescription: "Whether to enable the monitoring endpoint."
  name: "management.endpoint.monitoring.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable the /pause endpoint (to send Lifecycle.stop())."
  shortDescription: "Enable the /pause endpoint (to send Lifecycle.stop())."
  name: "management.endpoint.pause.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the prometheus endpoint."
  shortDescription: "Whether to enable the prometheus endpoint."
  name: "management.endpoint.prometheus.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.quartz.QuartzEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.quartz.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.quartz.QuartzEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the quartz endpoint."
  shortDescription: "Whether to enable the quartz endpoint."
  name: "management.endpoint.quartz.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.endpoint.RefreshEndpoint"
  type: "java.lang.Boolean"
  description: "Enable the /refresh endpoint to refresh configuration and re-initialize\
    \ refresh scoped beans."
  shortDescription: "Enable the /refresh endpoint to refresh configuration and re-initialize\
    \ refresh scoped beans."
  name: "management.endpoint.refresh.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.context.restart.RestartEndpoint"
  type: "java.lang.Boolean"
  description: "Enable the /restart endpoint to restart the application context."
  shortDescription: "Enable the /restart endpoint to restart the application context."
  name: "management.endpoint.restart.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable the /resume endpoint (to send Lifecycle.start())."
  shortDescription: "Enable the /resume endpoint (to send Lifecycle.start())."
  name: "management.endpoint.resume.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.scheduledtasks.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the scheduledtasks endpoint."
  shortDescription: "Whether to enable the scheduledtasks endpoint."
  name: "management.endpoint.scheduledtasks.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.serviceregistry.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the serviceregistry endpoint."
  shortDescription: "Whether to enable the serviceregistry endpoint."
  name: "management.endpoint.serviceregistry.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.session.SessionsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the sessions endpoint."
  shortDescription: "Whether to enable the sessions endpoint."
  name: "management.endpoint.sessions.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.context.ShutdownEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the shutdown endpoint."
  shortDescription: "Whether to enable the shutdown endpoint."
  name: "management.endpoint.shutdown.enabled"
  defaultValue: false
- owner: "org.springframework.boot.actuate.startup.StartupEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.startup.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.startup.StartupEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the startup endpoint."
  shortDescription: "Whether to enable the startup endpoint."
  name: "management.endpoint.startup.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.management.ThreadDumpEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  shortDescription: "Maximum time that a response can be cached."
  name: "management.endpoint.threaddump.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.management.ThreadDumpEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the threaddump endpoint."
  shortDescription: "Whether to enable the threaddump endpoint."
  name: "management.endpoint.threaddump.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable or disable all endpoints by default."
  shortDescription: "Whether to enable or disable all endpoints by default."
  name: "management.endpoints.enabled-by-default"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties"
  type: "java.lang.String"
  description: "Endpoints JMX domain name. Fallback to 'spring.jmx.default-domain'\
    \ if set."
  shortDescription: "Endpoints JMX domain name."
  name: "management.endpoints.jmx.domain"
  defaultValue: "org.springframework.boot"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure"
  type: "java.util.Set<java.lang.String>"
  description: "Endpoint IDs that should be excluded or '*' for all."
  shortDescription: "Endpoint IDs that should be excluded or '*' for all."
  name: "management.endpoints.jmx.exposure.exclude"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure"
  type: "java.util.Set<java.lang.String>"
  description: "Endpoint IDs that should be included or '*' for all."
  shortDescription: "Endpoint IDs that should be included or '*' for all."
  name: "management.endpoints.jmx.exposure.include"
  defaultValue: "*"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties"
  type: "java.util.Properties"
  description: "Additional static properties to append to all ObjectNames of MBeans\
    \ representing Endpoints."
  shortDescription: "Additional static properties to append to all ObjectNames of\
    \ MBeans representing Endpoints."
  name: "management.endpoints.jmx.static-names"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether unique runtime object names should be ensured."
  shortDescription: "Whether unique runtime object names should be ensured."
  name: "management.endpoints.jmx.unique-names"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.jmx.unique-names"
- type: "java.lang.Boolean"
  description: "Whether to transparently migrate legacy endpoint IDs."
  shortDescription: "Whether to transparently migrate legacy endpoint IDs."
  name: "management.endpoints.migrate-legacy-ids"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
  type: "java.lang.String"
  description: "Base path for Web endpoints. Relative to the servlet context path\
    \ (server.servlet.context-path) or WebFlux base path (spring.webflux.base-path)\
    \ when the management server is sharing the main server port. Relative to the\
    \ management server base path (management.server.base-path) when a separate management\
    \ server port (management.server.port) is configured."
  shortDescription: "Base path for Web endpoints."
  name: "management.endpoints.web.base-path"
  defaultValue: "/actuator"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.lang.Boolean"
  description: "Whether credentials are supported. When not set, credentials are not\
    \ supported."
  shortDescription: "Whether credentials are supported."
  name: "management.endpoints.web.cors.allow-credentials"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of headers to allow in a request. '*' allows\
    \ all headers."
  shortDescription: "Comma-separated list of headers to allow in a request. '*' allows\
    \ all headers."
  name: "management.endpoints.web.cors.allowed-headers"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of methods to allow. '*' allows all methods.\
    \ When not set, defaults to GET."
  shortDescription: "Comma-separated list of methods to allow. '*' allows all methods."
  name: "management.endpoints.web.cors.allowed-methods"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of origin patterns to allow. Unlike allowed origins\
    \ which only supports '*', origin patterns are more flexible (for example 'https://*.example.com')\
    \ and can be used when credentials are allowed. When no allowed origin patterns\
    \ or allowed origins are set, CORS support is disabled."
  shortDescription: "Comma-separated list of origin patterns to allow."
  name: "management.endpoints.web.cors.allowed-origin-patterns"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of origins to allow. '*' allows all origins.\
    \ When credentials are allowed, '*' cannot be used and origin patterns should\
    \ be configured instead. When no allowed origins or allowed origin patterns are\
    \ set, CORS support is disabled."
  shortDescription: "Comma-separated list of origins to allow. '*' allows all origins."
  name: "management.endpoints.web.cors.allowed-origins"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of headers to include in a response."
  shortDescription: "Comma-separated list of headers to include in a response."
  name: "management.endpoints.web.cors.exposed-headers"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.time.Duration"
  description: "How long the response from a pre-flight request can be cached by clients.\
    \ If a duration suffix is not specified, seconds will be used."
  shortDescription: "How long the response from a pre-flight request can be cached\
    \ by clients."
  name: "management.endpoints.web.cors.max-age"
  defaultValue: "1800s"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery"
  type: "java.lang.Boolean"
  description: "Whether the discovery page is enabled."
  shortDescription: "Whether the discovery page is enabled."
  name: "management.endpoints.web.discovery.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure"
  type: "java.util.Set<java.lang.String>"
  description: "Endpoint IDs that should be excluded or '*' for all."
  shortDescription: "Endpoint IDs that should be excluded or '*' for all."
  name: "management.endpoints.web.exposure.exclude"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure"
  type: "java.util.Set<java.lang.String>"
  description: "Endpoint IDs that should be included or '*' for all."
  shortDescription: "Endpoint IDs that should be included or '*' for all."
  name: "management.endpoints.web.exposure.include"
  defaultValue:
  - "health"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Mapping between endpoint IDs and the path that should expose them."
  shortDescription: "Mapping between endpoint IDs and the path that should expose\
    \ them."
  name: "management.endpoints.web.path-mapping"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Allows to enable/disable binder's' health indicators. If you want\
    \ to disable health indicator completely, then set it to `false`."
  shortDescription: "Allows to enable/disable binder's' health indicators."
  name: "management.health.binders.enabled"
  defaultValue: "true"
- type: "java.lang.Boolean"
  description: "Whether to enable Cassandra health check."
  shortDescription: "Whether to enable Cassandra health check."
  name: "management.health.cassandra.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Couchbase health check."
  shortDescription: "Whether to enable Couchbase health check."
  name: "management.health.couchbase.enabled"
  defaultValue: true
- type: "java.time.Duration"
  description: "Timeout for getting the Bucket information from the server."
  shortDescription: "Timeout for getting the Bucket information from the server."
  name: "management.health.couchbase.timeout"
  defaultValue: "1000ms"
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  description: "Whether to enable database health check."
  shortDescription: "Whether to enable database health check."
  name: "management.health.db.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore AbstractRoutingDataSources when creating database\
    \ health indicators."
  shortDescription: "Whether to ignore AbstractRoutingDataSources when creating database\
    \ health indicators."
  name: "management.health.db.ignore-routing-data-sources"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Whether to enable default health indicators."
  shortDescription: "Whether to enable default health indicators."
  name: "management.health.defaults.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable disk space health check."
  shortDescription: "Whether to enable disk space health check."
  name: "management.health.diskspace.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
  type: "java.io.File"
  description: "Path used to compute the available disk space."
  shortDescription: "Path used to compute the available disk space."
  name: "management.health.diskspace.path"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Minimum disk space that should be available."
  shortDescription: "Minimum disk space that should be available."
  name: "management.health.diskspace.threshold"
  defaultValue: "10MB"
- type: "java.lang.Boolean"
  description: "Whether to enable Elasticsearch health check."
  shortDescription: "Whether to enable Elasticsearch health check."
  name: "management.health.elasticsearch.enabled"
  defaultValue: true
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated index names."
  shortDescription: "Comma-separated index names."
  name: "management.health.elasticsearch.indices"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.time.Duration"
  description: "Time to wait for a response from the cluster."
  shortDescription: "Time to wait for a response from the cluster."
  name: "management.health.elasticsearch.response-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  description: "Whether to enable InfluxDB health check."
  shortDescription: "Whether to enable InfluxDB health check."
  name: "management.health.influxdb.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable JMS health check."
  shortDescription: "Whether to enable JMS health check."
  name: "management.health.jms.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable LDAP health check."
  shortDescription: "Whether to enable LDAP health check."
  name: "management.health.ldap.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable liveness state health check."
  shortDescription: "Whether to enable liveness state health check."
  name: "management.health.livenessstate.enabled"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Whether to enable Mail health check."
  shortDescription: "Whether to enable Mail health check."
  name: "management.health.mail.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable MongoDB health check."
  shortDescription: "Whether to enable MongoDB health check."
  name: "management.health.mongo.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Neo4j health check."
  shortDescription: "Whether to enable Neo4j health check."
  name: "management.health.neo4j.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable ping health check."
  shortDescription: "Whether to enable ping health check."
  name: "management.health.ping.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable liveness and readiness probes."
  shortDescription: "Whether to enable liveness and readiness probes."
  name: "management.health.probes.enabled"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "management.endpoint.health.probes.enabled"
- type: "java.lang.Boolean"
  description: "Whether to enable RabbitMQ health check."
  shortDescription: "Whether to enable RabbitMQ health check."
  name: "management.health.rabbit.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable readiness state health check."
  shortDescription: "Whether to enable readiness state health check."
  name: "management.health.readinessstate.enabled"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Whether to enable Redis health check."
  shortDescription: "Whether to enable Redis health check."
  name: "management.health.redis.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable the health endpoint for the refresh scope."
  shortDescription: "Enable the health endpoint for the refresh scope."
  name: "management.health.refresh.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Solr health check."
  shortDescription: "Whether to enable Solr health check."
  name: "management.health.solr.enabled"
  defaultValue: true
- name: "management.health.status.order"
  defaultValue:
  - "DOWN"
  - "OUT_OF_SERVICE"
  - "UP"
  - "UNKNOWN"
- type: "java.lang.Boolean"
  description: "Enable the health endpoint for zookeeper."
  shortDescription: "Enable the health endpoint for zookeeper."
  name: "management.health.zookeeper.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable build info."
  shortDescription: "Whether to enable build info."
  name: "management.info.build.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable default info contributors."
  shortDescription: "Whether to enable default info contributors."
  name: "management.info.defaults.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable environment info."
  shortDescription: "Whether to enable environment info."
  name: "management.info.env.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable git info."
  shortDescription: "Whether to enable git info."
  name: "management.info.git.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git"
  type: "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
  description: "Mode to use to expose git information."
  shortDescription: "Mode to use to expose git information."
  name: "management.info.git.mode"
  defaultValue: "simple"
- type: "java.lang.Boolean"
  description: "Whether to enable files metrics."
  shortDescription: "Whether to enable files metrics."
  name: "management.metrics.binders.files.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, filter 'process.files' metrics."
  deprecationReplacement: "management.metrics.enable.process.files"
- type: "java.lang.Boolean"
  description: "Whether to enable JVM metrics."
  shortDescription: "Whether to enable JVM metrics."
  name: "management.metrics.binders.jvm.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, disable JvmMetricsAutoConfiguration or filter 'jvm'\
    \ metrics."
  deprecationReplacement: "management.metrics.enable.jvm"
- type: "java.lang.Boolean"
  description: "Whether to enable Logback metrics."
  shortDescription: "Whether to enable Logback metrics."
  name: "management.metrics.binders.logback.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, disable LogbackMetricsAutoConfiguration or filter 'logback'\
    \ metrics."
  deprecationReplacement: "management.metrics.enable.logback"
- type: "java.lang.Boolean"
  description: "Whether to enable processor metrics."
  shortDescription: "Whether to enable processor metrics."
  name: "management.metrics.binders.processor.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, filter 'system.cpu' and 'process.cpu' metrics."
- type: "java.lang.Boolean"
  description: "Whether to enable uptime metrics."
  shortDescription: "Whether to enable uptime metrics."
  name: "management.metrics.binders.uptime.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, filter 'process.uptime' and 'process.start.time' metrics."
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  name: "management.metrics.data.repository.autotime.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Double[]"
  name: "management.metrics.data.repository.autotime.percentiles"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  name: "management.metrics.data.repository.autotime.percentiles-histogram"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data$Repository"
  type: "java.lang.String"
  description: "Name of the metric for sent requests."
  shortDescription: "Name of the metric for sent requests."
  name: "management.metrics.data.repository.metric-name"
  defaultValue: "spring.data.repository.invocations"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Maximum value that meter IDs starting with the specified name are\
    \ expected to observe. The longest match wins. Values can be specified as a long\
    \ or as a Duration value (for timer meters, defaulting to ms if no unit specified)."
  shortDescription: "Maximum value that meter IDs starting with the specified name\
    \ are expected to observe."
  name: "management.metrics.distribution.maximum-expected-value"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Minimum value that meter IDs starting with the specified name are\
    \ expected to observe. The longest match wins. Values can be specified as a long\
    \ or as a Duration value (for timer meters, defaulting to ms if no unit specified)."
  shortDescription: "Minimum value that meter IDs starting with the specified name\
    \ are expected to observe."
  name: "management.metrics.distribution.minimum-expected-value"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,java.lang.Double[]>"
  description: "Specific computed non-aggregable percentiles to ship to the backend\
    \ for meter IDs starting-with the specified name. The longest match wins, the\
    \ key `all` can also be used to configure all meters."
  shortDescription: "Specific computed non-aggregable percentiles to ship to the backend\
    \ for meter IDs starting-with the specified name."
  name: "management.metrics.distribution.percentiles"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,java.lang.Boolean>"
  description: "Whether meter IDs starting with the specified name should publish\
    \ percentile histograms. For monitoring systems that support aggregable percentile\
    \ calculation based on a histogram, this can be set to true. For other systems,\
    \ this has no effect. The longest match wins, the key `all` can also be used to\
    \ configure all meters."
  shortDescription: "Whether meter IDs starting with the specified name should publish\
    \ percentile histograms."
  name: "management.metrics.distribution.percentiles-histogram"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary[]>"
  description: "Specific service-level objective boundaries for meter IDs starting\
    \ with the specified name. The longest match wins. Counters will be published\
    \ for each specified boundary. Values can be specified as a long or as a Duration\
    \ value (for timer meters, defaulting to ms if no unit specified)."
  shortDescription: "Specific service-level objective boundaries for meter IDs starting\
    \ with the specified name."
  name: "management.metrics.distribution.slo"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
  type: "java.util.Map<java.lang.String,java.lang.Boolean>"
  description: "Whether meter IDs starting with the specified name should be enabled.\
    \ The longest match wins, the key `all` can also be used to configure all meters."
  shortDescription: "Whether meter IDs starting with the specified name should be\
    \ enabled."
  name: "management.metrics.enable"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.String"
  description: "AppOptics API token."
  shortDescription: "AppOptics API token."
  name: "management.metrics.export.appoptics.api-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.appoptics.batch-size"
  defaultValue: 500
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.appoptics.connect-timeout"
  defaultValue: "5s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.appoptics.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.Boolean"
  description: "Whether to ship a floored time, useful when sending measurements from\
    \ multiple hosts to align them on a given time boundary."
  shortDescription: "Whether to ship a floored time, useful when sending measurements\
    \ from multiple hosts to align them on a given time boundary."
  name: "management.metrics.export.appoptics.floor-times"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.String"
  description: "Tag that will be mapped to \"@host\" when shipping metrics to AppOptics."
  shortDescription: "Tag that will be mapped to \"@host\" when shipping metrics to\
    \ AppOptics."
  name: "management.metrics.export.appoptics.host-tag"
  defaultValue: "instance"
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.appoptics.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.appoptics.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.appoptics.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to."
  shortDescription: "URI to ship metrics to."
  name: "management.metrics.export.appoptics.uri"
  defaultValue: "https://api.appoptics.com/v1/measurements"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.atlas.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Frequency for refreshing config settings from the LWC service."
  shortDescription: "Frequency for refreshing config settings from the LWC service."
  name: "management.metrics.export.atlas.config-refresh-frequency"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Time to live for subscriptions from the LWC service."
  shortDescription: "Time to live for subscriptions from the LWC service."
  name: "management.metrics.export.atlas.config-time-to-live"
  defaultValue: "150s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.String"
  description: "URI for the Atlas LWC endpoint to retrieve current subscriptions."
  shortDescription: "URI for the Atlas LWC endpoint to retrieve current subscriptions."
  name: "management.metrics.export.atlas.config-uri"
  defaultValue: "http://localhost:7101/lwc/api/v1/expressions/local-dev"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.atlas.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.atlas.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.String"
  description: "URI for the Atlas LWC endpoint to evaluate the data for a subscription."
  shortDescription: "URI for the Atlas LWC endpoint to evaluate the data for a subscription."
  name: "management.metrics.export.atlas.eval-uri"
  defaultValue: "http://localhost:7101/lwc/api/v1/evaluate"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable streaming to Atlas LWC."
  shortDescription: "Whether to enable streaming to Atlas LWC."
  name: "management.metrics.export.atlas.lwc-enabled"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Time to live for meters that do not have any activity. After this\
    \ period the meter will be considered expired and will not get reported."
  shortDescription: "Time to live for meters that do not have any activity."
  name: "management.metrics.export.atlas.meter-time-to-live"
  defaultValue: "15m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.atlas.num-threads"
  defaultValue: 4
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.atlas.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.atlas.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.String"
  description: "URI of the Atlas server."
  shortDescription: "URI of the Atlas server."
  name: "management.metrics.export.atlas.uri"
  defaultValue: "http://localhost:7101/api/v1/publish"
- owner: "com.microsoft.azure.spring.autoconfigure.metrics.AzureMonitorProperties"
  type: "java.lang.Integer"
  name: "management.metrics.export.azuremonitor.batch-size"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.metrics.AzureMonitorProperties"
  type: "java.time.Duration"
  name: "management.metrics.export.azuremonitor.connect-timeout"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.metrics.AzureMonitorProperties"
  type: "java.lang.Boolean"
  name: "management.metrics.export.azuremonitor.enabled"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.metrics.AzureMonitorProperties"
  type: "java.lang.String"
  name: "management.metrics.export.azuremonitor.instrumentation-key"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.metrics.AzureMonitorProperties"
  type: "java.time.Duration"
  name: "management.metrics.export.azuremonitor.read-timeout"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.metrics.AzureMonitorProperties"
  type: "java.time.Duration"
  name: "management.metrics.export.azuremonitor.step"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchProperties"
  type: "java.lang.Integer"
  name: "management.metrics.export.cloudwatch.batch-size"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchProperties"
  type: "java.time.Duration"
  name: "management.metrics.export.cloudwatch.connect-timeout"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchProperties"
  type: "java.lang.Boolean"
  description: "Enables cloud watch metrics."
  shortDescription: "Enables cloud watch metrics."
  name: "management.metrics.export.cloudwatch.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchProperties"
  type: "java.lang.String"
  description: "Cloud watch namespace."
  shortDescription: "Cloud watch namespace."
  name: "management.metrics.export.cloudwatch.namespace"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchProperties"
  type: "java.time.Duration"
  name: "management.metrics.export.cloudwatch.read-timeout"
  defaultValue: ""
- owner: "org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchProperties"
  type: "java.time.Duration"
  name: "management.metrics.export.cloudwatch.step"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.String"
  description: "Datadog API key."
  shortDescription: "Datadog API key."
  name: "management.metrics.export.datadog.api-key"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.String"
  description: "Datadog application key. Not strictly required, but improves the Datadog\
    \ experience by sending meter descriptions, types, and base units to Datadog."
  shortDescription: "Datadog application key."
  name: "management.metrics.export.datadog.application-key"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.datadog.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.datadog.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.Boolean"
  description: "Whether to publish descriptions metadata to Datadog. Turn this off\
    \ to minimize the amount of metadata sent."
  shortDescription: "Whether to publish descriptions metadata to Datadog."
  name: "management.metrics.export.datadog.descriptions"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.datadog.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.String"
  description: "Tag that will be mapped to \"host\" when shipping metrics to Datadog."
  shortDescription: "Tag that will be mapped to \"host\" when shipping metrics to\
    \ Datadog."
  name: "management.metrics.export.datadog.host-tag"
  defaultValue: "instance"
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.datadog.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.datadog.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.datadog.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to. If you need to publish metrics to an internal\
    \ proxy en-route to Datadog, you can define the location of the proxy with this."
  shortDescription: "URI to ship metrics to."
  name: "management.metrics.export.datadog.uri"
  defaultValue: "https://api.datadoghq.com"
- type: "java.lang.Boolean"
  description: "Whether to enable default metrics exporters."
  shortDescription: "Whether to enable default metrics exporters."
  name: "management.metrics.export.defaults.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "Dynatrace authentication token."
  shortDescription: "Dynatrace authentication token."
  name: "management.metrics.export.dynatrace.api-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.dynatrace.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.dynatrace.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "ID of the custom device that is exporting metrics to Dynatrace."
  shortDescription: "ID of the custom device that is exporting metrics to Dynatrace."
  name: "management.metrics.export.dynatrace.device-id"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.dynatrace.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "Group for exported metrics. Used to specify custom device group name\
    \ in the Dynatrace UI."
  shortDescription: "Group for exported metrics."
  name: "management.metrics.export.dynatrace.group"
  defaultValue: ""
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.dynatrace.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.dynatrace.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.dynatrace.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "Technology type for exported metrics. Used to group metrics under\
    \ a logical technology name in the Dynatrace UI."
  shortDescription: "Technology type for exported metrics."
  name: "management.metrics.export.dynatrace.technology-type"
  defaultValue: "java"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to. Should be used for SaaS, self managed instances\
    \ or to en-route through an internal proxy."
  shortDescription: "URI to ship metrics to."
  name: "management.metrics.export.dynatrace.uri"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.Boolean"
  description: "Whether to create the index automatically if it does not exist."
  shortDescription: "Whether to create the index automatically if it does not exist."
  name: "management.metrics.export.elastic.auto-create-index"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.elastic.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.elastic.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.elastic.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Host to export metrics to."
  shortDescription: "Host to export metrics to."
  name: "management.metrics.export.elastic.host"
  defaultValue: "http://localhost:9200"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Index to export metrics to."
  shortDescription: "Index to export metrics to."
  name: "management.metrics.export.elastic.index"
  defaultValue: "micrometer-metrics"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Index date format used for rolling indices. Appended to the index\
    \ name."
  shortDescription: "Index date format used for rolling indices."
  name: "management.metrics.export.elastic.index-date-format"
  defaultValue: "yyyy-MM"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Prefix to separate the index name from the date format used for rolling\
    \ indices."
  shortDescription: "Prefix to separate the index name from the date format used for\
    \ rolling indices."
  name: "management.metrics.export.elastic.index-date-separator"
  defaultValue: "-"
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.elastic.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Login password of the Elastic server."
  shortDescription: "Login password of the Elastic server."
  name: "management.metrics.export.elastic.password"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Ingest pipeline name. By default, events are not pre-processed."
  shortDescription: "Ingest pipeline name."
  name: "management.metrics.export.elastic.pipeline"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.elastic.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.elastic.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Name of the timestamp field."
  shortDescription: "Name of the timestamp field."
  name: "management.metrics.export.elastic.timestamp-field-name"
  defaultValue: "@timestamp"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Login user of the Elastic server."
  shortDescription: "Login user of the Elastic server."
  name: "management.metrics.export.elastic.user-name"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "info.ganglia.gmetric4j.gmetric.GMetric$UDPAddressingMode"
  description: "UDP addressing mode, either unicast or multicast."
  shortDescription: "UDP addressing mode, either unicast or multicast."
  name: "management.metrics.export.ganglia.addressing-mode"
  defaultValue: "multicast"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "Base time unit used to report durations."
  shortDescription: "Base time unit used to report durations."
  name: "management.metrics.export.ganglia.duration-units"
  defaultValue: "milliseconds"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to Ganglia is enabled."
  shortDescription: "Whether exporting of metrics to Ganglia is enabled."
  name: "management.metrics.export.ganglia.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.String"
  description: "Host of the Ganglia server to receive exported metrics."
  shortDescription: "Host of the Ganglia server to receive exported metrics."
  name: "management.metrics.export.ganglia.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.Integer"
  description: "Port of the Ganglia server to receive exported metrics."
  shortDescription: "Port of the Ganglia server to receive exported metrics."
  name: "management.metrics.export.ganglia.port"
  defaultValue: 8649
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.String"
  description: "Ganglia protocol version. Must be either 3.1 or 3.0."
  shortDescription: "Ganglia protocol version."
  name: "management.metrics.export.ganglia.protocol-version"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReason: "No longer used by Micrometer."
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "Base time unit used to report rates."
  shortDescription: "Base time unit used to report rates."
  name: "management.metrics.export.ganglia.rate-units"
  defaultValue: "seconds"
  deprecationLevel: "WARNING"
  deprecationReason: "No longer used by Micrometer."
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.ganglia.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.Integer"
  description: "Time to live for metrics on Ganglia. Set the multi-cast Time-To-Live\
    \ to be one greater than the number of hops (routers) between the hosts."
  shortDescription: "Time to live for metrics on Ganglia."
  name: "management.metrics.export.ganglia.time-to-live"
  defaultValue: 1
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "Base time unit used to report durations."
  shortDescription: "Base time unit used to report durations."
  name: "management.metrics.export.graphite.duration-units"
  defaultValue: "milliseconds"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to Graphite is enabled."
  shortDescription: "Whether exporting of metrics to Graphite is enabled."
  name: "management.metrics.export.graphite.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.Boolean"
  description: "Whether Graphite tags should be used, as opposed to a hierarchical\
    \ naming convention. Enabled by default unless \"tagsAsPrefix\" is set."
  shortDescription: "Whether Graphite tags should be used, as opposed to a hierarchical\
    \ naming convention."
  name: "management.metrics.export.graphite.graphite-tags-enabled"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.String"
  description: "Host of the Graphite server to receive exported metrics."
  shortDescription: "Host of the Graphite server to receive exported metrics."
  name: "management.metrics.export.graphite.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.Integer"
  description: "Port of the Graphite server to receive exported metrics."
  shortDescription: "Port of the Graphite server to receive exported metrics."
  name: "management.metrics.export.graphite.port"
  defaultValue: 2004
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "io.micrometer.graphite.GraphiteProtocol"
  description: "Protocol to use while shipping data to Graphite."
  shortDescription: "Protocol to use while shipping data to Graphite."
  name: "management.metrics.export.graphite.protocol"
  defaultValue: "pickled"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "Base time unit used to report rates."
  shortDescription: "Base time unit used to report rates."
  name: "management.metrics.export.graphite.rate-units"
  defaultValue: "seconds"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.graphite.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.String[]"
  description: "For the hierarchical naming convention, turn the specified tag keys\
    \ into part of the metric prefix. Ignored if \"graphiteTagsEnabled\" is true."
  shortDescription: "For the hierarchical naming convention, turn the specified tag\
    \ keys into part of the metric prefix."
  name: "management.metrics.export.graphite.tags-as-prefix"
  defaultValue: []
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.lang.String"
  description: "Humio API token."
  shortDescription: "Humio API token."
  name: "management.metrics.export.humio.api-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.humio.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.humio.connect-timeout"
  defaultValue: "5s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.humio.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.humio.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.humio.read-timeout"
  defaultValue: "10s"
- name: "management.metrics.export.humio.repository"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.humio.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Humio tags describing the data source in which metrics will be stored.\
    \ Humio tags are a distinct concept from Micrometer's tags. Micrometer's tags\
    \ are used to divide metrics along dimensional boundaries."
  shortDescription: "Humio tags describing the data source in which metrics will be\
    \ stored."
  name: "management.metrics.export.humio.tags"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to. If you need to publish metrics to an internal\
    \ proxy en-route to Humio, you can define the location of the proxy with this."
  shortDescription: "URI to ship metrics to."
  name: "management.metrics.export.humio.uri"
  defaultValue: "https://cloud.humio.com"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "io.micrometer.influx.InfluxApiVersion"
  description: "API version of InfluxDB to use. Defaults to 'v1' unless an org is\
    \ configured. If an org is configured, defaults to 'v2'."
  shortDescription: "API version of InfluxDB to use."
  name: "management.metrics.export.influx.api-version"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Boolean"
  description: "Whether to create the Influx database if it does not exist before\
    \ attempting to publish metrics to it. InfluxDB v1 only."
  shortDescription: "Whether to create the Influx database if it does not exist before\
    \ attempting to publish metrics to it."
  name: "management.metrics.export.influx.auto-create-db"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.influx.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Bucket for metrics. Use either the bucket name or ID. Defaults to\
    \ the value of the db property if not set. InfluxDB v2 only."
  shortDescription: "Bucket for metrics."
  name: "management.metrics.export.influx.bucket"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable GZIP compression of metrics batches published to\
    \ Influx."
  shortDescription: "Whether to enable GZIP compression of metrics batches published\
    \ to Influx."
  name: "management.metrics.export.influx.compressed"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.influx.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "io.micrometer.influx.InfluxConsistency"
  description: "Write consistency for each point."
  shortDescription: "Write consistency for each point."
  name: "management.metrics.export.influx.consistency"
  defaultValue: "one"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Database to send metrics to. InfluxDB v1 only."
  shortDescription: "Database to send metrics to."
  name: "management.metrics.export.influx.db"
  defaultValue: "mydb"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.influx.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.influx.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Org to write metrics to. InfluxDB v2 only."
  shortDescription: "Org to write metrics to."
  name: "management.metrics.export.influx.org"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Login password of the Influx server. InfluxDB v1 only."
  shortDescription: "Login password of the Influx server."
  name: "management.metrics.export.influx.password"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.influx.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Time period for which Influx should retain data in the current database.\
    \ For instance 7d, check the influx documentation for more details on the duration\
    \ format. InfluxDB v1 only."
  shortDescription: "Time period for which Influx should retain data in the current\
    \ database."
  name: "management.metrics.export.influx.retention-duration"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Retention policy to use (Influx writes to the DEFAULT retention policy\
    \ if one is not specified). InfluxDB v1 only."
  shortDescription: "Retention policy to use (Influx writes to the DEFAULT retention\
    \ policy if one is not specified)."
  name: "management.metrics.export.influx.retention-policy"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Integer"
  description: "How many copies of the data are stored in the cluster. Must be 1 for\
    \ a single node instance. InfluxDB v1 only."
  shortDescription: "How many copies of the data are stored in the cluster."
  name: "management.metrics.export.influx.retention-replication-factor"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Time range covered by a shard group. For instance 2w, check the influx\
    \ documentation for more details on the duration format. InfluxDB v1 only."
  shortDescription: "Time range covered by a shard group."
  name: "management.metrics.export.influx.retention-shard-duration"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.influx.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Authentication token to use with calls to the InfluxDB backend. For\
    \ InfluxDB v1, the Bearer scheme is used. For v2, the Token scheme is used."
  shortDescription: "Authentication token to use with calls to the InfluxDB backend."
  name: "management.metrics.export.influx.token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "URI of the Influx server."
  shortDescription: "URI of the Influx server."
  name: "management.metrics.export.influx.uri"
  defaultValue: "http://localhost:8086"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Login user of the Influx server. InfluxDB v1 only."
  shortDescription: "Login user of the Influx server."
  name: "management.metrics.export.influx.user-name"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties"
  type: "java.lang.String"
  description: "Metrics JMX domain name."
  shortDescription: "Metrics JMX domain name."
  name: "management.metrics.export.jmx.domain"
  defaultValue: "metrics"
- type: "java.lang.Boolean"
  description: "Whether exporting of metrics to JMX is enabled."
  shortDescription: "Whether exporting of metrics to JMX is enabled."
  name: "management.metrics.export.jmx.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.jmx.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.kairos.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.kairos.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.kairos.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.kairos.num-threads"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.String"
  description: "Login password of the KairosDB server."
  shortDescription: "Login password of the KairosDB server."
  name: "management.metrics.export.kairos.password"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.kairos.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.kairos.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.String"
  description: "URI of the KairosDB server."
  shortDescription: "URI of the KairosDB server."
  name: "management.metrics.export.kairos.uri"
  defaultValue: "http://localhost:8080/api/v1/datapoints"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.String"
  description: "Login user of the KairosDB server."
  shortDescription: "Login user of the KairosDB server."
  name: "management.metrics.export.kairos.user-name"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.String"
  description: "New Relic account ID."
  shortDescription: "New Relic account ID."
  name: "management.metrics.export.newrelic.account-id"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.String"
  description: "New Relic API key."
  shortDescription: "New Relic API key."
  name: "management.metrics.export.newrelic.api-key"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.newrelic.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "io.micrometer.newrelic.ClientProviderType"
  description: "Client provider type to use."
  shortDescription: "Client provider type to use."
  name: "management.metrics.export.newrelic.client-provider-type"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.newrelic.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.newrelic.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.String"
  description: "The event type that should be published. This property will be ignored\
    \ if 'meter-name-event-type-enabled' is set to 'true'."
  shortDescription: "The event type that should be published."
  name: "management.metrics.export.newrelic.event-type"
  defaultValue: "SpringBootSample"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.Boolean"
  description: "Whether to send the meter name as the event type instead of using\
    \ the 'event-type' configuration property value. Can be set to 'true' if New Relic\
    \ guidelines are not being followed or event types consistent with previous Spring\
    \ Boot releases are required."
  shortDescription: "Whether to send the meter name as the event type instead of using\
    \ the 'event-type' configuration property value."
  name: "management.metrics.export.newrelic.meter-name-event-type-enabled"
  defaultValue: false
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.newrelic.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.newrelic.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.newrelic.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to."
  shortDescription: "URI to ship metrics to."
  name: "management.metrics.export.newrelic.uri"
  defaultValue: "https://insights-collector.newrelic.com"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable publishing descriptions as part of the scrape payload\
    \ to Prometheus. Turn this off to minimize the amount of data sent on each scrape."
  shortDescription: "Whether to enable publishing descriptions as part of the scrape\
    \ payload to Prometheus."
  name: "management.metrics.export.prometheus.descriptions"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether exporting of metrics to Prometheus is enabled."
  shortDescription: "Whether exporting of metrics to Prometheus is enabled."
  name: "management.metrics.export.prometheus.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
  type: "io.micrometer.prometheus.HistogramFlavor"
  description: "Histogram type for backing DistributionSummary and Timer."
  shortDescription: "Histogram type for backing DistributionSummary and Timer."
  name: "management.metrics.export.prometheus.histogram-flavor"
  defaultValue: "prometheus"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.String"
  description: "Base URL for the Pushgateway."
  shortDescription: "Base URL for the Pushgateway."
  name: "management.metrics.export.prometheus.pushgateway.base-url"
  defaultValue: "http://localhost:9091"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.Boolean"
  description: "Enable publishing via a Prometheus Pushgateway."
  shortDescription: "Enable publishing via a Prometheus Pushgateway."
  name: "management.metrics.export.prometheus.pushgateway.enabled"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Grouping key for the pushed metrics."
  shortDescription: "Grouping key for the pushed metrics."
  name: "management.metrics.export.prometheus.pushgateway.grouping-key"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.String"
  description: "Job identifier for this application instance."
  shortDescription: "Job identifier for this application instance."
  name: "management.metrics.export.prometheus.pushgateway.job"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.String"
  description: "Login password of the Prometheus Pushgateway."
  shortDescription: "Login password of the Prometheus Pushgateway."
  name: "management.metrics.export.prometheus.pushgateway.password"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.time.Duration"
  description: "Frequency with which to push metrics."
  shortDescription: "Frequency with which to push metrics."
  name: "management.metrics.export.prometheus.pushgateway.push-rate"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusPushGatewayManager$ShutdownOperation"
  description: "Operation that should be performed on shutdown."
  shortDescription: "Operation that should be performed on shutdown."
  name: "management.metrics.export.prometheus.pushgateway.shutdown-operation"
  defaultValue: "none"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.String"
  description: "Login user of the Prometheus Pushgateway."
  shortDescription: "Login user of the Prometheus Pushgateway."
  name: "management.metrics.export.prometheus.pushgateway.username"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.prometheus.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.String"
  description: "SignalFX access token."
  shortDescription: "SignalFX access token."
  name: "management.metrics.export.signalfx.access-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.signalfx.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.signalfx.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.signalfx.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.signalfx.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.signalfx.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.String"
  description: "Uniquely identifies the app instance that is publishing metrics to\
    \ SignalFx. Defaults to the local host name."
  shortDescription: "Uniquely identifies the app instance that is publishing metrics\
    \ to SignalFx."
  name: "management.metrics.export.signalfx.source"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.signalfx.step"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to."
  shortDescription: "URI to ship metrics to."
  name: "management.metrics.export.signalfx.uri"
  defaultValue: "https://ingest.signalfx.com"
- type: "java.lang.Boolean"
  description: "Whether, in the absence of any other exporter, exporting of metrics\
    \ to an in-memory backend is enabled."
  shortDescription: "Whether, in the absence of any other exporter, exporting of metrics\
    \ to an in-memory backend is enabled."
  name: "management.metrics.export.simple.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
  type: "io.micrometer.core.instrument.simple.CountingMode"
  description: "Counting mode."
  shortDescription: "Counting mode."
  name: "management.metrics.export.simple.mode"
  defaultValue: "cumulative"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.simple.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.stackdriver.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.stackdriver.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.stackdriver.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.stackdriver.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.lang.String"
  description: "Identifier of the Google Cloud project to monitor."
  shortDescription: "Identifier of the Google Cloud project to monitor."
  name: "management.metrics.export.stackdriver.project-id"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.stackdriver.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.lang.String"
  description: "Monitored resource type."
  shortDescription: "Monitored resource type."
  name: "management.metrics.export.stackdriver.resource-type"
  defaultValue: "global"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.stackdriver.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to StatsD is enabled."
  shortDescription: "Whether exporting of metrics to StatsD is enabled."
  name: "management.metrics.export.statsd.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "io.micrometer.statsd.StatsdFlavor"
  description: "StatsD line protocol to use."
  shortDescription: "StatsD line protocol to use."
  name: "management.metrics.export.statsd.flavor"
  defaultValue: "datadog"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.String"
  description: "Host of the StatsD server to receive exported metrics."
  shortDescription: "Host of the StatsD server to receive exported metrics."
  name: "management.metrics.export.statsd.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.Integer"
  description: "Total length of a single payload should be kept within your network's\
    \ MTU."
  shortDescription: "Total length of a single payload should be kept within your network's\
    \ MTU."
  name: "management.metrics.export.statsd.max-packet-length"
  defaultValue: 1400
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.time.Duration"
  description: "How often gauges will be polled. When a gauge is polled, its value\
    \ is recalculated and if the value has changed (or publishUnchangedMeters is true),\
    \ it is sent to the StatsD server."
  shortDescription: "How often gauges will be polled."
  name: "management.metrics.export.statsd.polling-frequency"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.Integer"
  description: "Port of the StatsD server to receive exported metrics."
  shortDescription: "Port of the StatsD server to receive exported metrics."
  name: "management.metrics.export.statsd.port"
  defaultValue: 8125
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "io.micrometer.statsd.StatsdProtocol"
  description: "Protocol of the StatsD server to receive exported metrics."
  shortDescription: "Protocol of the StatsD server to receive exported metrics."
  name: "management.metrics.export.statsd.protocol"
  defaultValue: "udp"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.Boolean"
  description: "Whether to send unchanged meters to the StatsD server."
  shortDescription: "Whether to send unchanged meters to the StatsD server."
  name: "management.metrics.export.statsd.publish-unchanged-meters"
  defaultValue: true
- name: "management.metrics.export.statsd.queue-size"
  defaultValue: 2147483647
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.String"
  description: "API token used when publishing metrics directly to the Wavefront API\
    \ host."
  shortDescription: "API token used when publishing metrics directly to the Wavefront\
    \ API host."
  name: "management.metrics.export.wavefront.api-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  shortDescription: "Number of measurements per request to use for this backend."
  name: "management.metrics.export.wavefront.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  shortDescription: "Connection timeout for requests to this backend."
  name: "management.metrics.export.wavefront.connect-timeout"
  defaultValue: "1s"
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  shortDescription: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.wavefront.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.String"
  description: "Global prefix to separate metrics originating from this app's white\
    \ box instrumentation from those originating from other Wavefront integrations\
    \ when viewed in the Wavefront UI."
  shortDescription: "Global prefix to separate metrics originating from this app's\
    \ white box instrumentation from those originating from other Wavefront integrations\
    \ when viewed in the Wavefront UI."
  name: "management.metrics.export.wavefront.global-prefix"
  defaultValue: ""
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  shortDescription: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.wavefront.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  shortDescription: "Read timeout for requests to this backend."
  name: "management.metrics.export.wavefront.read-timeout"
  defaultValue: "10s"
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender"
  type: "java.time.Duration"
  name: "management.metrics.export.wavefront.sender.flush-interval"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender"
  type: "java.lang.Integer"
  name: "management.metrics.export.wavefront.sender.max-queue-size"
  defaultValue: 50000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender"
  type: "org.springframework.util.unit.DataSize"
  name: "management.metrics.export.wavefront.sender.message-size"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.String"
  description: "Unique identifier for the app instance that is the source of metrics\
    \ being published to Wavefront. Defaults to the local host name."
  shortDescription: "Unique identifier for the app instance that is the source of\
    \ metrics being published to Wavefront."
  name: "management.metrics.export.wavefront.source"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  shortDescription: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.wavefront.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.net.URI"
  description: "URI to ship metrics to."
  shortDescription: "URI to ship metrics to."
  name: "management.metrics.export.wavefront.uri"
  defaultValue: "https://longboard.wavefront.com"
- description: "Whether to enable Mongo client command metrics."
  shortDescription: "Whether to enable Mongo client command metrics."
  name: "management.metrics.mongo.command.enabled"
  defaultValue: true
- description: "Whether to enable Mongo connection pool metrics."
  shortDescription: "Whether to enable Mongo connection pool metrics."
  name: "management.metrics.mongo.connectionpool.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Common tags that are applied to every meter."
  shortDescription: "Common tags that are applied to every meter."
  name: "management.metrics.tags"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
  type: "java.lang.Boolean"
  description: "Whether auto-configured MeterRegistry implementations should be bound\
    \ to the global static registry on Metrics. For testing, set this to 'false' to\
    \ maximize test independence."
  shortDescription: "Whether auto-configured MeterRegistry implementations should\
    \ be bound to the global static registry on Metrics."
  name: "management.metrics.use-global-registry"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client"
  type: "java.lang.Integer"
  description: "Maximum number of unique URI tag values allowed. After the max number\
    \ of tag values is reached, metrics with additional tag values are denied by filter."
  shortDescription: "Maximum number of unique URI tag values allowed."
  name: "management.metrics.web.client.max-uri-tags"
  defaultValue: 100
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically time web client requests."
  shortDescription: "Whether to automatically time web client requests."
  name: "management.metrics.web.client.request.autotime.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Double[]"
  description: "Computed non-aggregable percentiles to publish."
  shortDescription: "Computed non-aggregable percentiles to publish."
  name: "management.metrics.web.client.request.autotime.percentiles"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  description: "Whether percentile histograms should be published."
  shortDescription: "Whether percentile histograms should be published."
  name: "management.metrics.web.client.request.autotime.percentiles-histogram"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest"
  type: "java.lang.String"
  description: "Name of the metric for sent requests."
  shortDescription: "Name of the metric for sent requests."
  name: "management.metrics.web.client.request.metric-name"
  defaultValue: "http.client.requests"
- type: "java.lang.String"
  name: "management.metrics.web.client.requests-metric-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "management.metrics.web.client.request.metric-name"
- type: "java.lang.Boolean"
  name: "management.metrics.web.server.auto-time-requests"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "management.metrics.web.server.request.autotime.enabled"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server"
  type: "java.lang.Integer"
  description: "Maximum number of unique URI tag values allowed. After the max number\
    \ of tag values is reached, metrics with additional tag values are denied by filter."
  shortDescription: "Maximum number of unique URI tag values allowed."
  name: "management.metrics.web.server.max-uri-tags"
  defaultValue: 100
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically time web server requests."
  shortDescription: "Whether to automatically time web server requests."
  name: "management.metrics.web.server.request.autotime.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Double[]"
  description: "Computed non-aggregable percentiles to publish."
  shortDescription: "Computed non-aggregable percentiles to publish."
  name: "management.metrics.web.server.request.autotime.percentiles"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  description: "Whether percentile histograms should be published."
  shortDescription: "Whether percentile histograms should be published."
  name: "management.metrics.web.server.request.autotime.percentiles-histogram"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest"
  type: "java.lang.Boolean"
  description: "Whether the trailing slash should be ignored when recording metrics."
  shortDescription: "Whether the trailing slash should be ignored when recording metrics."
  name: "management.metrics.web.server.request.ignore-trailing-slash"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest"
  type: "java.lang.String"
  description: "Name of the metric for received requests."
  shortDescription: "Name of the metric for received requests."
  name: "management.metrics.web.server.request.metric-name"
  defaultValue: "http.server.requests"
- type: "java.lang.String"
  name: "management.metrics.web.server.requests-metric-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "management.metrics.web.server.request.metric-name"
- type: "java.lang.Boolean"
  description: "Add the \"X-Application-Context\" HTTP header in each response."
  shortDescription: "Add the \"X-Application-Context\" HTTP header in each response."
  name: "management.server.add-application-context-header"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
  type: "java.net.InetAddress"
  description: "Network address to which the management endpoints should bind. Requires\
    \ a custom management.server.port."
  shortDescription: "Network address to which the management endpoints should bind."
  name: "management.server.address"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
  type: "java.lang.String"
  description: "Management endpoint base path (for instance, `/management`). Requires\
    \ a custom management.server.port."
  shortDescription: "Management endpoint base path (for instance, `/management`)."
  name: "management.server.base-path"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
  type: "java.lang.Integer"
  description: "Management endpoint HTTP port (uses the same port as the application\
    \ by default). Configure a different port to use management-specific SSL."
  shortDescription: "Management endpoint HTTP port (uses the same port as the application\
    \ by default)."
  name: "management.server.port"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties$Servlet"
  type: "java.lang.String"
  description: "Management endpoint context-path (for instance, `/management`). Requires\
    \ a custom management.server.port."
  shortDescription: "Management endpoint context-path (for instance, `/management`)."
  name: "management.server.servlet.context-path"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "management.server.base-path"
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  description: "Supported SSL ciphers."
  shortDescription: "Supported SSL ciphers."
  name: "management.server.ssl.ciphers"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "org.springframework.boot.web.server.Ssl$ClientAuth"
  description: "Client authentication mode. Requires a trust store."
  shortDescription: "Client authentication mode."
  name: "management.server.ssl.client-auth"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support."
  shortDescription: "Whether to enable SSL support."
  name: "management.server.ssl.enabled"
  defaultValue: true
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  description: "Enabled SSL protocols."
  shortDescription: "Enabled SSL protocols."
  name: "management.server.ssl.enabled-protocols"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Alias that identifies the key in the key store."
  shortDescription: "Alias that identifies the key in the key store."
  name: "management.server.ssl.key-alias"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the key in the key store."
  shortDescription: "Password used to access the key in the key store."
  name: "management.server.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Path to the key store that holds the SSL certificate (typically a\
    \ jks file)."
  shortDescription: "Path to the key store that holds the SSL certificate (typically\
    \ a jks file)."
  name: "management.server.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  shortDescription: "Password used to access the key store."
  name: "management.server.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Provider for the key store."
  shortDescription: "Provider for the key store."
  name: "management.server.ssl.key-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  shortDescription: "Type of the key store."
  name: "management.server.ssl.key-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  shortDescription: "SSL protocol to use."
  name: "management.server.ssl.protocol"
  defaultValue: "TLS"
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Trust store that holds SSL certificates."
  shortDescription: "Trust store that holds SSL certificates."
  name: "management.server.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the trust store."
  shortDescription: "Password used to access the trust store."
  name: "management.server.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Provider for the trust store."
  shortDescription: "Provider for the trust store."
  name: "management.server.ssl.trust-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  shortDescription: "Type of the trust store."
  name: "management.server.ssl.trust-store-type"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable HTTP request-response tracing."
  shortDescription: "Whether to enable HTTP request-response tracing."
  name: "management.trace.http.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties"
  type: "java.util.Set<org.springframework.boot.actuate.trace.http.Include>"
  description: "Items to be included in the trace. Defaults to request headers (excluding\
    \ Authorization and Cookie), response headers (excluding Set-Cookie), and time\
    \ taken."
  shortDescription: "Items to be included in the trace."
  name: "management.trace.http.include"
  defaultValue:
  - "request-headers"
  - "response-headers"
  - "errors"
- name: "management.trace.include"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "management.trace.http.include"
- type: "java.lang.Boolean"
  description: "Enables the use of Eureka with Ribbon."
  shortDescription: "Enables the use of Eureka with Ribbon."
  name: "ribbon.eureka.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "java.net.InetAddress"
  description: "Network address to which the server should bind."
  shortDescription: "Network address to which the server should bind."
  name: "server.address"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Compression"
  type: "java.lang.Boolean"
  description: "Whether response compression is enabled."
  shortDescription: "Whether response compression is enabled."
  name: "server.compression.enabled"
  defaultValue: false
- owner: "org.springframework.boot.web.server.Compression"
  type: "java.lang.String[]"
  description: "Comma-separated list of user agents for which responses should not\
    \ be compressed."
  shortDescription: "Comma-separated list of user agents for which responses should\
    \ not be compressed."
  name: "server.compression.excluded-user-agents"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Compression"
  type: "java.lang.String[]"
  description: "Comma-separated list of MIME types that should be compressed."
  shortDescription: "Comma-separated list of MIME types that should be compressed."
  name: "server.compression.mime-types"
  defaultValue:
  - "text/html"
  - "text/xml"
  - "text/plain"
  - "text/css"
  - "text/javascript"
  - "application/javascript"
  - "application/json"
  - "application/xml"
- owner: "org.springframework.boot.web.server.Compression"
  type: "org.springframework.util.unit.DataSize"
  description: "Minimum \"Content-Length\" value that is required for compression\
    \ to be performed."
  shortDescription: "Minimum \"Content-Length\" value that is required for compression\
    \ to be performed."
  name: "server.compression.min-response-size"
  defaultValue: "2KB"
- type: "java.time.Duration"
  name: "server.connection-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Each server behaves differently."
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
  description: "When to include \"errors\" attribute."
  shortDescription: "When to include \"errors\" attribute."
  name: "server.error.include-binding-errors"
  defaultValue: "never"
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "java.lang.Boolean"
  description: "Include the \"exception\" attribute."
  shortDescription: "Include the \"exception\" attribute."
  name: "server.error.include-exception"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
  description: "When to include \"message\" attribute."
  shortDescription: "When to include \"message\" attribute."
  name: "server.error.include-message"
  defaultValue: "never"
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
  description: "When to include the \"trace\" attribute."
  shortDescription: "When to include the \"trace\" attribute."
  name: "server.error.include-stacktrace"
  defaultValue: "never"
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "java.lang.String"
  description: "Path of the error controller."
  shortDescription: "Path of the error controller."
  name: "server.error.path"
  defaultValue: "/error"
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel"
  type: "java.lang.Boolean"
  description: "Whether to enable the default error page displayed in browsers in\
    \ case of a server error."
  shortDescription: "Whether to enable the default error page displayed in browsers\
    \ in case of a server error."
  name: "server.error.whitelabel.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
  description: "Strategy for handling X-Forwarded-* headers."
  shortDescription: "Strategy for handling X-Forwarded-* headers."
  name: "server.forward-headers-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Http2"
  type: "java.lang.Boolean"
  description: "Whether to enable HTTP/2 support, if the current environment supports\
    \ it."
  shortDescription: "Whether to enable HTTP/2 support, if the current environment\
    \ supports it."
  name: "server.http2.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.Boolean"
  description: "Append to log."
  shortDescription: "Append to log."
  name: "server.jetty.accesslog.append"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.String"
  description: "Custom log format, see org.eclipse.jetty.server.CustomRequestLog.\
    \ If defined, overrides the \"format\" configuration key."
  shortDescription: "Custom log format, see org.eclipse.jetty.server.CustomRequestLog."
  name: "server.jetty.accesslog.custom-format"
  defaultValue: ""
- name: "server.jetty.accesslog.date-format"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.Boolean"
  description: "Enable access log."
  shortDescription: "Enable access log."
  name: "server.jetty.accesslog.enabled"
  defaultValue: false
- name: "server.jetty.accesslog.extended-format"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.format"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.String"
  description: "Date format to place in log file name."
  shortDescription: "Date format to place in log file name."
  name: "server.jetty.accesslog.file-date-format"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.String"
  description: "Log filename. If not specified, logs redirect to \"System.err\"."
  shortDescription: "Log filename."
  name: "server.jetty.accesslog.filename"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
  description: "Log format."
  shortDescription: "Log format."
  name: "server.jetty.accesslog.format"
  defaultValue: "ncsa"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.util.List<java.lang.String>"
  description: "Request paths that should not be logged."
  shortDescription: "Request paths that should not be logged."
  name: "server.jetty.accesslog.ignore-paths"
  defaultValue: ""
- name: "server.jetty.accesslog.locale"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- name: "server.jetty.accesslog.log-cookies"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- name: "server.jetty.accesslog.log-latency"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- name: "server.jetty.accesslog.log-server"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.Integer"
  description: "Number of days before rotated log files are deleted."
  shortDescription: "Number of days before rotated log files are deleted."
  name: "server.jetty.accesslog.retention-period"
  defaultValue: 31
- name: "server.jetty.accesslog.time-zone"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "java.time.Duration"
  description: "Time that the connection can be idle before it is closed."
  shortDescription: "Time that the connection can be idle before it is closed."
  name: "server.jetty.connection-idle-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the form content in any HTTP post request."
  shortDescription: "Maximum size of the form content in any HTTP post request."
  name: "server.jetty.max-http-form-post-size"
  defaultValue: "200000B"
- type: "org.springframework.util.unit.DataSize"
  name: "server.jetty.max-http-post-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.max-http-form-post-size"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Number of acceptor threads to use. When the value is -1, the default,\
    \ the number of acceptors is derived from the operating environment."
  shortDescription: "Number of acceptor threads to use."
  name: "server.jetty.threads.acceptors"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.time.Duration"
  description: "Maximum thread idle time."
  shortDescription: "Maximum thread idle time."
  name: "server.jetty.threads.idle-timeout"
  defaultValue: "60000ms"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Maximum number of threads."
  shortDescription: "Maximum number of threads."
  name: "server.jetty.threads.max"
  defaultValue: 200
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Maximum capacity of the thread pool's backing queue. A default is\
    \ computed based on the threading configuration."
  shortDescription: "Maximum capacity of the thread pool's backing queue."
  name: "server.jetty.threads.max-queue-capacity"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Minimum number of threads."
  shortDescription: "Minimum number of threads."
  name: "server.jetty.threads.min"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Number of selector threads to use. When the value is -1, the default,\
    \ the number of selectors is derived from the operating environment."
  shortDescription: "Number of selector threads to use."
  name: "server.jetty.threads.selectors"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the HTTP message header."
  shortDescription: "Maximum size of the HTTP message header."
  name: "server.max-http-header-size"
  defaultValue: "8KB"
- type: "java.lang.Integer"
  description: "Maximum size in bytes of the HTTP post content."
  shortDescription: "Maximum size in bytes of the HTTP post content."
  name: "server.max-http-post-size"
  defaultValue: 0
  deprecationLevel: "ERROR"
  deprecationReason: "Use dedicated property for each container."
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "java.time.Duration"
  description: "Connection timeout of the Netty channel."
  shortDescription: "Connection timeout of the Netty channel."
  name: "server.netty.connection-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum content length of an H2C upgrade request."
  shortDescription: "Maximum content length of an H2C upgrade request."
  name: "server.netty.h2c-max-content-length"
  defaultValue: "0B"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "org.springframework.util.unit.DataSize"
  description: "Initial buffer size for HTTP request decoding."
  shortDescription: "Initial buffer size for HTTP request decoding."
  name: "server.netty.initial-buffer-size"
  defaultValue: "128B"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum chunk size that can be decoded for an HTTP request."
  shortDescription: "Maximum chunk size that can be decoded for an HTTP request."
  name: "server.netty.max-chunk-size"
  defaultValue: "8KB"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum length that can be decoded for an HTTP request's initial line."
  shortDescription: "Maximum length that can be decoded for an HTTP request's initial\
    \ line."
  name: "server.netty.max-initial-line-length"
  defaultValue: "4KB"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "java.lang.Boolean"
  description: "Whether to validate headers when decoding requests."
  shortDescription: "Whether to validate headers when decoding requests."
  name: "server.netty.validate-headers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "java.lang.Integer"
  description: "Server HTTP port."
  shortDescription: "Server HTTP port."
  name: "server.port"
  defaultValue: 8080
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "java.lang.String"
  description: "Value to use for the Server response header (if empty, no header is\
    \ sent)."
  shortDescription: "Value to use for the Server response header (if empty, no header\
    \ is sent)."
  name: "server.server-header"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  type: "java.lang.String"
  description: "Display name of the application."
  shortDescription: "Display name of the application."
  name: "server.servlet.application-display-name"
  defaultValue: "application"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Servlet context init parameters."
  shortDescription: "Servlet context init parameters."
  name: "server.servlet.context-parameters"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  type: "java.lang.String"
  description: "Context path of the application."
  shortDescription: "Context path of the application."
  name: "server.servlet.context-path"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.nio.charset.Charset"
  name: "server.servlet.encoding.charset"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable http encoding support."
  shortDescription: "Whether to enable http encoding support."
  name: "server.servlet.encoding.enabled"
  defaultValue: true
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.lang.Boolean"
  name: "server.servlet.encoding.force"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.lang.Boolean"
  name: "server.servlet.encoding.force-request"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.lang.Boolean"
  name: "server.servlet.encoding.force-response"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.util.Map<java.util.Locale,java.nio.charset.Charset>"
  name: "server.servlet.encoding.mapping"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Jsp"
  type: "java.lang.String"
  description: "Class name of the servlet to use for JSPs. If registered is true and\
    \ this class\n\t * is on the classpath then it will be registered."
  shortDescription: "Class name of the servlet to use for JSPs."
  name: "server.servlet.jsp.class-name"
  defaultValue: "org.apache.jasper.servlet.JspServlet"
- owner: "org.springframework.boot.web.servlet.server.Jsp"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Init parameters used to configure the JSP servlet."
  shortDescription: "Init parameters used to configure the JSP servlet."
  name: "server.servlet.jsp.init-parameters"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Jsp"
  type: "java.lang.Boolean"
  description: "Whether the JSP servlet is registered."
  shortDescription: "Whether the JSP servlet is registered."
  name: "server.servlet.jsp.registered"
  defaultValue: true
- type: "java.lang.String"
  description: "Path of the main dispatcher servlet."
  shortDescription: "Path of the main dispatcher servlet."
  name: "server.servlet.path"
  defaultValue: "/"
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.mvc.servlet.path"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  type: "java.lang.Boolean"
  description: "Whether to register the default Servlet with the container."
  shortDescription: "Whether to register the default Servlet with the container."
  name: "server.servlet.register-default-servlet"
  defaultValue: false
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.String"
  description: "Comment for the session cookie."
  shortDescription: "Comment for the session cookie."
  name: "server.servlet.session.cookie.comment"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.String"
  description: "Domain for the session cookie."
  shortDescription: "Domain for the session cookie."
  name: "server.servlet.session.cookie.domain"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.Boolean"
  description: "Whether to use \"HttpOnly\" cookies for session cookies."
  shortDescription: "Whether to use \"HttpOnly\" cookies for session cookies."
  name: "server.servlet.session.cookie.http-only"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.time.Duration"
  description: "Maximum age of the session cookie. If a duration suffix is not specified,\
    \ seconds will be used."
  shortDescription: "Maximum age of the session cookie."
  name: "server.servlet.session.cookie.max-age"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.String"
  description: "Session cookie name."
  shortDescription: "Session cookie name."
  name: "server.servlet.session.cookie.name"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.String"
  description: "Path of the session cookie."
  shortDescription: "Path of the session cookie."
  name: "server.servlet.session.cookie.path"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.Boolean"
  description: "Whether to always mark the session cookie as secure."
  shortDescription: "Whether to always mark the session cookie as secure."
  name: "server.servlet.session.cookie.secure"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session"
  type: "java.lang.Boolean"
  description: "Whether to persist session data between restarts."
  shortDescription: "Whether to persist session data between restarts."
  name: "server.servlet.session.persistent"
  defaultValue: false
- owner: "org.springframework.boot.web.servlet.server.Session"
  type: "java.io.File"
  description: "Directory used to store session data."
  shortDescription: "Directory used to store session data."
  name: "server.servlet.session.store-dir"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session"
  type: "java.time.Duration"
  description: "Session timeout. If a duration suffix is not specified, seconds will\
    \ be used."
  shortDescription: "Session timeout."
  name: "server.servlet.session.timeout"
  defaultValue: "30m"
- owner: "org.springframework.boot.web.servlet.server.Session"
  type: "java.util.Set<org.springframework.boot.web.servlet.server.Session$SessionTrackingMode>"
  description: "Session tracking modes."
  shortDescription: "Session tracking modes."
  name: "server.servlet.session.tracking-modes"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "org.springframework.boot.web.server.Shutdown"
  description: "Type of shutdown that the server will support."
  shortDescription: "Type of shutdown that the server will support."
  name: "server.shutdown"
  defaultValue: "immediate"
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  description: "Supported SSL ciphers."
  shortDescription: "Supported SSL ciphers."
  name: "server.ssl.ciphers"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "org.springframework.boot.web.server.Ssl$ClientAuth"
  description: "Client authentication mode. Requires a trust store."
  shortDescription: "Client authentication mode."
  name: "server.ssl.client-auth"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support."
  shortDescription: "Whether to enable SSL support."
  name: "server.ssl.enabled"
  defaultValue: true
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  description: "Enabled SSL protocols."
  shortDescription: "Enabled SSL protocols."
  name: "server.ssl.enabled-protocols"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Alias that identifies the key in the key store."
  shortDescription: "Alias that identifies the key in the key store."
  name: "server.ssl.key-alias"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the key in the key store."
  shortDescription: "Password used to access the key in the key store."
  name: "server.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Path to the key store that holds the SSL certificate (typically a\
    \ jks file)."
  shortDescription: "Path to the key store that holds the SSL certificate (typically\
    \ a jks file)."
  name: "server.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  shortDescription: "Password used to access the key store."
  name: "server.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Provider for the key store."
  shortDescription: "Provider for the key store."
  name: "server.ssl.key-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  shortDescription: "Type of the key store."
  name: "server.ssl.key-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  shortDescription: "SSL protocol to use."
  name: "server.ssl.protocol"
  defaultValue: "TLS"
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Trust store that holds SSL certificates."
  shortDescription: "Trust store that holds SSL certificates."
  name: "server.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the trust store."
  shortDescription: "Password used to access the trust store."
  name: "server.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Provider for the trust store."
  shortDescription: "Provider for the trust store."
  name: "server.ssl.trust-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  shortDescription: "Type of the trust store."
  name: "server.ssl.trust-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Integer"
  description: "Maximum queue length for incoming connection requests when all possible\
    \ request processing threads are in use."
  shortDescription: "Maximum queue length for incoming connection requests when all\
    \ possible request processing threads are in use."
  name: "server.tomcat.accept-count"
  defaultValue: 100
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to buffer output such that it is flushed only periodically."
  shortDescription: "Whether to buffer output such that it is flushed only periodically."
  name: "server.tomcat.accesslog.buffered"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to check for log file existence so it can be recreated it\
    \ if an external process has renamed it."
  shortDescription: "Whether to check for log file existence so it can be recreated\
    \ it if an external process has renamed it."
  name: "server.tomcat.accesslog.check-exists"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Whether logging of the request will only be enabled if \"ServletRequest.getAttribute(conditionIf)\"\
    \ does not yield null."
  shortDescription: "Whether logging of the request will only be enabled if \"ServletRequest.getAttribute(conditionIf)\"\
    \ does not yield null."
  name: "server.tomcat.accesslog.condition-if"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Whether logging of the request will only be enabled if \"ServletRequest.getAttribute(conditionUnless)\"\
    \ yield null."
  shortDescription: "Whether logging of the request will only be enabled if \"ServletRequest.getAttribute(conditionUnless)\"\
    \ yield null."
  name: "server.tomcat.accesslog.condition-unless"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Directory in which log files are created. Can be absolute or relative\
    \ to the Tomcat base dir."
  shortDescription: "Directory in which log files are created."
  name: "server.tomcat.accesslog.directory"
  defaultValue: "logs"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Enable access log."
  shortDescription: "Enable access log."
  name: "server.tomcat.accesslog.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Character set used by the log file. Default to the system default\
    \ character set."
  shortDescription: "Character set used by the log file."
  name: "server.tomcat.accesslog.encoding"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Date format to place in the log file name."
  shortDescription: "Date format to place in the log file name."
  name: "server.tomcat.accesslog.file-date-format"
  defaultValue: ".yyyy-MM-dd"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to use IPv6 canonical representation format as defined by\
    \ RFC 5952."
  shortDescription: "Whether to use IPv6 canonical representation format as defined\
    \ by RFC 5952."
  name: "server.tomcat.accesslog.ipv6-canonical"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Locale used to format timestamps in log entries and in log file name\
    \ suffix. Default to the default locale of the Java process."
  shortDescription: "Locale used to format timestamps in log entries and in log file\
    \ name suffix."
  name: "server.tomcat.accesslog.locale"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Integer"
  description: "Number of days to retain the access log files before they are removed."
  shortDescription: "Number of days to retain the access log files before they are\
    \ removed."
  name: "server.tomcat.accesslog.max-days"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Format pattern for access logs."
  shortDescription: "Format pattern for access logs."
  name: "server.tomcat.accesslog.pattern"
  defaultValue: "common"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Log file name prefix."
  shortDescription: "Log file name prefix."
  name: "server.tomcat.accesslog.prefix"
  defaultValue: "access_log"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to defer inclusion of the date stamp in the file name until\
    \ rotate time."
  shortDescription: "Whether to defer inclusion of the date stamp in the file name\
    \ until rotate time."
  name: "server.tomcat.accesslog.rename-on-rotate"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Set request attributes for the IP address, Hostname, protocol, and\
    \ port used for the request."
  shortDescription: "Set request attributes for the IP address, Hostname, protocol,\
    \ and port used for the request."
  name: "server.tomcat.accesslog.request-attributes-enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to enable access log rotation."
  shortDescription: "Whether to enable access log rotation."
  name: "server.tomcat.accesslog.rotate"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Log file name suffix."
  shortDescription: "Log file name suffix."
  name: "server.tomcat.accesslog.suffix"
  defaultValue: ".log"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of additional patterns that match jars to ignore\
    \ for TLD scanning. The special '?' and '*' characters can be used in the pattern\
    \ to match one and only one character and zero or more characters respectively."
  shortDescription: "Comma-separated list of additional patterns that match jars to\
    \ ignore for TLD scanning."
  name: "server.tomcat.additional-tld-skip-patterns"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.time.Duration"
  description: "Delay between the invocation of backgroundProcess methods. If a duration\
    \ suffix is not specified, seconds will be used."
  shortDescription: "Delay between the invocation of backgroundProcess methods."
  name: "server.tomcat.background-processor-delay"
  defaultValue: "10s"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.io.File"
  description: "Tomcat base directory. If not specified, a temporary directory is\
    \ used."
  shortDescription: "Tomcat base directory."
  name: "server.tomcat.basedir"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.time.Duration"
  description: "Amount of time the connector will wait, after accepting a connection,\
    \ for the request URI line to be presented."
  shortDescription: "Amount of time the connector will wait, after accepting a connection,\
    \ for the request URI line to be presented."
  name: "server.tomcat.connection-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.time.Duration"
  description: "Time to wait for another HTTP request before the connection is closed.\
    \ When not set the connectionTimeout is used. When set to -1 there will be no\
    \ timeout."
  shortDescription: "Time to wait for another HTTP request before the connection is\
    \ closed."
  name: "server.tomcat.keep-alive-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Integer"
  description: "Maximum number of connections that the server accepts and processes\
    \ at any given time. Once the limit has been reached, the operating system may\
    \ still accept connections based on the \"acceptCount\" property."
  shortDescription: "Maximum number of connections that the server accepts and processes\
    \ at any given time."
  name: "server.tomcat.max-connections"
  defaultValue: 8192
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the form content in any HTTP post request."
  shortDescription: "Maximum size of the form content in any HTTP post request."
  name: "server.tomcat.max-http-form-post-size"
  defaultValue: "2MB"
- type: "org.springframework.util.unit.DataSize"
  name: "server.tomcat.max-http-post-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.tomcat.max-http-form-post-size"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Integer"
  description: "Maximum number of HTTP requests that can be pipelined before the connection\
    \ is closed. When set to 0 or 1, keep-alive and pipelining are disabled. When\
    \ set to -1, an unlimited number of pipelined or keep-alive requests are allowed."
  shortDescription: "Maximum number of HTTP requests that can be pipelined before\
    \ the connection is closed."
  name: "server.tomcat.max-keep-alive-requests"
  defaultValue: 100
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum amount of request body to swallow."
  shortDescription: "Maximum amount of request body to swallow."
  name: "server.tomcat.max-swallow-size"
  defaultValue: "2MB"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry"
  type: "java.lang.Boolean"
  description: "Whether Tomcat's MBean Registry should be enabled."
  shortDescription: "Whether Tomcat's MBean Registry should be enabled."
  name: "server.tomcat.mbeanregistry.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Integer"
  description: "Maximum number of idle processors that will be retained in the cache\
    \ and reused with a subsequent request. When set to -1 the cache will be unlimited\
    \ with a theoretical maximum size equal to the maximum number of connections."
  shortDescription: "Maximum number of idle processors that will be retained in the\
    \ cache and reused with a subsequent request."
  name: "server.tomcat.processor-cache"
  defaultValue: 200
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Boolean"
  description: "Whether requests to the context root should be redirected by appending\
    \ a / to the path. When using SSL terminated at a proxy, this property should\
    \ be set to false."
  shortDescription: "Whether requests to the context root should be redirected by\
    \ appending a / to the path."
  name: "server.tomcat.redirect-context-root"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.util.List<java.lang.Character>"
  description: "Comma-separated list of additional unencoded characters that should\
    \ be allowed in URI paths. Only \"< > [ \\ ] ^ ` { | }\" are allowed."
  shortDescription: "Comma-separated list of additional unencoded characters that\
    \ should be allowed in URI paths."
  name: "server.tomcat.relaxed-path-chars"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.util.List<java.lang.Character>"
  description: "Comma-separated list of additional unencoded characters that should\
    \ be allowed in URI query strings. Only \"< > [ \\ ] ^ ` { | }\" are allowed."
  shortDescription: "Comma-separated list of additional unencoded characters that\
    \ should be allowed in URI query strings."
  name: "server.tomcat.relaxed-query-chars"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Name of the HTTP header from which the remote host is extracted."
  shortDescription: "Name of the HTTP header from which the remote host is extracted."
  name: "server.tomcat.remoteip.host-header"
  defaultValue: "X-Forwarded-Host"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Regular expression that matches proxies that are to be trusted."
  shortDescription: "Regular expression that matches proxies that are to be trusted."
  name: "server.tomcat.remoteip.internal-proxies"
  defaultValue: "10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|192\\.168\\.\\d{1,3}\\.\\d{1,3}|169\\\
    .254\\.\\d{1,3}\\.\\d{1,3}|127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|172\\.1[6-9]{1}\\\
    .\\d{1,3}\\.\\d{1,3}|172\\.2[0-9]{1}\\.\\d{1,3}\\.\\d{1,3}|172\\.3[0-1]{1}\\.\\\
    d{1,3}\\.\\d{1,3}|0:0:0:0:0:0:0:1|::1"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Name of the HTTP header used to override the original port value."
  shortDescription: "Name of the HTTP header used to override the original port value."
  name: "server.tomcat.remoteip.port-header"
  defaultValue: "X-Forwarded-Port"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Header that holds the incoming protocol, usually named \"X-Forwarded-Proto\"\
    ."
  shortDescription: "Header that holds the incoming protocol, usually named \"X-Forwarded-Proto\"\
    ."
  name: "server.tomcat.remoteip.protocol-header"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Value of the protocol header indicating whether the incoming request\
    \ uses SSL."
  shortDescription: "Value of the protocol header indicating whether the incoming\
    \ request uses SSL."
  name: "server.tomcat.remoteip.protocol-header-https-value"
  defaultValue: "https"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Name of the HTTP header from which the remote IP is extracted. For\
    \ instance, `X-FORWARDED-FOR`."
  shortDescription: "Name of the HTTP header from which the remote IP is extracted."
  name: "server.tomcat.remoteip.remote-ip-header"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
  type: "java.lang.Boolean"
  description: "Whether static resource caching is permitted for this web application."
  shortDescription: "Whether static resource caching is permitted for this web application."
  name: "server.tomcat.resource.allow-caching"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
  type: "java.time.Duration"
  description: "Time-to-live of the static resource cache."
  shortDescription: "Time-to-live of the static resource cache."
  name: "server.tomcat.resource.cache-ttl"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads"
  type: "java.lang.Integer"
  description: "Maximum amount of worker threads."
  shortDescription: "Maximum amount of worker threads."
  name: "server.tomcat.threads.max"
  defaultValue: 200
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads"
  type: "java.lang.Integer"
  description: "Minimum amount of worker threads."
  shortDescription: "Minimum amount of worker threads."
  name: "server.tomcat.threads.min-spare"
  defaultValue: 10
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.nio.charset.Charset"
  description: "Character encoding to use to decode the URI."
  shortDescription: "Character encoding to use to decode the URI."
  name: "server.tomcat.uri-encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Boolean"
  description: "Whether HTTP 1.1 and later location headers generated by a call to\
    \ sendRedirect will use relative or absolute redirects."
  shortDescription: "Whether HTTP 1.1 and later location headers generated by a call\
    \ to sendRedirect will use relative or absolute redirects."
  name: "server.tomcat.use-relative-redirects"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.io.File"
  description: "Undertow access log directory."
  shortDescription: "Undertow access log directory."
  name: "server.undertow.accesslog.dir"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to enable the access log."
  shortDescription: "Whether to enable the access log."
  name: "server.undertow.accesslog.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.String"
  description: "Format pattern for access logs."
  shortDescription: "Format pattern for access logs."
  name: "server.undertow.accesslog.pattern"
  defaultValue: "common"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.String"
  description: "Log file name prefix."
  shortDescription: "Log file name prefix."
  name: "server.undertow.accesslog.prefix"
  defaultValue: "access_log."
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to enable access log rotation."
  shortDescription: "Whether to enable access log rotation."
  name: "server.undertow.accesslog.rotate"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.String"
  description: "Log file name suffix."
  shortDescription: "Log file name suffix."
  name: "server.undertow.accesslog.suffix"
  defaultValue: "log"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether the server should decode percent encoded slash characters.\
    \ Enabling encoded slashes can have security implications due to different servers\
    \ interpreting the slash differently. Only enable this if you have a legacy application\
    \ that requires it."
  shortDescription: "Whether the server should decode percent encoded slash characters."
  name: "server.undertow.allow-encoded-slash"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether the 'Connection: keep-alive' header should be added to all\
    \ responses, even if not required by the HTTP specification."
  shortDescription: "Whether the 'Connection: keep-alive' header should be added to\
    \ all responses, even if not required by the HTTP specification."
  name: "server.undertow.always-set-keep-alive"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "org.springframework.util.unit.DataSize"
  description: "Size of each buffer. The default is derived from the maximum amount\
    \ of memory that is available to the JVM."
  shortDescription: "Size of each buffer."
  name: "server.undertow.buffer-size"
  defaultValue: ""
- type: "java.lang.Integer"
  description: "Number of buffer per region."
  shortDescription: "Number of buffer per region."
  name: "server.undertow.buffers-per-region"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether the URL should be decoded. When disabled, percent-encoded\
    \ characters in the URL will be left as-is."
  shortDescription: "Whether the URL should be decoded."
  name: "server.undertow.decode-url"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether to allocate buffers outside the Java heap. The default is\
    \ derived from the maximum amount of memory that is available to the JVM."
  shortDescription: "Whether to allocate buffers outside the Java heap."
  name: "server.undertow.direct-buffers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether servlet filters should be initialized on startup."
  shortDescription: "Whether servlet filters should be initialized on startup."
  name: "server.undertow.eager-filter-init"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Integer"
  description: "Maximum number of cookies that are allowed. This limit exists to prevent\
    \ hash collision based DOS attacks."
  shortDescription: "Maximum number of cookies that are allowed."
  name: "server.undertow.max-cookies"
  defaultValue: 200
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Integer"
  description: "Maximum number of headers that are allowed. This limit exists to prevent\
    \ hash collision based DOS attacks."
  shortDescription: "Maximum number of headers that are allowed."
  name: "server.undertow.max-headers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the HTTP post content. When the value is -1, the default,\
    \ the size is unlimited."
  shortDescription: "Maximum size of the HTTP post content."
  name: "server.undertow.max-http-post-size"
  defaultValue: "-1B"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Integer"
  description: "Maximum number of query or path parameters that are allowed. This\
    \ limit exists to prevent hash collision based DOS attacks."
  shortDescription: "Maximum number of query or path parameters that are allowed."
  name: "server.undertow.max-parameters"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.time.Duration"
  description: "Amount of time a connection can sit idle without processing a request,\
    \ before it is closed by the server."
  shortDescription: "Amount of time a connection can sit idle without processing a\
    \ request, before it is closed by the server."
  name: "server.undertow.no-request-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  name: "server.undertow.options.server"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  name: "server.undertow.options.socket"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether to preserve the path of a request when it is forwarded."
  shortDescription: "Whether to preserve the path of a request when it is forwarded."
  name: "server.undertow.preserve-path-on-forward"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads"
  type: "java.lang.Integer"
  description: "Number of I/O threads to create for the worker. The default is derived\
    \ from the number of available processors."
  shortDescription: "Number of I/O threads to create for the worker."
  name: "server.undertow.threads.io"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads"
  type: "java.lang.Integer"
  description: "Number of worker threads. The default is 8 times the number of I/O\
    \ threads."
  shortDescription: "Number of worker threads."
  name: "server.undertow.threads.worker"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.nio.charset.Charset"
  description: "Charset used to decode URLs."
  shortDescription: "Charset used to decode URLs."
  name: "server.undertow.url-charset"
  defaultValue: "UTF-8"
- type: "java.lang.Boolean"
  name: "server.use-forward-headers"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Replaced to support additional strategies."
  deprecationReplacement: "server.forward-headers-strategy"
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.String"
  description: "URL of the ActiveMQ broker. Auto-generated by default."
  shortDescription: "URL of the ActiveMQ broker."
  name: "spring.activemq.broker-url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.time.Duration"
  description: "Time to wait before considering a close complete."
  shortDescription: "Time to wait before considering a close complete."
  name: "spring.activemq.close-timeout"
  defaultValue: "15s"
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.Boolean"
  description: "Whether the default broker URL should be in memory. Ignored if an\
    \ explicit broker has been specified."
  shortDescription: "Whether the default broker URL should be in memory."
  name: "spring.activemq.in-memory"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.Boolean"
  description: "Whether to stop message delivery before re-delivering messages from\
    \ a rolled back transaction. This implies that message order is not preserved\
    \ when this is enabled."
  shortDescription: "Whether to stop message delivery before re-delivering messages\
    \ from a rolled back transaction."
  name: "spring.activemq.non-blocking-redelivery"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties$Packages"
  type: "java.lang.Boolean"
  description: "Whether to trust all packages."
  shortDescription: "Whether to trust all packages."
  name: "spring.activemq.packages.trust-all"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties$Packages"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of specific packages to trust (when not trusting\
    \ all packages)."
  shortDescription: "Comma-separated list of specific packages to trust (when not\
    \ trusting all packages)."
  name: "spring.activemq.packages.trusted"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.String"
  description: "Login password of the broker."
  shortDescription: "Login password of the broker."
  name: "spring.activemq.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether to block when a connection is requested and the pool is full.\
    \ Set it to false to throw a \"JMSException\" instead."
  shortDescription: "Whether to block when a connection is requested and the pool\
    \ is full."
  name: "spring.activemq.pool.block-if-full"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Blocking period before throwing an exception if the pool is still\
    \ full."
  shortDescription: "Blocking period before throwing an exception if the pool is still\
    \ full."
  name: "spring.activemq.pool.block-if-full-timeout"
  defaultValue: "-1ms"
- type: "java.lang.Boolean"
  description: "Whether to create a connection on startup. Can be used to warm up\
    \ the pool on startup."
  shortDescription: "Whether to create a connection on startup."
  name: "spring.activemq.pool.create-connection-on-startup"
  defaultValue: true
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether a JmsPoolConnectionFactory should be created, instead of a\
    \ regular ConnectionFactory."
  shortDescription: "Whether a JmsPoolConnectionFactory should be created, instead\
    \ of a regular ConnectionFactory."
  name: "spring.activemq.pool.enabled"
  defaultValue: false
- type: "java.time.Duration"
  description: "Connection expiration timeout."
  shortDescription: "Connection expiration timeout."
  name: "spring.activemq.pool.expiry-timeout"
  defaultValue: "0ms"
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Connection idle timeout."
  shortDescription: "Connection idle timeout."
  name: "spring.activemq.pool.idle-timeout"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of pooled connections."
  shortDescription: "Maximum number of pooled connections."
  name: "spring.activemq.pool.max-connections"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of pooled sessions per connection in the pool."
  shortDescription: "Maximum number of pooled sessions per connection in the pool."
  name: "spring.activemq.pool.max-sessions-per-connection"
  defaultValue: 500
- name: "spring.activemq.pool.maximum-active-session-per-connection"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.activemq.pool.max-sessions-per-connection"
- type: "java.lang.Boolean"
  description: "Reset the connection when a \"JMSException\" occurs."
  shortDescription: "Reset the connection when a \"JMSException\" occurs."
  name: "spring.activemq.pool.reconnect-on-exception"
  defaultValue: true
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Time to sleep between runs of the idle connection eviction thread.\
    \ When negative, no idle connection eviction thread runs."
  shortDescription: "Time to sleep between runs of the idle connection eviction thread."
  name: "spring.activemq.pool.time-between-expiration-check"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether to use only one anonymous \"MessageProducer\" instance. Set\
    \ it to false to create one \"MessageProducer\" every time one is required."
  shortDescription: "Whether to use only one anonymous \"MessageProducer\" instance."
  name: "spring.activemq.pool.use-anonymous-producers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.time.Duration"
  description: "Time to wait on message sends for a response. Set it to 0 to wait\
    \ forever."
  shortDescription: "Time to wait on message sends for a response."
  name: "spring.activemq.send-timeout"
  defaultValue: "0ms"
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.String"
  description: "Login user of the broker."
  shortDescription: "Login user of the broker."
  name: "spring.activemq.user"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Add @EnableAspectJAutoProxy."
  shortDescription: "Add @EnableAspectJAutoProxy."
  name: "spring.aop.auto"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether subclass-based (CGLIB) proxies are to be created (true), as\
    \ opposed to standard Java interface-based proxies (false)."
  shortDescription: "Whether subclass-based (CGLIB) proxies are to be created (true),\
    \ as opposed to standard Java interface-based proxies (false)."
  name: "spring.aop.proxy-target-class"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable admin features for the application."
  shortDescription: "Whether to enable admin features for the application."
  name: "spring.application.admin.enabled"
  defaultValue: false
- type: "java.lang.String"
  description: "JMX name of the application admin MBean."
  shortDescription: "JMX name of the application admin MBean."
  name: "spring.application.admin.jmx-name"
  defaultValue: "org.springframework.boot:type=Admin,name=SpringApplication"
- type: "java.lang.Integer"
  description: "Application index."
  shortDescription: "Application index."
  name: "spring.application.index"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Application context ids are now unique by default."
- owner: "org.springframework.boot.context.ContextIdApplicationContextInitializer"
  type: "java.lang.String"
  description: "Application name."
  shortDescription: "Application name."
  name: "spring.application.name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "java.lang.String"
  description: "Artemis broker port."
  shortDescription: "Artemis broker port."
  name: "spring.artemis.broker-url"
  defaultValue: "tcp://localhost:61616"
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.String"
  description: "Cluster password. Randomly generated on startup by default."
  shortDescription: "Cluster password."
  name: "spring.artemis.embedded.cluster-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.String"
  description: "Journal file directory. Not necessary if persistence is turned off."
  shortDescription: "Journal file directory."
  name: "spring.artemis.embedded.data-directory"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.Boolean"
  description: "Whether to enable embedded mode if the Artemis server APIs are available."
  shortDescription: "Whether to enable embedded mode if the Artemis server APIs are\
    \ available."
  name: "spring.artemis.embedded.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.Boolean"
  description: "Whether to enable persistent store."
  shortDescription: "Whether to enable persistent store."
  name: "spring.artemis.embedded.persistent"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.String[]"
  description: "Comma-separated list of queues to create on startup."
  shortDescription: "Comma-separated list of queues to create on startup."
  name: "spring.artemis.embedded.queues"
  defaultValue: []
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.Integer"
  description: "Server ID. By default, an auto-incremented counter is used."
  shortDescription: "Server ID."
  name: "spring.artemis.embedded.server-id"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.String[]"
  description: "Comma-separated list of topics to create on startup."
  shortDescription: "Comma-separated list of topics to create on startup."
  name: "spring.artemis.embedded.topics"
  defaultValue: []
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "java.lang.String"
  description: "Artemis broker host."
  shortDescription: "Artemis broker host."
  name: "spring.artemis.host"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.artemis.broker-url"
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisMode"
  description: "Artemis deployment mode, auto-detected by default."
  shortDescription: "Artemis deployment mode, auto-detected by default."
  name: "spring.artemis.mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "java.lang.String"
  description: "Login password of the broker."
  shortDescription: "Login password of the broker."
  name: "spring.artemis.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether to block when a connection is requested and the pool is full.\
    \ Set it to false to throw a \"JMSException\" instead."
  shortDescription: "Whether to block when a connection is requested and the pool\
    \ is full."
  name: "spring.artemis.pool.block-if-full"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Blocking period before throwing an exception if the pool is still\
    \ full."
  shortDescription: "Blocking period before throwing an exception if the pool is still\
    \ full."
  name: "spring.artemis.pool.block-if-full-timeout"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether a JmsPoolConnectionFactory should be created, instead of a\
    \ regular ConnectionFactory."
  shortDescription: "Whether a JmsPoolConnectionFactory should be created, instead\
    \ of a regular ConnectionFactory."
  name: "spring.artemis.pool.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Connection idle timeout."
  shortDescription: "Connection idle timeout."
  name: "spring.artemis.pool.idle-timeout"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of pooled connections."
  shortDescription: "Maximum number of pooled connections."
  name: "spring.artemis.pool.max-connections"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of pooled sessions per connection in the pool."
  shortDescription: "Maximum number of pooled sessions per connection in the pool."
  name: "spring.artemis.pool.max-sessions-per-connection"
  defaultValue: 500
- name: "spring.artemis.pool.maximum-active-session-per-connection"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.artemis.pool.max-sessions-per-connection"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Time to sleep between runs of the idle connection eviction thread.\
    \ When negative, no idle connection eviction thread runs."
  shortDescription: "Time to sleep between runs of the idle connection eviction thread."
  name: "spring.artemis.pool.time-between-expiration-check"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether to use only one anonymous \"MessageProducer\" instance. Set\
    \ it to false to create one \"MessageProducer\" every time one is required."
  shortDescription: "Whether to use only one anonymous \"MessageProducer\" instance."
  name: "spring.artemis.pool.use-anonymous-producers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "java.lang.Integer"
  description: "Artemis broker port."
  shortDescription: "Artemis broker port."
  name: "spring.artemis.port"
  defaultValue: 61616
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.artemis.broker-url"
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "java.lang.String"
  description: "Login user of the broker."
  shortDescription: "Login user of the broker."
  name: "spring.artemis.user"
  defaultValue: ""
- type: "java.util.List<java.lang.Class>"
  description: "Auto-configuration classes to exclude."
  shortDescription: "Auto-configuration classes to exclude."
  name: "spring.autoconfigure.exclude"
  defaultValue: ""
- type: "java.nio.charset.Charset"
  description: "Banner file encoding."
  shortDescription: "Banner file encoding."
  name: "spring.banner.charset"
  defaultValue: "UTF-8"
- type: "java.lang.Integer"
  description: "Bit depth to use for ANSI colors. Supported values are 4 (16 color)\
    \ or 8 (256 color)."
  shortDescription: "Bit depth to use for ANSI colors."
  name: "spring.banner.image.bitdepth"
  defaultValue: 4
- type: "java.lang.Integer"
  description: "Height of the banner image in chars (default based on image height)."
  shortDescription: "Height of the banner image in chars (default based on image height)."
  name: "spring.banner.image.height"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether images should be inverted for dark terminal themes."
  shortDescription: "Whether images should be inverted for dark terminal themes."
  name: "spring.banner.image.invert"
  defaultValue: false
- type: "org.springframework.core.io.Resource"
  description: "Banner image file location (jpg or png can also be used)."
  shortDescription: "Banner image file location (jpg or png can also be used)."
  name: "spring.banner.image.location"
  defaultValue: "classpath:banner.gif"
- type: "java.lang.Integer"
  description: "Left hand image margin in chars."
  shortDescription: "Left hand image margin in chars."
  name: "spring.banner.image.margin"
  defaultValue: 2
- type: "org.springframework.boot.ImageBanner$PixelMode"
  description: "Pixel mode to use when rendering the image."
  shortDescription: "Pixel mode to use when rendering the image."
  name: "spring.banner.image.pixelmode"
  defaultValue: "TEXT"
- type: "java.lang.Integer"
  description: "Width of the banner image in chars."
  shortDescription: "Width of the banner image in chars."
  name: "spring.banner.image.width"
  defaultValue: 76
- type: "org.springframework.core.io.Resource"
  description: "Banner text resource location."
  shortDescription: "Banner text resource location."
  name: "spring.banner.location"
  defaultValue: "classpath:banner.txt"
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  name: "spring.batch.initialize-schema"
  defaultValue: "embedded"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.batch.jdbc.initialize-schema"
- type: "java.lang.Boolean"
  description: "Create the required batch tables on startup if necessary. Enabled\
    \ automatically\n if no custom table prefix is set or if a custom schema is configured."
  shortDescription: "Create the required batch tables on startup if necessary."
  name: "spring.batch.initializer.enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.batch.jdbc.initialize-schema"
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties$Jdbc"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Database schema initialization mode."
  shortDescription: "Database schema initialization mode."
  name: "spring.batch.jdbc.initialize-schema"
  defaultValue: "embedded"
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties$Jdbc"
  type: "java.lang.String"
  description: "Path to the SQL file to use to initialize the database schema."
  shortDescription: "Path to the SQL file to use to initialize the database schema."
  name: "spring.batch.jdbc.schema"
  defaultValue: "classpath:org/springframework/batch/core/schema-@@platform@@.sql"
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties$Jdbc"
  type: "java.lang.String"
  description: "Table prefix for all the batch meta-data tables."
  shortDescription: "Table prefix for all the batch meta-data tables."
  name: "spring.batch.jdbc.table-prefix"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Execute all Spring Batch jobs in the context on startup."
  shortDescription: "Execute all Spring Batch jobs in the context on startup."
  name: "spring.batch.job.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties$Job"
  type: "java.lang.String"
  description: "Comma-separated list of job names to execute on startup (for instance,\
    \ `job1,job2`). By default, all Jobs found in the context are executed."
  shortDescription: "Comma-separated list of job names to execute on startup (for\
    \ instance, `job1,job2`)."
  name: "spring.batch.job.names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties"
  type: "java.lang.String"
  name: "spring.batch.schema"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.batch.jdbc.schema"
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties"
  type: "java.lang.String"
  name: "spring.batch.table-prefix"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.batch.jdbc.table-prefix"
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.lang.Boolean"
  description: "Whether to skip search of BeanInfo classes."
  shortDescription: "Whether to skip search of BeanInfo classes."
  name: "spring.beaninfo.ignore"
  defaultValue: true
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.lang.String"
  description: "The admin rest-apis path."
  shortDescription: "The admin rest-apis path."
  name: "spring.boot.admin.client.api-path"
  defaultValue: "instances"
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.lang.Boolean"
  description: "Enable automatic deregistration on shutdown If not set it defaults\
    \ to true if a active {@link CloudPlatform} is present;"
  shortDescription: "Enable automatic deregistration on shutdown If not set it defaults\
    \ to true if a active {@link CloudPlatform} is present;"
  name: "spring.boot.admin.client.auto-deregistration"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.lang.Boolean"
  description: "Enable automatic registration when the application is ready."
  shortDescription: "Enable automatic registration when the application is ready."
  name: "spring.boot.admin.client.auto-registration"
  defaultValue: true
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.time.Duration"
  description: "Connect timeout for the registration."
  shortDescription: "Connect timeout for the registration."
  name: "spring.boot.admin.client.connect-timeout"
  defaultValue: "5000ms"
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.lang.Boolean"
  description: "Enable Spring Admin Client."
  shortDescription: "Enable Spring Admin Client."
  name: "spring.boot.admin.client.enabled"
  defaultValue: "true"
- owner: "de.codecentric.boot.admin.client.config.InstanceProperties"
  type: "java.lang.String"
  description: "Client-health-URL to register with. Inferred at runtime, can be overridden\
    \ in case the reachable URL is different (e.g. Docker). Must be unique all services\
    \ registry."
  shortDescription: "Client-health-URL to register with."
  name: "spring.boot.admin.client.instance.health-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.InstanceProperties"
  type: "java.lang.String"
  description: "Base url for computing the management-url to register with. The path\
    \ is inferred at runtime, and appended to the base url."
  shortDescription: "Base url for computing the management-url to register with."
  name: "spring.boot.admin.client.instance.management-base-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.InstanceProperties"
  type: "java.lang.String"
  description: "Management-url to register with. Inferred at runtime, can be overridden\
    \ in case the reachable URL is different (e.g. Docker)."
  shortDescription: "Management-url to register with."
  name: "spring.boot.admin.client.instance.management-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.InstanceProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Metadata that should be associated with this application"
  shortDescription: "Metadata that should be associated with this application"
  name: "spring.boot.admin.client.instance.metadata"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.InstanceProperties"
  type: "java.lang.String"
  description: "Name to register with. Defaults to ${spring.application.name}"
  shortDescription: "Name to register with."
  name: "spring.boot.admin.client.instance.name"
  defaultValue: "spring-boot-application"
- owner: "de.codecentric.boot.admin.client.config.InstanceProperties"
  type: "java.lang.Boolean"
  description: "Should the registered urls be built with server.address or with hostname."
  shortDescription: "Should the registered urls be built with server.address or with\
    \ hostname."
  name: "spring.boot.admin.client.instance.prefer-ip"
  defaultValue: false
- owner: "de.codecentric.boot.admin.client.config.InstanceProperties"
  type: "java.lang.String"
  description: "Base url for computing the service-url to register with. The path\
    \ is inferred at runtime, and appended to the base url."
  shortDescription: "Base url for computing the service-url to register with."
  name: "spring.boot.admin.client.instance.service-base-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.InstanceProperties"
  type: "java.lang.String"
  description: "Path for computing the service-url to register with. If not specified,\
    \ defaults to \"/\""
  shortDescription: "Path for computing the service-url to register with."
  name: "spring.boot.admin.client.instance.service-path"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.InstanceProperties"
  type: "java.lang.String"
  description: "Client-service-URL register with. Inferred at runtime, can be overridden\
    \ in case the reachable URL is different (e.g. Docker)."
  shortDescription: "Client-service-URL register with."
  name: "spring.boot.admin.client.instance.service-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.lang.String"
  description: "Password for basic authentication on admin server"
  shortDescription: "Password for basic authentication on admin server"
  name: "spring.boot.admin.client.password"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.time.Duration"
  description: "Time interval the registration is repeated"
  shortDescription: "Time interval the registration is repeated"
  name: "spring.boot.admin.client.period"
  defaultValue: "10000ms"
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.time.Duration"
  description: "Read timeout (in ms) for the registration."
  shortDescription: "Read timeout (in ms) for the registration."
  name: "spring.boot.admin.client.read-timeout"
  defaultValue: "5000ms"
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.lang.Boolean"
  description: "Enable registration against one or all admin servers"
  shortDescription: "Enable registration against one or all admin servers"
  name: "spring.boot.admin.client.register-once"
  defaultValue: true
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.lang.String[]"
  description: "The admin server urls to register at"
  shortDescription: "The admin server urls to register at"
  name: "spring.boot.admin.client.url"
  defaultValue: []
- owner: "de.codecentric.boot.admin.client.config.ClientProperties"
  type: "java.lang.String"
  description: "Username for basic authentication on admin server"
  shortDescription: "Username for basic authentication on admin server"
  name: "spring.boot.admin.client.username"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties"
  type: "java.lang.String"
  description: "The context-path prefixes the path where the Admin Servers statics\
    \ assets and api should be served. Relative to the Dispatcher-Servlet."
  shortDescription: "The context-path prefixes the path where the Admin Servers statics\
    \ assets and api should be served."
  name: "spring.boot.admin.context-path"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.cloud.discovery.DefaultServiceInstanceConverter"
  type: "java.lang.String"
  description: "Default path of the health-endpoint to be used for the health-url\
    \ of the discovered service."
  shortDescription: "Default path of the health-endpoint to be used for the health-url\
    \ of the discovered service."
  name: "spring.boot.admin.discovery.converter.health-endpoint-path"
  defaultValue: "health"
- owner: "de.codecentric.boot.admin.server.cloud.discovery.DefaultServiceInstanceConverter"
  type: "java.lang.String"
  description: "Default context-path to be appended to the url of the discovered service\
    \ for the managment-url."
  shortDescription: "Default context-path to be appended to the url of the discovered\
    \ service for the managment-url."
  name: "spring.boot.admin.discovery.converter.management-context-path"
  defaultValue: "/actuator"
- type: "java.lang.Boolean"
  description: "Enable Spring Cloud Discovery support."
  shortDescription: "Enable Spring Cloud Discovery support."
  name: "spring.boot.admin.discovery.enabled"
  defaultValue: "true"
- owner: "de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Map of metadata that has to be matched by service instance that is\
    \ to be ignored. (e.g. \"discoverable=false\")"
  shortDescription: "Map of metadata that has to be matched by service instance that\
    \ is to be ignored."
  name: "spring.boot.admin.discovery.ignored-instances-metadata"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener"
  type: "java.util.Set<java.lang.String>"
  description: "Set of serviceIds to be ignored and not to be registered as application.\
    \ Supports simple patterns (e.g. \"foo*\", \"*foo\", \"foo*bar\")."
  shortDescription: "Set of serviceIds to be ignored and not to be registered as application."
  name: "spring.boot.admin.discovery.ignored-services"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Map of metadata that has to be matched by service instance that is\
    \ to be registered. (e.g. \"discoverable=true\")"
  shortDescription: "Map of metadata that has to be matched by service instance that\
    \ is to be registered."
  name: "spring.boot.admin.discovery.instances-metadata"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener"
  type: "java.util.Set<java.lang.String>"
  description: "Set of serviceIds that has to match to be registered as application.\
    \ Supports simple patterns (e.g. \"foo*\", \"*foo\", \"foo*bar\"). Default value\
    \ is everything"
  shortDescription: "Set of serviceIds that has to match to be registered as application."
  name: "spring.boot.admin.discovery.services"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enable Hazelcast support."
  shortDescription: "Enable Hazelcast support."
  name: "spring.boot.admin.hazelcast.enabled"
  defaultValue: "true"
- type: "java.lang.String"
  description: "Name of backing Hazelcast-Map for storing the instance events."
  shortDescription: "Name of backing Hazelcast-Map for storing the instance events."
  name: "spring.boot.admin.hazelcast.event-store"
  defaultValue: "spring-boot-admin-application-store"
- type: "java.lang.String"
  description: "Name of backing Hazelcast-Map for storing the sent notifications."
  shortDescription: "Name of backing Hazelcast-Map for storing the sent notifications."
  name: "spring.boot.admin.hazelcast.sent-notifications"
  defaultValue: "spring-boot-admin-sent-notifications"
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$InstanceAuthProperties"
  type: "java.lang.String"
  description: "Default userpassword used for authentication to each instance. Individual\
    \ values for specific instances can be overriden using `spring.boot.admin.instance-auth.service-map.*.user-password`.\
    \ <br/> Default: null"
  shortDescription: "Default userpassword used for authentication to each instance."
  name: "spring.boot.admin.instance-auth.default-password"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$InstanceAuthProperties"
  type: "java.lang.String"
  description: "Default username used for authentication to each instance. Individual\
    \ values for specific instances can be overriden using `spring.boot.admin.instance-auth.service-map.*.user-name`.\
    \ <br/> Default: null"
  shortDescription: "Default username used for authentication to each instance."
  name: "spring.boot.admin.instance-auth.default-user-name"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$InstanceAuthProperties"
  type: "java.lang.Boolean"
  description: "Whether or not to use configuration properties as a source for instance\
    \ credentials <br/> Default: true"
  shortDescription: "Whether or not to use configuration properties as a source for\
    \ instance credentials <br/> Default: true"
  name: "spring.boot.admin.instance-auth.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$InstanceAuthProperties"
  type: "java.util.Map<java.lang.String,de.codecentric.boot.admin.server.web.client.BasicAuthHttpHeaderProvider$InstanceCredentials>"
  description: "Map of instance credentials per registered service name"
  shortDescription: "Map of instance credentials per registered service name"
  name: "spring.boot.admin.instance-auth.service-map"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$InstanceProxyProperties"
  type: "java.util.Set<java.lang.String>"
  description: "Headers not to be forwarded when making requests to clients."
  shortDescription: "Headers not to be forwarded when making requests to clients."
  name: "spring.boot.admin.instance-proxy.ignored-headers"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties"
  type: "java.lang.String[]"
  description: "The metadata keys which should be sanitized when serializing to json"
  shortDescription: "The metadata keys which should be sanitized when serializing\
    \ to json"
  name: "spring.boot.admin.metadata-keys-to-sanitize"
  defaultValue:
  - ".*password$"
  - ".*secret$"
  - ".*key$"
  - ".*token$"
  - ".*credentials.*"
  - ".*vcap_services$"
- name: "spring.boot.admin.monitor.connect-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.boot.admin.monitor.default-timeout"
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$MonitorProperties"
  type: "java.lang.Integer"
  description: "Default number of retries for failed requests. Individual values for\
    \ specific endpoints can be overriden using `spring.boot.admin.monitor.retries.*`."
  shortDescription: "Default number of retries for failed requests."
  name: "spring.boot.admin.monitor.default-retries"
  defaultValue: 0
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$MonitorProperties"
  type: "java.time.Duration"
  description: "Default timeout when making requests. Individual values for specific\
    \ endpoints can be overriden using `spring.boot.admin.monitor.timeout.*`."
  shortDescription: "Default timeout when making requests."
  name: "spring.boot.admin.monitor.default-timeout"
  defaultValue: "10000ms"
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$MonitorProperties"
  type: "java.time.Duration"
  description: "Time interval to check the info of instances,"
  shortDescription: "Time interval to check the info of instances,"
  name: "spring.boot.admin.monitor.info-interval"
  defaultValue: "1m"
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$MonitorProperties"
  type: "java.time.Duration"
  description: "Lifetime of info. The info won't be updated as long the last info\
    \ isn't expired."
  shortDescription: "Lifetime of info."
  name: "spring.boot.admin.monitor.info-lifetime"
  defaultValue: "1m"
- name: "spring.boot.admin.monitor.period"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.boot.admin.monitor.status-interval"
- name: "spring.boot.admin.monitor.read-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.boot.admin.monitor.default-timeout"
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$MonitorProperties"
  type: "java.util.Map<java.lang.String,java.lang.Integer>"
  description: "Number of retries per endpointId. Defaults to default-retry."
  shortDescription: "Number of retries per endpointId."
  name: "spring.boot.admin.monitor.retries"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$MonitorProperties"
  type: "java.time.Duration"
  description: "Time interval to check the status of instances."
  shortDescription: "Time interval to check the status of instances."
  name: "spring.boot.admin.monitor.status-interval"
  defaultValue: "10000ms"
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$MonitorProperties"
  type: "java.time.Duration"
  description: "Lifetime of status. The status won't be updated as long the last status\
    \ isn't expired."
  shortDescription: "Lifetime of status."
  name: "spring.boot.admin.monitor.status-lifetime"
  defaultValue: "10000ms"
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$MonitorProperties"
  type: "java.util.Map<java.lang.String,java.time.Duration>"
  description: "timeout per endpointId. Defaults to default-timeout."
  shortDescription: "timeout per endpointId."
  name: "spring.boot.admin.monitor.timeout"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.DingTalkNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.dingtalk.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.DingTalkNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.dingtalk.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.DingTalkNotifier"
  type: "java.lang.String"
  name: "spring.boot.admin.notify.dingtalk.message"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.DingTalkNotifier"
  type: "java.lang.String"
  description: "Secret for DingTalk."
  shortDescription: "Secret for DingTalk."
  name: "spring.boot.admin.notify.dingtalk.secret"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.DingTalkNotifier"
  type: "java.lang.String"
  description: "Webhook URI for the DingTalk API."
  shortDescription: "Webhook URI for the DingTalk API."
  name: "spring.boot.admin.notify.dingtalk.webhook-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.DiscordNotifier"
  type: "java.lang.String"
  description: "Optional URL to avatar."
  shortDescription: "Optional URL to avatar."
  name: "spring.boot.admin.notify.discord.avatar-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.DiscordNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.discord.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.DiscordNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.discord.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.DiscordNotifier"
  type: "java.lang.String"
  name: "spring.boot.admin.notify.discord.message"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.DiscordNotifier"
  type: "java.lang.Boolean"
  description: "If the message is a text to speech message. False by default."
  shortDescription: "If the message is a text to speech message."
  name: "spring.boot.admin.notify.discord.tts"
  defaultValue: false
- owner: "de.codecentric.boot.admin.server.notify.DiscordNotifier"
  type: "java.lang.String"
  description: "Optional username. Default is set in Discord."
  shortDescription: "Optional username."
  name: "spring.boot.admin.notify.discord.username"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.DiscordNotifier"
  type: "java.net.URI"
  description: "Webhook URI for the Discord API (i.e. https://discordapp.com/api/webhooks/{webhook.id}/{webhook.token})"
  shortDescription: "Webhook URI for the Discord API (i.e. https://discordapp.com/api/webhooks/{webhook.id}/{webhook.token})"
  name: "spring.boot.admin.notify.discord.webhook-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.HipchatNotifier"
  type: "java.lang.String"
  description: "API token that has access to notify in the room"
  shortDescription: "API token that has access to notify in the room"
  name: "spring.boot.admin.notify.hipchat.auth-token"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.HipchatNotifier"
  type: "java.lang.String"
  description: "Trigger description. SpEL template using event as root;"
  shortDescription: "Trigger description."
  name: "spring.boot.admin.notify.hipchat.description"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.HipchatNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.hipchat.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.HipchatNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.hipchat.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.HipchatNotifier"
  type: "java.lang.Boolean"
  description: "TRUE will cause OS notification, FALSE will only notify to room"
  shortDescription: "TRUE will cause OS notification, FALSE will only notify to room"
  name: "spring.boot.admin.notify.hipchat.notify"
  defaultValue: false
- owner: "de.codecentric.boot.admin.server.notify.HipchatNotifier"
  type: "java.lang.String"
  description: "Id of the room to notify"
  shortDescription: "Id of the room to notify"
  name: "spring.boot.admin.notify.hipchat.room-id"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.HipchatNotifier"
  type: "java.net.URI"
  description: "Base URL for HipChat API (i.e. https://ACCOUNT_NAME.hipchat.com/v2"
  shortDescription: "Base URL for HipChat API (i.e. https://ACCOUNT_NAME.hipchat.com/v2"
  name: "spring.boot.admin.notify.hipchat.url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.LetsChatNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.letschat.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.LetsChatNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.letschat.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.LetsChatNotifier"
  type: "java.lang.String"
  description: "Message template. SpEL template using event as root"
  shortDescription: "Message template."
  name: "spring.boot.admin.notify.letschat.message"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.LetsChatNotifier"
  type: "java.lang.String"
  description: "Name of the room"
  shortDescription: "Name of the room"
  name: "spring.boot.admin.notify.letschat.room"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.LetsChatNotifier"
  type: "java.lang.String"
  description: "Token for the Let´s chat API"
  shortDescription: "Token for the Let´s chat API"
  name: "spring.boot.admin.notify.letschat.token"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.LetsChatNotifier"
  type: "java.net.URI"
  description: "Host URL for Let´s Chat"
  shortDescription: "Host URL for Let´s Chat"
  name: "spring.boot.admin.notify.letschat.url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.LetsChatNotifier"
  type: "java.lang.String"
  description: "username which sends notification"
  shortDescription: "username which sends notification"
  name: "spring.boot.admin.notify.letschat.username"
  defaultValue: "Spring Boot Admin"
- owner: "de.codecentric.boot.admin.server.notify.MailNotifier"
  type: "java.util.Map<java.lang.String,java.lang.Object>"
  description: "Additional properties to be set for the template"
  shortDescription: "Additional properties to be set for the template"
  name: "spring.boot.admin.notify.mail.additional-properties"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.MailNotifier"
  type: "java.lang.String"
  description: "Base-URL used for hyperlinks in mail"
  shortDescription: "Base-URL used for hyperlinks in mail"
  name: "spring.boot.admin.notify.mail.base-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.MailNotifier"
  type: "java.lang.String[]"
  description: "cc-recipients of the mail"
  shortDescription: "cc-recipients of the mail"
  name: "spring.boot.admin.notify.mail.cc"
  defaultValue: []
- owner: "de.codecentric.boot.admin.server.notify.MailNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.mail.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.MailNotifier"
  type: "java.lang.String"
  description: "sender of the change"
  shortDescription: "sender of the change"
  name: "spring.boot.admin.notify.mail.from"
  defaultValue: "Spring Boot Admin <noreply@localhost>"
- owner: "de.codecentric.boot.admin.server.notify.MailNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.mail.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.MailNotifier"
  type: "java.lang.String"
  description: "Thymleaf template for mail"
  shortDescription: "Thymleaf template for mail"
  name: "spring.boot.admin.notify.mail.template"
  defaultValue: "classpath:/META-INF/spring-boot-admin-server/mail/status-changed.html"
- owner: "de.codecentric.boot.admin.server.notify.MailNotifier"
  type: "java.lang.String[]"
  description: "recipients of the mail"
  shortDescription: "recipients of the mail"
  name: "spring.boot.admin.notify.mail.to"
  defaultValue:
  - "root@localhost"
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.String"
  description: "Title of the Teams message when an app de-registers"
  shortDescription: "Title of the Teams message when an app de-registers"
  name: "spring.boot.admin.notify.ms-teams.de-registered-title"
  defaultValue: "De-Registered"
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.String"
  description: "Message will be used as title of the Activity section of the Teams\
    \ message when an app de-registers."
  shortDescription: "Message will be used as title of the Activity section of the\
    \ Teams message when an app de-registers."
  name: "spring.boot.admin.notify.ms-teams.deregister-activity-subtitle"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.ms-teams.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.ms-teams.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.String"
  description: "Summary section of every Teams message originating from Spring Boot\
    \ Admin"
  shortDescription: "Summary section of every Teams message originating from Spring\
    \ Boot Admin"
  name: "spring.boot.admin.notify.ms-teams.message-summary"
  defaultValue: "Spring Boot Admin Notification"
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.String"
  description: "Message will be used as title of the Activity section of the Teams\
    \ message when an app registers"
  shortDescription: "Message will be used as title of the Activity section of the\
    \ Teams message when an app registers"
  name: "spring.boot.admin.notify.ms-teams.register-activity-subtitle"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.String"
  description: "Title of the Teams message when an app registers"
  shortDescription: "Title of the Teams message when an app registers"
  name: "spring.boot.admin.notify.ms-teams.registered-title"
  defaultValue: "Registered"
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.String"
  description: "Message will be used as title of the Activity section of the Teams\
    \ message when an app changes status"
  shortDescription: "Message will be used as title of the Activity section of the\
    \ Teams message when an app changes status"
  name: "spring.boot.admin.notify.ms-teams.status-activity-subtitle"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.String"
  description: "Title of the Teams message when an app changes status"
  shortDescription: "Title of the Teams message when an app changes status"
  name: "spring.boot.admin.notify.ms-teams.status-changed-title"
  defaultValue: "Status Changed"
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.lang.String"
  description: "Theme Color is the color of the accent on the message that appears\
    \ in Microsoft Teams. Default is Spring Green"
  shortDescription: "Theme Color is the color of the accent on the message that appears\
    \ in Microsoft Teams."
  name: "spring.boot.admin.notify.ms-teams.theme-color"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.MicrosoftTeamsNotifier"
  type: "java.net.URI"
  description: "Webhook url for Microsoft Teams Channel Webhook connector (i.e. https://outlook.office.com/webhook/{webhook-id})"
  shortDescription: "Webhook url for Microsoft Teams Channel Webhook connector (i.e.\
    \ https://outlook.office.com/webhook/{webhook-id})"
  name: "spring.boot.admin.notify.ms-teams.webhook-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.OpsGenieNotifier"
  type: "java.lang.String"
  description: "Comma separated list of actions that can be executed."
  shortDescription: "Comma separated list of actions that can be executed."
  name: "spring.boot.admin.notify.opsgenie.actions"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.OpsGenieNotifier"
  type: "java.lang.String"
  description: "Integration ApiKey"
  shortDescription: "Integration ApiKey"
  name: "spring.boot.admin.notify.opsgenie.api-key"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.OpsGenieNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.opsgenie.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.OpsGenieNotifier"
  type: "java.lang.String"
  description: "The entity the alert is related to."
  shortDescription: "The entity the alert is related to."
  name: "spring.boot.admin.notify.opsgenie.entity"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.OpsGenieNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.opsgenie.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.OpsGenieNotifier"
  type: "java.lang.String"
  description: "Field to specify source of alert. By default, it will be assigned\
    \ to IP address of incoming request"
  shortDescription: "Field to specify source of alert."
  name: "spring.boot.admin.notify.opsgenie.source"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.OpsGenieNotifier"
  type: "java.lang.String"
  description: "Comma separated list of labels attached to the alert"
  shortDescription: "Comma separated list of labels attached to the alert"
  name: "spring.boot.admin.notify.opsgenie.tags"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.OpsGenieNotifier"
  type: "java.net.URI"
  description: "BASE URL for OpsGenie API"
  shortDescription: "BASE URL for OpsGenie API"
  name: "spring.boot.admin.notify.opsgenie.url"
  defaultValue: "https://api.opsgenie.com/v2/alerts"
- owner: "de.codecentric.boot.admin.server.notify.OpsGenieNotifier"
  type: "java.lang.String"
  description: "Default owner of the execution. If user is not specified, the system\
    \ becomes owner of the execution."
  shortDescription: "Default owner of the execution."
  name: "spring.boot.admin.notify.opsgenie.user"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.PagerdutyNotifier"
  type: "java.lang.String"
  description: "Client for pagerduty-REST-API"
  shortDescription: "Client for pagerduty-REST-API"
  name: "spring.boot.admin.notify.pagerduty.client"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.PagerdutyNotifier"
  type: "java.net.URI"
  description: "Client-url for pagerduty-REST-API"
  shortDescription: "Client-url for pagerduty-REST-API"
  name: "spring.boot.admin.notify.pagerduty.client-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.PagerdutyNotifier"
  type: "java.lang.String"
  description: "Trigger description. SpEL template using event as root;"
  shortDescription: "Trigger description."
  name: "spring.boot.admin.notify.pagerduty.description"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.PagerdutyNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.pagerduty.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.PagerdutyNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.pagerduty.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.PagerdutyNotifier"
  type: "java.lang.String"
  description: "Service-Key for pagerduty-REST-API"
  shortDescription: "Service-Key for pagerduty-REST-API"
  name: "spring.boot.admin.notify.pagerduty.service-key"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.PagerdutyNotifier"
  type: "java.net.URI"
  description: "URI for pagerduty-REST-API"
  shortDescription: "URI for pagerduty-REST-API"
  name: "spring.boot.admin.notify.pagerduty.url"
  defaultValue: "https://events.pagerduty.com/generic/2010-04-15/create_event.json"
- owner: "de.codecentric.boot.admin.server.notify.NotifierProxyProperties"
  type: "java.lang.String"
  description: "Proxy-Host for sending notifications"
  shortDescription: "Proxy-Host for sending notifications"
  name: "spring.boot.admin.notify.proxy.host"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.NotifierProxyProperties"
  type: "java.lang.String"
  description: "Proxy-Password for sending notifications (if proxy requires authentication)."
  shortDescription: "Proxy-Password for sending notifications (if proxy requires authentication)."
  name: "spring.boot.admin.notify.proxy.password"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.NotifierProxyProperties"
  type: "java.lang.Integer"
  description: "Proxy-Port for sending notifications"
  shortDescription: "Proxy-Port for sending notifications"
  name: "spring.boot.admin.notify.proxy.port"
  defaultValue: 0
- owner: "de.codecentric.boot.admin.server.notify.NotifierProxyProperties"
  type: "java.lang.String"
  description: "Proxy-User for sending notifications (if proxy requires authentication)."
  shortDescription: "Proxy-User for sending notifications (if proxy requires authentication)."
  name: "spring.boot.admin.notify.proxy.username"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.SlackNotifier"
  type: "java.lang.String"
  description: "Optional channel name without # sign (i.e. somechannel)"
  shortDescription: "Optional channel name without # sign (i.e. somechannel)"
  name: "spring.boot.admin.notify.slack.channel"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.SlackNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.slack.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.SlackNotifier"
  type: "java.lang.String"
  description: "Optional emoji icon without colons (i.e. my-emoji)"
  shortDescription: "Optional emoji icon without colons (i.e. my-emoji)"
  name: "spring.boot.admin.notify.slack.icon"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.SlackNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.slack.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.SlackNotifier"
  type: "java.lang.String"
  description: "Message formatted using Slack markups. SpEL template using event as\
    \ root"
  shortDescription: "Message formatted using Slack markups."
  name: "spring.boot.admin.notify.slack.message"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.SlackNotifier"
  type: "java.lang.String"
  description: "Optional username which sends notification"
  shortDescription: "Optional username which sends notification"
  name: "spring.boot.admin.notify.slack.username"
  defaultValue: "Spring Boot Admin"
- owner: "de.codecentric.boot.admin.server.notify.SlackNotifier"
  type: "java.net.URI"
  description: "Webhook url for Slack API (i.e. https://hooks.slack.com/services/xxx)"
  shortDescription: "Webhook url for Slack API (i.e. https://hooks.slack.com/services/xxx)"
  name: "spring.boot.admin.notify.slack.webhook-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.TelegramNotifier"
  type: "java.lang.String"
  description: "base url for telegram (i.e. https://api.telegram.org)"
  shortDescription: "base url for telegram (i.e. https://api.telegram.org)"
  name: "spring.boot.admin.notify.telegram.api-url"
  defaultValue: "https://api.telegram.org"
- owner: "de.codecentric.boot.admin.server.notify.TelegramNotifier"
  type: "java.lang.String"
  description: "The token identifiying und authorizing your Telegram bot (e.g. `123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11`)"
  shortDescription: "The token identifiying und authorizing your Telegram bot (e.g.\
    \ `123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11`)"
  name: "spring.boot.admin.notify.telegram.auth-token"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.TelegramNotifier"
  type: "java.lang.String"
  description: "Unique identifier for the target chat or username of the target channel"
  shortDescription: "Unique identifier for the target chat or username of the target\
    \ channel"
  name: "spring.boot.admin.notify.telegram.chat-id"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.notify.TelegramNotifier"
  type: "java.lang.Boolean"
  description: "If true users will receive a notification with no sound."
  shortDescription: "If true users will receive a notification with no sound."
  name: "spring.boot.admin.notify.telegram.disable-notify"
  defaultValue: false
- owner: "de.codecentric.boot.admin.server.notify.TelegramNotifier"
  type: "java.lang.Boolean"
  description: "Enables the notification."
  shortDescription: "Enables the notification."
  name: "spring.boot.admin.notify.telegram.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.notify.TelegramNotifier"
  type: "java.lang.String[]"
  description: "List of changes to ignore. Must be in Format OLD:NEW, for any status\
    \ use * as wildcard, e.g. *:UP or OFFLINE:*"
  shortDescription: "List of changes to ignore."
  name: "spring.boot.admin.notify.telegram.ignore-changes"
  defaultValue:
  - "UNKNOWN:UP"
- owner: "de.codecentric.boot.admin.server.notify.TelegramNotifier"
  type: "java.lang.String"
  description: "Send Markdown or HTML, if you want Telegram apps to show bold, italic,\
    \ fixed-width text or inline URLs in your bot's message."
  shortDescription: "Send Markdown or HTML, if you want Telegram apps to show bold,\
    \ italic, fixed-width text or inline URLs in your bot's message."
  name: "spring.boot.admin.notify.telegram.parse-mode"
  defaultValue: "HTML"
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties"
  type: "java.lang.String[]"
  description: "For Spring Boot 2.x applications the endpoints should be discovered\
    \ automatically using the actuator links. For Spring Boot 1.x applications SBA\
    \ probes for the specified endpoints using an OPTIONS request. If the path differs\
    \ from the id you can specify this as id:path (e.g. health:ping)."
  shortDescription: "For Spring Boot 2.x applications the endpoints should be discovered\
    \ automatically using the actuator links."
  name: "spring.boot.admin.probed-endpoints"
  defaultValue:
  - "health"
  - "env"
  - "metrics"
  - "httptrace:trace"
  - "httptrace"
  - "threaddump:dump"
  - "threaddump"
  - "jolokia"
  - "info"
  - "logfile"
  - "refresh"
  - "flyway"
  - "liquibase"
  - "heapdump"
  - "loggers"
  - "auditevents"
  - "mappings"
  - "scheduledtasks"
  - "configprops"
  - "caches"
  - "beans"
- owner: "de.codecentric.boot.admin.server.config.AdminServerProperties$ServerProperties"
  type: "java.lang.Boolean"
  description: "Enable Spring Boot Admin Server Default: true"
  shortDescription: "Enable Spring Boot Admin Server Default: true"
  name: "spring.boot.admin.server.enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.util.List<java.lang.String>"
  description: "Limit languages to this list. Intersection of all supported languages\
    \ and this list will be used."
  shortDescription: "Limit languages to this list."
  name: "spring.boot.admin.ui.available-languages"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.String"
  description: "Brand to be shown in then navbar."
  shortDescription: "Brand to be shown in then navbar."
  name: "spring.boot.admin.ui.brand"
  defaultValue: "<img src=\"assets/img/icon-spring-boot-admin.svg\"><span>Spring Boot\
    \ Admin</span>"
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.Boolean"
  description: "Wether the thymeleaf templates should be cached."
  shortDescription: "Wether the thymeleaf templates should be cached."
  name: "spring.boot.admin.ui.cache-templates"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties$Cache"
  type: "java.time.Duration"
  description: "include \"max-age\" directive in Cache-Control http header."
  shortDescription: "include \"max-age\" directive in Cache-Control http header."
  name: "spring.boot.admin.ui.cache.max-age"
  defaultValue: "3600s"
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties$Cache"
  type: "java.lang.Boolean"
  description: "include \"no-cache\" directive in Cache-Control http header."
  shortDescription: "include \"no-cache\" directive in Cache-Control http header."
  name: "spring.boot.admin.ui.cache.no-cache"
  defaultValue: false
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties$Cache"
  type: "java.lang.Boolean"
  description: "include \"no-store\" directive in Cache-Control http header."
  shortDescription: "include \"no-store\" directive in Cache-Control http header."
  name: "spring.boot.admin.ui.cache.no-store"
  defaultValue: false
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.String[]"
  description: "Locations of SBA ui exentsion resources."
  shortDescription: "Locations of SBA ui exentsion resources."
  name: "spring.boot.admin.ui.extension-resource-locations"
  defaultValue:
  - "classpath:/META-INF/spring-boot-admin-server-ui/extensions/"
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.util.List<de.codecentric.boot.admin.server.ui.web.UiController$ExternalView>"
  description: "External views shown in the navbar."
  shortDescription: "External views shown in the navbar."
  name: "spring.boot.admin.ui.external-views"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.String"
  description: "Icon used as default favicon and icon for desktop notifications."
  shortDescription: "Icon used as default favicon and icon for desktop notifications."
  name: "spring.boot.admin.ui.favicon"
  defaultValue: "assets/img/favicon.png"
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.String"
  description: "Icon used as default favicon and icon for desktop notifications."
  shortDescription: "Icon used as default favicon and icon for desktop notifications."
  name: "spring.boot.admin.ui.favicon-danger"
  defaultValue: "assets/img/favicon-danger.png"
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.String"
  description: "Icon used as image on login page"
  shortDescription: "Icon used as image on login page"
  name: "spring.boot.admin.ui.login-icon"
  defaultValue: "assets/img/icon-spring-boot-admin.svg"
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties$PollTimer"
  type: "java.lang.Integer"
  description: "Time in milliseconds to refresh data in caches view."
  shortDescription: "Time in milliseconds to refresh data in caches view."
  name: "spring.boot.admin.ui.poll-timer.cache"
  defaultValue: 2500
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties$PollTimer"
  type: "java.lang.Integer"
  description: "Time in milliseconds to refresh data in datasource view."
  shortDescription: "Time in milliseconds to refresh data in datasource view."
  name: "spring.boot.admin.ui.poll-timer.datasource"
  defaultValue: 2500
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties$PollTimer"
  type: "java.lang.Integer"
  description: "Time in milliseconds to refresh data in gc view."
  shortDescription: "Time in milliseconds to refresh data in gc view."
  name: "spring.boot.admin.ui.poll-timer.gc"
  defaultValue: 2500
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties$PollTimer"
  type: "java.lang.Integer"
  description: "Time in milliseconds to refresh data in memory view."
  shortDescription: "Time in milliseconds to refresh data in memory view."
  name: "spring.boot.admin.ui.poll-timer.memory"
  defaultValue: 2500
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties$PollTimer"
  type: "java.lang.Integer"
  description: "Time in milliseconds to refresh data in process view."
  shortDescription: "Time in milliseconds to refresh data in process view."
  name: "spring.boot.admin.ui.poll-timer.process"
  defaultValue: 2500
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties$PollTimer"
  type: "java.lang.Integer"
  description: "Time in milliseconds to refresh data in threads view."
  shortDescription: "Time in milliseconds to refresh data in threads view."
  name: "spring.boot.admin.ui.poll-timer.threads"
  defaultValue: 2500
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.String"
  description: "If running behind a reverse proxy (using path rewriting) this can\
    \ be used to output correct self references. If the host/port is omitted it will\
    \ be inferred from the request."
  shortDescription: "If running behind a reverse proxy (using path rewriting) this\
    \ can be used to output correct self references."
  name: "spring.boot.admin.ui.public-url"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.Boolean"
  description: "Whether the option to remember a user should be available."
  shortDescription: "Whether the option to remember a user should be available."
  name: "spring.boot.admin.ui.remember-me-enabled"
  defaultValue: true
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.String[]"
  description: "Locations of SBA ui resources."
  shortDescription: "Locations of SBA ui resources."
  name: "spring.boot.admin.ui.resource-locations"
  defaultValue:
  - "classpath:/META-INF/spring-boot-admin-server-ui/"
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.String"
  description: "Locations of SBA ui template."
  shortDescription: "Locations of SBA ui template."
  name: "spring.boot.admin.ui.template-location"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.lang.String"
  description: "Page-Title to be shown."
  shortDescription: "Page-Title to be shown."
  name: "spring.boot.admin.ui.title"
  defaultValue: "Spring Boot Admin"
- owner: "de.codecentric.boot.admin.server.ui.config.AdminServerUiProperties"
  type: "java.util.List<de.codecentric.boot.admin.server.ui.web.UiController$ViewSettings>"
  description: "External views shown in the navbar."
  shortDescription: "External views shown in the navbar."
  name: "spring.boot.admin.ui.view-settings"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of cache names to create if supported by the\
    \ underlying cache manager. Usually, this disables the ability to create additional\
    \ caches on-the-fly."
  shortDescription: "Comma-separated list of cache names to create if supported by\
    \ the underlying cache manager."
  name: "spring.cache.cache-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Caffeine"
  type: "java.lang.String"
  description: "The spec to use to create caches. See CaffeineSpec for more details\
    \ on the spec format."
  shortDescription: "The spec to use to create caches."
  name: "spring.cache.caffeine.spec"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Couchbase"
  type: "java.time.Duration"
  description: "Entry expiration. By default the entries never expire. Note that this\
    \ value is ultimately converted to seconds."
  shortDescription: "Entry expiration."
  name: "spring.cache.couchbase.expiration"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$EhCache"
  type: "org.springframework.core.io.Resource"
  description: "The location of the configuration file to use to initialize EhCache."
  shortDescription: "The location of the configuration file to use to initialize EhCache."
  name: "spring.cache.ehcache.config"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Infinispan"
  type: "org.springframework.core.io.Resource"
  description: "The location of the configuration file to use to initialize Infinispan."
  shortDescription: "The location of the configuration file to use to initialize Infinispan."
  name: "spring.cache.infinispan.config"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$JCache"
  type: "org.springframework.core.io.Resource"
  description: "The location of the configuration file to use to initialize the cache\
    \ manager. The configuration file is dependent of the underlying cache implementation."
  shortDescription: "The location of the configuration file to use to initialize the\
    \ cache manager."
  name: "spring.cache.jcache.config"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$JCache"
  type: "java.lang.String"
  description: "Fully qualified name of the CachingProvider implementation to use\
    \ to retrieve the JSR-107 compliant cache manager. Needed only if more than one\
    \ JSR-107 implementation is available on the classpath."
  shortDescription: "Fully qualified name of the CachingProvider implementation to\
    \ use to retrieve the JSR-107 compliant cache manager."
  name: "spring.cache.jcache.provider"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.lang.Boolean"
  description: "Allow caching null values."
  shortDescription: "Allow caching null values."
  name: "spring.cache.redis.cache-null-values"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.lang.Boolean"
  description: "Whether to enable cache statistics."
  shortDescription: "Whether to enable cache statistics."
  name: "spring.cache.redis.enable-statistics"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.lang.String"
  description: "Key prefix."
  shortDescription: "Key prefix."
  name: "spring.cache.redis.key-prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.time.Duration"
  description: "Entry expiration. By default the entries never expire."
  shortDescription: "Entry expiration."
  name: "spring.cache.redis.time-to-live"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.lang.Boolean"
  description: "Whether to use the key prefix when writing to Redis."
  shortDescription: "Whether to use the key prefix when writing to Redis."
  name: "spring.cache.redis.use-key-prefix"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties"
  type: "org.springframework.boot.autoconfigure.cache.CacheType"
  description: "Cache type. By default, auto-detected according to the environment."
  shortDescription: "Cache type."
  name: "spring.cache.type"
  defaultValue: ""
- owner: "org.springframework.cloud.bus.BusProperties$Ack"
  type: "java.lang.String"
  description: "Service that wants to listen to acks. By default null (meaning all\
    \ services)."
  shortDescription: "Service that wants to listen to acks."
  name: "spring.cloud.bus.ack.destination-service"
  defaultValue: ""
- owner: "org.springframework.cloud.bus.BusProperties$Ack"
  type: "java.lang.Boolean"
  description: "Flag to switch off acks (default on)."
  shortDescription: "Flag to switch off acks (default on)."
  name: "spring.cloud.bus.ack.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.bus.BusProperties"
  type: "org.springframework.util.MimeType"
  description: "The bus mime-type."
  shortDescription: "The bus mime-type."
  name: "spring.cloud.bus.content-type"
  defaultValue: ""
- owner: "org.springframework.cloud.bus.BusProperties"
  type: "java.lang.String"
  description: "Name of Spring Cloud Stream destination for messages."
  shortDescription: "Name of Spring Cloud Stream destination for messages."
  name: "spring.cloud.bus.destination"
  defaultValue: ""
- owner: "org.springframework.cloud.bus.BusProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that the bus is enabled."
  shortDescription: "Flag to indicate that the bus is enabled."
  name: "spring.cloud.bus.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Flag to switch off environment change events (default on)."
  shortDescription: "Flag to switch off environment change events (default on)."
  name: "spring.cloud.bus.env.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.bus.BusProperties"
  type: "java.lang.String"
  description: "The identifier for this application instance."
  shortDescription: "The identifier for this application instance."
  name: "spring.cloud.bus.id"
  defaultValue: "application"
- type: "java.lang.Boolean"
  description: "Flag to switch off refresh events (default on)."
  shortDescription: "Flag to switch off refresh events (default on)."
  name: "spring.cloud.bus.refresh.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.bus.BusProperties$Trace"
  type: "java.lang.Boolean"
  description: "Flag to switch on tracing of acks (default off)."
  shortDescription: "Flag to switch on tracing of acks (default off)."
  name: "spring.cloud.bus.trace.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
  type: "java.util.List<java.lang.String>"
  description: "Default accepted versions for the Spring Boot dependency. You can\
    \ set {@code x} for the patch version if you don't want to specify a concrete\
    \ value. Example: {@code 3.4.x}"
  shortDescription: "Default accepted versions for the Spring Boot dependency."
  name: "spring.cloud.compatibility-verifier.compatible-boot-versions"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
  type: "java.lang.Boolean"
  description: "Enables creation of Spring Cloud compatibility verification."
  shortDescription: "Enables creation of Spring Cloud compatibility verification."
  name: "spring.cloud.compatibility-verifier.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that {@link #isOverrideSystemProperties() systemPropertiesOverride}\
    \ can be used. Set to false to prevent users from changing the default accidentally.\
    \ Default true."
  shortDescription: "Flag to indicate that {@link #isOverrideSystemProperties() systemPropertiesOverride}\
    \ can be used."
  name: "spring.cloud.config.allow-override"
  defaultValue: true
- owner: "org.springframework.cloud.config.client.ConfigClientProperties$Discovery"
  type: "java.lang.Boolean"
  description: "Flag to indicate that config server discovery is enabled (config server\
    \ URL will be looked up via discovery)."
  shortDescription: "Flag to indicate that config server discovery is enabled (config\
    \ server URL will be looked up via discovery)."
  name: "spring.cloud.config.discovery.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.config.client.ConfigClientProperties$Discovery"
  type: "java.lang.String"
  description: "Service id to locate config server."
  shortDescription: "Service id to locate config server."
  name: "spring.cloud.config.discovery.service-id"
  defaultValue: "configserver"
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.Boolean"
  description: "Flag to say that remote configuration is enabled. Default true;"
  shortDescription: "Flag to say that remote configuration is enabled."
  name: "spring.cloud.config.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that failure to connect to the server is fatal (default\
    \ false)."
  shortDescription: "Flag to indicate that failure to connect to the server is fatal\
    \ (default false)."
  name: "spring.cloud.config.fail-fast"
  defaultValue: false
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional headers used to create the client request."
  shortDescription: "Additional headers used to create the client request."
  name: "spring.cloud.config.headers"
  defaultValue: ""
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.String"
  description: "The label name to use to pull remote configuration properties. The\
    \ default is set on the server (generally \"master\" for a git based server)."
  shortDescription: "The label name to use to pull remote configuration properties."
  name: "spring.cloud.config.label"
  defaultValue: ""
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.String"
  description: "The Accept header media type to send to config server."
  shortDescription: "The Accept header media type to send to config server."
  name: "spring.cloud.config.media-type"
  defaultValue: ""
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.String"
  description: "Name of application used to fetch remote properties."
  shortDescription: "Name of application used to fetch remote properties."
  name: "spring.cloud.config.name"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that when {@link #setAllowOverride(boolean) allowOverride}\
    \ is true, external properties should take lowest priority and should not override\
    \ any existing property sources (including local config files). Default false."
  shortDescription: "Flag to indicate that when {@link #setAllowOverride(boolean)\
    \ allowOverride} is true, external properties should take lowest priority and\
    \ should not override any existing property sources (including local config files)."
  name: "spring.cloud.config.override-none"
  defaultValue: false
- owner: "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that the external properties should override system\
    \ properties. Default true."
  shortDescription: "Flag to indicate that the external properties should override\
    \ system properties."
  name: "spring.cloud.config.override-system-properties"
  defaultValue: true
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.String"
  description: "The password to use (HTTP Basic) when contacting the remote server."
  shortDescription: "The password to use (HTTP Basic) when contacting the remote server."
  name: "spring.cloud.config.password"
  defaultValue: ""
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.String"
  description: "The default profile to use when fetching remote configuration (comma-separated).\
    \ Default is \"default\"."
  shortDescription: "The default profile to use when fetching remote configuration\
    \ (comma-separated)."
  name: "spring.cloud.config.profile"
  defaultValue: "default"
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.Integer"
  description: "timeout on waiting to connect to the Config Server."
  shortDescription: "timeout on waiting to connect to the Config Server."
  name: "spring.cloud.config.request-connect-timeout"
  defaultValue: 0
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.Integer"
  description: "timeout on waiting to read data from the Config Server."
  shortDescription: "timeout on waiting to read data from the Config Server."
  name: "spring.cloud.config.request-read-timeout"
  defaultValue: 0
- owner: "org.springframework.cloud.config.client.RetryProperties"
  type: "java.lang.Long"
  description: "Initial retry interval in milliseconds."
  shortDescription: "Initial retry interval in milliseconds."
  name: "spring.cloud.config.retry.initial-interval"
  defaultValue: 1000
- owner: "org.springframework.cloud.config.client.RetryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of attempts."
  shortDescription: "Maximum number of attempts."
  name: "spring.cloud.config.retry.max-attempts"
  defaultValue: 6
- owner: "org.springframework.cloud.config.client.RetryProperties"
  type: "java.lang.Long"
  description: "Maximum interval for backoff."
  shortDescription: "Maximum interval for backoff."
  name: "spring.cloud.config.retry.max-interval"
  defaultValue: 2000
- owner: "org.springframework.cloud.config.client.RetryProperties"
  type: "java.lang.Double"
  description: "Multiplier for next interval."
  shortDescription: "Multiplier for next interval."
  name: "spring.cloud.config.retry.multiplier"
  defaultValue: 1.1
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate whether to send state. Default true."
  shortDescription: "Flag to indicate whether to send state."
  name: "spring.cloud.config.send-state"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that If HTTP 404 needs to be sent if Application\
    \ is not Found."
  shortDescription: "Flag to indicate that If HTTP 404 needs to be sent if Application\
    \ is not Found."
  name: "spring.cloud.config.server.accept-empty"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.environment.AwsS3EnvironmentProperties"
  type: "java.lang.String"
  description: "Name of the S3 bucket that contains config."
  shortDescription: "Name of the S3 bucket that contains config."
  name: "spring.cloud.config.server.awss3.bucket"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.AwsS3EnvironmentProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.config.server.awss3.order"
  defaultValue: 0
- owner: "org.springframework.cloud.config.server.environment.AwsS3EnvironmentProperties"
  type: "java.lang.String"
  description: "AWS region that contains config."
  shortDescription: "AWS region that contains config."
  name: "spring.cloud.config.server.awss3.region"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.lang.Boolean"
  description: "Flag indicating that the config server should initialize its own Environment\
    \ with properties from the remote repository. Off by default because it delays\
    \ startup but can be useful when embedding the server in another application."
  shortDescription: "Flag indicating that the config server should initialize its\
    \ own Environment with properties from the remote repository."
  name: "spring.cloud.config.server.bootstrap"
  defaultValue: false
- owner: "org.springframework.credhub.support.ClientOptions"
  type: "java.lang.String[]"
  name: "spring.cloud.config.server.credhub.ca-cert-files"
  defaultValue: ""
- owner: "org.springframework.credhub.support.ClientOptions"
  type: "java.time.Duration"
  name: "spring.cloud.config.server.credhub.connection-timeout"
  defaultValue: ""
- owner: "org.springframework.credhub.core.CredHubProperties$OAuth2"
  type: "java.lang.String"
  name: "spring.cloud.config.server.credhub.oauth2.registration-id"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.CredhubEnvironmentProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.config.server.credhub.order"
  defaultValue: ""
- owner: "org.springframework.credhub.support.ClientOptions"
  type: "java.time.Duration"
  name: "spring.cloud.config.server.credhub.read-timeout"
  defaultValue: ""
- owner: "org.springframework.credhub.core.CredHubProperties"
  type: "java.lang.String"
  name: "spring.cloud.config.server.credhub.url"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.lang.String"
  description: "Default application name when incoming requests do not have a specific\
    \ one."
  shortDescription: "Default application name when incoming requests do not have a\
    \ specific one."
  name: "spring.cloud.config.server.default-application-name"
  defaultValue: "application"
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.lang.String"
  description: "Default repository label when incoming requests do not have a specific\
    \ label."
  shortDescription: "Default repository label when incoming requests do not have a\
    \ specific label."
  name: "spring.cloud.config.server.default-label"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.lang.String"
  description: "Default application profile when incoming requests do not have a specific\
    \ one."
  shortDescription: "Default application profile when incoming requests do not have\
    \ a specific one."
  name: "spring.cloud.config.server.default-profile"
  defaultValue: "default"
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.lang.Boolean"
  description: "Flag indicating config server is enabled."
  shortDescription: "Flag indicating config server is enabled."
  name: "spring.cloud.config.server.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties$Encrypt"
  type: "java.lang.Boolean"
  description: "Enable decryption of environment properties before sending to client."
  shortDescription: "Enable decryption of environment properties before sending to\
    \ client."
  name: "spring.cloud.config.server.encrypt.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties$Encrypt"
  type: "java.lang.Boolean"
  description: "Enable decryption of environment properties served by plain text endpoint\
    \ {@link org.springframework.cloud.config.server.resource.ResourceController}."
  shortDescription: "Enable decryption of environment properties served by plain text\
    \ endpoint {@link org.springframework.cloud.config.server.resource.ResourceController}."
  name: "spring.cloud.config.server.encrypt.plain-text-encrypt"
  defaultValue: false
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.lang.Boolean"
  description: "Flag indicating that if there are any errors reading properties from\
    \ a subordinate environment repository in a composite environment repository,\
    \ then the entire composite read should fail. Useful when set to false when a\
    \ Vault repository is in the composite to allow clients to still read properties\
    \ from other repositories without providing a valid Vault token. Defaults to true,\
    \ resulting in a failure on any error."
  shortDescription: "Flag indicating that if there are any errors reading properties\
    \ from a subordinate environment repository in a composite environment repository,\
    \ then the entire composite read should fail."
  name: "spring.cloud.config.server.fail-on-composite-error"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.io.File"
  description: "Base directory for local working copy of repository."
  shortDescription: "Base directory for local working copy of repository."
  name: "spring.cloud.config.server.git.basedir"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that the repository should be cloned on startup (not\
    \ on demand). Generally leads to slower startup but faster first query."
  shortDescription: "Flag to indicate that the repository should be cloned on startup\
    \ (not on demand)."
  name: "spring.cloud.config.server.git.clone-on-start"
  defaultValue: false
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that the submodules in the repository should be cloned."
  shortDescription: "Flag to indicate that the submodules in the repository should\
    \ be cloned."
  name: "spring.cloud.config.server.git.clone-submodules"
  defaultValue: false
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "The default label to be used with the remote repository."
  shortDescription: "The default label to be used with the remote repository."
  name: "spring.cloud.config.server.git.default-label"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that the branch should be deleted locally if it's\
    \ origin tracked branch was removed."
  shortDescription: "Flag to indicate that the branch should be deleted locally if\
    \ it's origin tracked branch was removed."
  name: "spring.cloud.config.server.git.delete-untracked-branches"
  defaultValue: false
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that the repository should force pull. If true discard\
    \ any local changes and take from remote repository."
  shortDescription: "Flag to indicate that the repository should force pull."
  name: "spring.cloud.config.server.git.force-pull"
  defaultValue: false
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "Valid SSH host key. Must be set if hostKeyAlgorithm is also set."
  shortDescription: "Valid SSH host key."
  name: "spring.cloud.config.server.git.host-key"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "One of ssh-dss, ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384,\
    \ or ecdsa-sha2-nistp521. Must be set if hostKey is also set."
  shortDescription: "One of ssh-dss, ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384,\
    \ or ecdsa-sha2-nistp521."
  name: "spring.cloud.config.server.git.host-key-algorithm"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "If true, use property-based instead of file-based SSH config."
  shortDescription: "If true, use property-based instead of file-based SSH config."
  name: "spring.cloud.config.server.git.ignore-local-ssh-settings"
  defaultValue: false
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "Location of custom .known_hosts file."
  shortDescription: "Location of custom .known_hosts file."
  name: "spring.cloud.config.server.git.known-hosts-file"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Integer"
  description: "The order of the environment repository."
  shortDescription: "The order of the environment repository."
  name: "spring.cloud.config.server.git.order"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "Passphrase for unlocking your ssh private key."
  shortDescription: "Passphrase for unlocking your ssh private key."
  name: "spring.cloud.config.server.git.passphrase"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "Password for authentication with remote repository."
  shortDescription: "Password for authentication with remote repository."
  name: "spring.cloud.config.server.git.password"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "Override server authentication method order. This should allow for\
    \ evading login prompts if server has keyboard-interactive authentication before\
    \ the publickey method."
  shortDescription: "Override server authentication method order."
  name: "spring.cloud.config.server.git.preferred-authentications"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "Valid SSH private key. Must be set if ignoreLocalSshSettings is true\
    \ and Git URI is SSH format."
  shortDescription: "Valid SSH private key."
  name: "spring.cloud.config.server.git.private-key"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.util.Map<org.springframework.cloud.config.server.proxy.ProxyHostProperties$ProxyForScheme,org.springframework.cloud.config.server.proxy.ProxyHostProperties>"
  description: "HTTP proxy configuration."
  shortDescription: "HTTP proxy configuration."
  name: "spring.cloud.config.server.git.proxy"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Integer"
  description: "Time (in seconds) between refresh of the git repository."
  shortDescription: "Time (in seconds) between refresh of the git repository."
  name: "spring.cloud.config.server.git.refresh-rate"
  defaultValue: 0
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.util.Map<java.lang.String,org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties$PatternMatchingJGitEnvironmentProperties>"
  description: "Map of repository identifier to location and other properties."
  shortDescription: "Map of repository identifier to location and other properties."
  name: "spring.cloud.config.server.git.repos"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String[]"
  description: "Search paths to use within local working copy. By default searches\
    \ only the root."
  shortDescription: "Search paths to use within local working copy."
  name: "spring.cloud.config.server.git.search-paths"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that SSL certificate validation should be bypassed\
    \ when communicating with a repository served over an HTTPS connection."
  shortDescription: "Flag to indicate that SSL certificate validation should be bypassed\
    \ when communicating with a repository served over an HTTPS connection."
  name: "spring.cloud.config.server.git.skip-ssl-validation"
  defaultValue: false
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "If false, ignore errors with host key."
  shortDescription: "If false, ignore errors with host key."
  name: "spring.cloud.config.server.git.strict-host-key-checking"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.Integer"
  description: "Timeout (in seconds) for obtaining HTTP or SSH connection (if applicable),\
    \ defaults to 5 seconds."
  shortDescription: "Timeout (in seconds) for obtaining HTTP or SSH connection (if\
    \ applicable), defaults to 5 seconds."
  name: "spring.cloud.config.server.git.timeout"
  defaultValue: 5
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "URI of remote repository."
  shortDescription: "URI of remote repository."
  name: "spring.cloud.config.server.git.uri"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentProperties"
  type: "java.lang.String"
  description: "Username for authentication with remote repository."
  shortDescription: "Username for authentication with remote repository."
  name: "spring.cloud.config.server.git.username"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.config.ConfigServerHealthIndicator"
  type: "java.util.Map<java.lang.String,org.springframework.cloud.config.server.config.ConfigServerHealthIndicator$Repository>"
  name: "spring.cloud.config.server.health.repositories"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.JdbcEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that JDBC environment repository configuration is\
    \ enabled."
  shortDescription: "Flag to indicate that JDBC environment repository configuration\
    \ is enabled."
  name: "spring.cloud.config.server.jdbc.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.environment.JdbcEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to determine how to handle query exceptions."
  shortDescription: "Flag to determine how to handle query exceptions."
  name: "spring.cloud.config.server.jdbc.fail-on-error"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.environment.JdbcEnvironmentProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.config.server.jdbc.order"
  defaultValue: 0
- owner: "org.springframework.cloud.config.server.environment.JdbcEnvironmentProperties"
  type: "java.lang.String"
  description: "SQL used to query database for keys and values."
  shortDescription: "SQL used to query database for keys and values."
  name: "spring.cloud.config.server.jdbc.sql"
  defaultValue: "SELECT KEY, VALUE from PROPERTIES where APPLICATION=? and PROFILE=?\
    \ and LABEL=?"
- owner: "org.springframework.cloud.config.server.environment.NativeEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to determine whether label locations should be added."
  shortDescription: "Flag to determine whether label locations should be added."
  name: "spring.cloud.config.server.native.add-label-locations"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.environment.NativeEnvironmentProperties"
  type: "java.lang.String"
  name: "spring.cloud.config.server.native.default-label"
  defaultValue: "master"
- owner: "org.springframework.cloud.config.server.environment.NativeEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to determine how to handle exceptions during decryption (default\
    \ false)."
  shortDescription: "Flag to determine how to handle exceptions during decryption\
    \ (default false)."
  name: "spring.cloud.config.server.native.fail-on-error"
  defaultValue: false
- owner: "org.springframework.cloud.config.server.environment.NativeEnvironmentProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.config.server.native.order"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.NativeEnvironmentProperties"
  type: "java.lang.String[]"
  description: "Locations to search for configuration files. Defaults to the same\
    \ as a Spring Boot app so [classpath:/,classpath:/config/,file:./,file:./config/]."
  shortDescription: "Locations to search for configuration files."
  name: "spring.cloud.config.server.native.search-locations"
  defaultValue: []
- owner: "org.springframework.cloud.config.server.environment.NativeEnvironmentProperties"
  type: "java.lang.String"
  description: "Version string to be reported for native repository."
  shortDescription: "Version string to be reported for native repository."
  name: "spring.cloud.config.server.native.version"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Extra map for a property source to be sent to all clients unconditionally."
  shortDescription: "Extra map for a property source to be sent to all clients unconditionally."
  name: "spring.cloud.config.server.overrides"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.lang.String"
  description: "Prefix for configuration resource paths (default is empty). Useful\
    \ when embedding in another application when you don't want to change the context\
    \ path or servlet path."
  shortDescription: "Prefix for configuration resource paths (default is empty)."
  name: "spring.cloud.config.server.prefix"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.RedisEnvironmentProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.config.server.redis.order"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.config.ConfigServerProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that YAML documents that are text or collections\
    \ (not a map) should be returned in \"native\" form."
  shortDescription: "Flag to indicate that YAML documents that are text or collections\
    \ (not a map) should be returned in \"native\" form."
  name: "spring.cloud.config.server.strip-document-from-yaml"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.environment.SvnKitEnvironmentProperties"
  type: "java.io.File"
  description: "Base directory for local working copy of repository."
  shortDescription: "Base directory for local working copy of repository."
  name: "spring.cloud.config.server.svn.basedir"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.SvnKitEnvironmentProperties"
  type: "java.lang.String"
  description: "The default label to be used with the remote repository."
  shortDescription: "The default label to be used with the remote repository."
  name: "spring.cloud.config.server.svn.default-label"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.SvnKitEnvironmentProperties"
  type: "java.lang.Integer"
  description: "The order of the environment repository."
  shortDescription: "The order of the environment repository."
  name: "spring.cloud.config.server.svn.order"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.SvnKitEnvironmentProperties"
  type: "java.lang.String"
  description: "Passphrase for unlocking your ssh private key."
  shortDescription: "Passphrase for unlocking your ssh private key."
  name: "spring.cloud.config.server.svn.passphrase"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.SvnKitEnvironmentProperties"
  type: "java.lang.String"
  description: "Password for authentication with remote repository."
  shortDescription: "Password for authentication with remote repository."
  name: "spring.cloud.config.server.svn.password"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.SvnKitEnvironmentProperties"
  type: "java.lang.String[]"
  description: "Search paths to use within local working copy. By default searches\
    \ only the root."
  shortDescription: "Search paths to use within local working copy."
  name: "spring.cloud.config.server.svn.search-paths"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.SvnKitEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Reject incoming SSH host keys from remote servers not in the known\
    \ host list."
  shortDescription: "Reject incoming SSH host keys from remote servers not in the\
    \ known host list."
  name: "spring.cloud.config.server.svn.strict-host-key-checking"
  defaultValue: true
- owner: "org.springframework.cloud.config.server.environment.SvnKitEnvironmentProperties"
  type: "java.lang.String"
  description: "URI of remote repository."
  shortDescription: "URI of remote repository."
  name: "spring.cloud.config.server.svn.uri"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.SvnKitEnvironmentProperties"
  type: "java.lang.String"
  description: "Username for authentication with remote repository."
  shortDescription: "Username for authentication with remote repository."
  name: "spring.cloud.config.server.svn.username"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AppRoleProperties"
  type: "java.lang.String"
  description: "Mount path of the AppRole authentication backend."
  shortDescription: "Mount path of the AppRole authentication backend."
  name: "spring.cloud.config.server.vault.app-role.app-role-path"
  defaultValue: "approle"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AppRoleProperties"
  type: "java.lang.String"
  description: "Name of the role, optional, used for pull-mode."
  shortDescription: "Name of the role, optional, used for pull-mode."
  name: "spring.cloud.config.server.vault.app-role.role"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AppRoleProperties"
  type: "java.lang.String"
  description: "The RoleId."
  shortDescription: "The RoleId."
  name: "spring.cloud.config.server.vault.app-role.role-id"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AppRoleProperties"
  type: "java.lang.String"
  description: "The SecretId."
  shortDescription: "The SecretId."
  name: "spring.cloud.config.server.vault.app-role.secret-id"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AuthenticationMethod"
  name: "spring.cloud.config.server.vault.authentication"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AwsEc2Properties"
  type: "java.lang.String"
  description: "Mount path of the AWS-EC2 authentication backend."
  shortDescription: "Mount path of the AWS-EC2 authentication backend."
  name: "spring.cloud.config.server.vault.aws-ec2.aws-ec2-path"
  defaultValue: "aws-ec2"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AwsEc2Properties"
  type: "java.lang.String"
  description: "URL of the AWS-EC2 PKCS7 identity document."
  shortDescription: "URL of the AWS-EC2 PKCS7 identity document."
  name: "spring.cloud.config.server.vault.aws-ec2.identity-document"
  defaultValue: "http://169.254.169.254/latest/dynamic/instance-identity/pkcs7"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AwsEc2Properties"
  type: "java.lang.String"
  description: "Nonce used for AWS-EC2 authentication. An empty nonce defaults to\
    \ nonce generation."
  shortDescription: "Nonce used for AWS-EC2 authentication."
  name: "spring.cloud.config.server.vault.aws-ec2.nonce"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AwsEc2Properties"
  type: "java.lang.String"
  description: "Name of the role, optional."
  shortDescription: "Name of the role, optional."
  name: "spring.cloud.config.server.vault.aws-ec2.role"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AwsIamProperties"
  type: "java.lang.String"
  description: "Mount path of the AWS authentication backend."
  shortDescription: "Mount path of the AWS authentication backend."
  name: "spring.cloud.config.server.vault.aws-iam.aws-path"
  defaultValue: "aws"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AwsIamProperties"
  type: "java.net.URI"
  description: "STS server URI. @since 2.2"
  shortDescription: "STS server URI."
  name: "spring.cloud.config.server.vault.aws-iam.endpoint-uri"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AwsIamProperties"
  type: "java.lang.String"
  description: "Name of the role, optional. Defaults to the friendly IAM name if not\
    \ set."
  shortDescription: "Name of the role, optional."
  name: "spring.cloud.config.server.vault.aws-iam.role"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AwsIamProperties"
  type: "java.lang.String"
  description: "Name of the server used to set {@code X-Vault-AWS-IAM-Server-ID} header\
    \ in the headers of login requests."
  shortDescription: "Name of the server used to set {@code X-Vault-AWS-IAM-Server-ID}\
    \ header in the headers of login requests."
  name: "spring.cloud.config.server.vault.aws-iam.server-name"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AzureMsiProperties"
  type: "java.lang.String"
  description: "Mount path of the Azure MSI authentication backend."
  shortDescription: "Mount path of the Azure MSI authentication backend."
  name: "spring.cloud.config.server.vault.azure-msi.azure-path"
  defaultValue: "azure"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AzureMsiProperties"
  type: "java.lang.String"
  description: "URI to the Azure MSI Identity Service."
  shortDescription: "URI to the Azure MSI Identity Service."
  name: "spring.cloud.config.server.vault.azure-msi.identity-token-service"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AzureMsiProperties"
  type: "java.lang.String"
  description: "URI to the Azure MSI Metadata Service."
  shortDescription: "URI to the Azure MSI Metadata Service."
  name: "spring.cloud.config.server.vault.azure-msi.metadata-service"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$AzureMsiProperties"
  type: "java.lang.String"
  description: "Name of the role."
  shortDescription: "Name of the role."
  name: "spring.cloud.config.server.vault.azure-msi.role"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.String"
  description: "Vault backend. Defaults to secret."
  shortDescription: "Vault backend."
  name: "spring.cloud.config.server.vault.backend"
  defaultValue: "secret"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.String"
  description: "The key in vault shared by all applications. Defaults to application.\
    \ Set to empty to disable."
  shortDescription: "The key in vault shared by all applications."
  name: "spring.cloud.config.server.vault.default-key"
  defaultValue: "application"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpGceProperties"
  type: "java.lang.String"
  description: "Mount path of the Kubernetes authentication backend."
  shortDescription: "Mount path of the Kubernetes authentication backend."
  name: "spring.cloud.config.server.vault.gcp-gce.gcp-path"
  defaultValue: "gcp"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpGceProperties"
  type: "java.lang.String"
  description: "Name of the role against which the login is being attempted."
  shortDescription: "Name of the role against which the login is being attempted."
  name: "spring.cloud.config.server.vault.gcp-gce.role"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpGceProperties"
  type: "java.lang.String"
  description: "Optional service account id. Using the default id if left unconfigured."
  shortDescription: "Optional service account id."
  name: "spring.cloud.config.server.vault.gcp-gce.service-account"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpCredentials"
  type: "java.lang.String"
  description: "The base64 encoded contents of an OAuth2 account private key in JSON\
    \ format."
  shortDescription: "The base64 encoded contents of an OAuth2 account private key\
    \ in JSON format."
  name: "spring.cloud.config.server.vault.gcp-iam.credentials.encoded-key"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpCredentials"
  type: "org.springframework.core.io.Resource"
  description: "Location of the OAuth2 credentials private key. <p> Since this is\
    \ a Resource, the private key can be in a multitude of locations, such as a local\
    \ file system, classpath, URL, etc."
  shortDescription: "Location of the OAuth2 credentials private key."
  name: "spring.cloud.config.server.vault.gcp-iam.credentials.location"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpIamProperties"
  type: "java.lang.String"
  description: "Mount path of the Kubernetes authentication backend."
  shortDescription: "Mount path of the Kubernetes authentication backend."
  name: "spring.cloud.config.server.vault.gcp-iam.gcp-path"
  defaultValue: "gcp"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpIamProperties"
  type: "java.time.Duration"
  description: "Validity of the JWT token."
  shortDescription: "Validity of the JWT token."
  name: "spring.cloud.config.server.vault.gcp-iam.jwt-validity"
  defaultValue: "15m"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpIamProperties"
  type: "java.lang.String"
  description: "Overrides the GCP project Id."
  shortDescription: "Overrides the GCP project Id."
  name: "spring.cloud.config.server.vault.gcp-iam.project-id"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpIamProperties"
  type: "java.lang.String"
  description: "Name of the role against which the login is being attempted."
  shortDescription: "Name of the role against which the login is being attempted."
  name: "spring.cloud.config.server.vault.gcp-iam.role"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$GcpIamProperties"
  type: "java.lang.String"
  description: "Overrides the GCP service account Id."
  shortDescription: "Overrides the GCP service account Id."
  name: "spring.cloud.config.server.vault.gcp-iam.service-account-id"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.String"
  description: "Vault host. Defaults to 127.0.0.1."
  shortDescription: "Vault host."
  name: "spring.cloud.config.server.vault.host"
  defaultValue: "127.0.0.1"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$KubernetesProperties"
  type: "java.lang.String"
  description: "Mount path of the Kubernetes authentication backend."
  shortDescription: "Mount path of the Kubernetes authentication backend."
  name: "spring.cloud.config.server.vault.kubernetes.kubernetes-path"
  defaultValue: "kubernetes"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$KubernetesProperties"
  type: "java.lang.String"
  description: "Name of the role against which the login is being attempted."
  shortDescription: "Name of the role against which the login is being attempted."
  name: "spring.cloud.config.server.vault.kubernetes.role"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$KubernetesProperties"
  type: "java.lang.String"
  description: "Path to the service account token file."
  shortDescription: "Path to the service account token file."
  name: "spring.cloud.config.server.vault.kubernetes.service-account-token-file"
  defaultValue: "/var/run/secrets/kubernetes.io/serviceaccount/token"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.Integer"
  description: "Value to indicate which version of Vault kv backend is used. Defaults\
    \ to 1."
  shortDescription: "Value to indicate which version of Vault kv backend is used."
  name: "spring.cloud.config.server.vault.kv-version"
  defaultValue: 1
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.String"
  description: "The value of the Vault X-Vault-Namespace header. Defaults to null.\
    \ This a Vault Enterprise feature only."
  shortDescription: "The value of the Vault X-Vault-Namespace header."
  name: "spring.cloud.config.server.vault.namespace"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.config.server.vault.order"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$PcfProperties"
  type: "org.springframework.core.io.Resource"
  description: "Path to the instance certificate (PEM). Defaults to {@code CF_INSTANCE_CERT}\
    \ env variable."
  shortDescription: "Path to the instance certificate (PEM)."
  name: "spring.cloud.config.server.vault.pcf.instance-certificate"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$PcfProperties"
  type: "org.springframework.core.io.Resource"
  description: "Path to the instance key (PEM). Defaults to {@code CF_INSTANCE_KEY}\
    \ env variable."
  shortDescription: "Path to the instance key (PEM)."
  name: "spring.cloud.config.server.vault.pcf.instance-key"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$PcfProperties"
  type: "java.lang.String"
  description: "Mount path of the Kubernetes authentication backend."
  shortDescription: "Mount path of the Kubernetes authentication backend."
  name: "spring.cloud.config.server.vault.pcf.pcf-path"
  defaultValue: "pcf"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$PcfProperties"
  type: "java.lang.String"
  description: "Name of the role against which the login is being attempted."
  shortDescription: "Name of the role against which the login is being attempted."
  name: "spring.cloud.config.server.vault.pcf.role"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.Integer"
  description: "Vault port. Defaults to 8200."
  shortDescription: "Vault port."
  name: "spring.cloud.config.server.vault.port"
  defaultValue: 8200
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.String"
  description: "Vault profile separator. Defaults to comma."
  shortDescription: "Vault profile separator."
  name: "spring.cloud.config.server.vault.profile-separator"
  defaultValue: ","
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.util.Map<org.springframework.cloud.config.server.proxy.ProxyHostProperties$ProxyForScheme,org.springframework.cloud.config.server.proxy.ProxyHostProperties>"
  description: "HTTP proxy configuration."
  shortDescription: "HTTP proxy configuration."
  name: "spring.cloud.config.server.vault.proxy"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.String"
  description: "Vault scheme. Defaults to http."
  shortDescription: "Vault scheme."
  name: "spring.cloud.config.server.vault.scheme"
  defaultValue: "http"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that SSL certificate validation should be bypassed\
    \ when communicating with a repository served over an HTTPS connection."
  shortDescription: "Flag to indicate that SSL certificate validation should be bypassed\
    \ when communicating with a repository served over an HTTPS connection."
  name: "spring.cloud.config.server.vault.skip-ssl-validation"
  defaultValue: false
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$Ssl"
  type: "java.lang.String"
  description: "Mount path of the TLS cert authentication backend."
  shortDescription: "Mount path of the TLS cert authentication backend."
  name: "spring.cloud.config.server.vault.ssl.cert-auth-path"
  defaultValue: "cert"
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Trust store that holds certificates and private keys."
  shortDescription: "Trust store that holds certificates and private keys."
  name: "spring.cloud.config.server.vault.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  shortDescription: "Password used to access the key store."
  name: "spring.cloud.config.server.vault.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Trust store that holds SSL certificates."
  shortDescription: "Trust store that holds SSL certificates."
  name: "spring.cloud.config.server.vault.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the trust store."
  shortDescription: "Password used to access the trust store."
  name: "spring.cloud.config.server.vault.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.Integer"
  description: "Timeout (in seconds) for obtaining HTTP connection, defaults to 5\
    \ seconds."
  shortDescription: "Timeout (in seconds) for obtaining HTTP connection, defaults\
    \ to 5 seconds."
  name: "spring.cloud.config.server.vault.timeout"
  defaultValue: 5
- owner: "org.springframework.cloud.config.server.environment.VaultEnvironmentProperties"
  type: "java.lang.String"
  description: "Static vault token. Required if {@link #authentication} is {@code\
    \ TOKEN}."
  shortDescription: "Static vault token."
  name: "spring.cloud.config.server.vault.token"
  defaultValue: ""
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "org.springframework.cloud.configuration.TlsProperties"
  description: "TLS properties."
  shortDescription: "TLS properties."
  name: "spring.cloud.config.tls"
  defaultValue: ""
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.String"
  description: "Security Token passed thru to underlying environment repository."
  shortDescription: "Security Token passed thru to underlying environment repository."
  name: "spring.cloud.config.token"
  defaultValue: ""
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.String[]"
  description: "The URI of the remote server (default http://localhost:8888)."
  shortDescription: "The URI of the remote server (default http://localhost:8888)."
  name: "spring.cloud.config.uri"
  defaultValue:
  - "http://localhost:8888"
- owner: "org.springframework.cloud.config.client.ConfigClientProperties"
  type: "java.lang.String"
  description: "The username to use (HTTP Basic) when contacting the remote server."
  shortDescription: "The username to use (HTTP Basic) when contacting the remote server."
  name: "spring.cloud.config.username"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "java.lang.String"
  name: "spring.cloud.consul.config.acl-token"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "java.lang.String"
  description: "If format is Format.PROPERTIES or Format.YAML then the following field\
    \ is used as key to look up consul for configuration."
  shortDescription: "If format is Format.PROPERTIES or Format.YAML then the following\
    \ field is used as key to look up consul for configuration."
  name: "spring.cloud.consul.config.data-key"
  defaultValue: "data"
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "java.lang.String"
  name: "spring.cloud.consul.config.default-context"
  defaultValue: "application"
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.consul.config.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "java.lang.Boolean"
  description: "Throw exceptions during config lookup if true, otherwise, log warnings."
  shortDescription: "Throw exceptions during config lookup if true, otherwise, log\
    \ warnings."
  name: "spring.cloud.consul.config.fail-fast"
  defaultValue: true
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "org.springframework.cloud.consul.config.ConsulConfigProperties$Format"
  name: "spring.cloud.consul.config.format"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "java.lang.String"
  description: "Alternative to spring.application.name to use in looking up values\
    \ in consul KV."
  shortDescription: "Alternative to spring.application.name to use in looking up values\
    \ in consul KV."
  name: "spring.cloud.consul.config.name"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "java.lang.String"
  name: "spring.cloud.consul.config.prefix"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReason: "replaced to support multiple prefixes"
  deprecationReplacement: "spring.cloud.consul.config.prefixes"
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "java.util.List<java.lang.String>"
  name: "spring.cloud.consul.config.prefixes"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties"
  type: "java.lang.String"
  name: "spring.cloud.consul.config.profile-separator"
  defaultValue: ","
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties$Watch"
  type: "java.lang.Integer"
  description: "The value of the fixed delay for the watch in millis. Defaults to\
    \ 1000."
  shortDescription: "The value of the fixed delay for the watch in millis."
  name: "spring.cloud.consul.config.watch.delay"
  defaultValue: 1000
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties$Watch"
  type: "java.lang.Boolean"
  description: "If the watch is enabled. Defaults to true."
  shortDescription: "If the watch is enabled."
  name: "spring.cloud.consul.config.watch.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.consul.config.ConsulConfigProperties$Watch"
  type: "java.lang.Integer"
  description: "The number of seconds to wait (or block) for watch query, defaults\
    \ to 55. Needs to be less than default ConsulClient (defaults to 60). To increase\
    \ ConsulClient timeout create a ConsulClient bean with a custom ConsulRawClient\
    \ with a custom HttpClient."
  shortDescription: "The number of seconds to wait (or block) for watch query, defaults\
    \ to 55."
  name: "spring.cloud.consul.config.watch.wait-time"
  defaultValue: 55
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  name: "spring.cloud.consul.discovery.acl-token"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Integer"
  description: "The delay between calls to watch consul catalog in millis, default\
    \ is 1000."
  shortDescription: "The delay between calls to watch consul catalog in millis, default\
    \ is 1000."
  name: "spring.cloud.consul.discovery.catalog-services-watch-delay"
  defaultValue: 1000
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Integer"
  description: "The number of seconds to block while watching consul catalog, default\
    \ is 2."
  shortDescription: "The number of seconds to block while watching consul catalog,\
    \ default is 2."
  name: "spring.cloud.consul.discovery.catalog-services-watch-timeout"
  defaultValue: 2
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "com.ecwid.consul.v1.ConsistencyMode"
  description: "Consistency mode for health service request."
  shortDescription: "Consistency mode for health service request."
  name: "spring.cloud.consul.discovery.consistency-mode"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Map of serviceId's -> datacenter to query for in server list. This\
    \ allows looking up services in another datacenters."
  shortDescription: "Map of serviceId's -> datacenter to query for in server list."
  name: "spring.cloud.consul.discovery.datacenters"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Tag to query for in service list if one is not listed in serverListQueryTags.\
    \ Multiple tags can be specified with a comma separated value."
  shortDescription: "Tag to query for in service list if one is not listed in serverListQueryTags."
  name: "spring.cloud.consul.discovery.default-query-tag"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Service instance zone comes from metadata. This allows changing the\
    \ metadata tag name."
  shortDescription: "Service instance zone comes from metadata."
  name: "spring.cloud.consul.discovery.default-zone-metadata-name"
  defaultValue: "zone"
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Disable automatic de-registration of service in consul."
  shortDescription: "Disable automatic de-registration of service in consul."
  name: "spring.cloud.consul.discovery.deregister"
  defaultValue: true
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Enable tag override for the registered service."
  shortDescription: "Enable tag override for the registered service."
  name: "spring.cloud.consul.discovery.enable-tag-override"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Is service discovery enabled?"
  shortDescription: "Is service discovery enabled?"
  name: "spring.cloud.consul.discovery.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Throw exceptions during service registration if true, otherwise, log\
    \ warnings (defaults to true)."
  shortDescription: "Throw exceptions during service registration if true, otherwise,\
    \ log warnings (defaults to true)."
  name: "spring.cloud.consul.discovery.fail-fast"
  defaultValue: true
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Timeout to deregister services critical for longer than timeout (e.g.\
    \ 30m). Requires consul version 7.x or higher."
  shortDescription: "Timeout to deregister services critical for longer than timeout\
    \ (e.g. 30m)."
  name: "spring.cloud.consul.discovery.health-check-critical-timeout"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  description: "Headers to be applied to the Health Check calls."
  shortDescription: "Headers to be applied to the Health Check calls."
  name: "spring.cloud.consul.discovery.health-check-headers"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "How often to perform the health check (e.g. 10s), defaults to 10s."
  shortDescription: "How often to perform the health check (e.g. 10s), defaults to\
    \ 10s."
  name: "spring.cloud.consul.discovery.health-check-interval"
  defaultValue: "10s"
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Alternate server path to invoke for health checking."
  shortDescription: "Alternate server path to invoke for health checking."
  name: "spring.cloud.consul.discovery.health-check-path"
  defaultValue: "/actuator/health"
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Timeout for health check (e.g. 10s)."
  shortDescription: "Timeout for health check (e.g. 10s)."
  name: "spring.cloud.consul.discovery.health-check-timeout"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Skips certificate verification during service checks if true, otherwise\
    \ runs certificate verification."
  shortDescription: "Skips certificate verification during service checks if true,\
    \ otherwise runs certificate verification."
  name: "spring.cloud.consul.discovery.health-check-tls-skip-verify"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Custom health check url to override default."
  shortDescription: "Custom health check url to override default."
  name: "spring.cloud.consul.discovery.health-check-url"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.HeartbeatProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.consul.discovery.heartbeat.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.consul.discovery.HeartbeatProperties"
  type: "java.lang.Double"
  name: "spring.cloud.consul.discovery.heartbeat.interval-ratio"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.HeartbeatProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.consul.discovery.heartbeat.reregister-service-on-failure"
  defaultValue: false
- owner: "org.springframework.cloud.consul.discovery.HeartbeatProperties"
  type: "java.time.Duration"
  name: "spring.cloud.consul.discovery.heartbeat.ttl"
  defaultValue: "30s"
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Hostname to use when accessing server."
  shortDescription: "Hostname to use when accessing server."
  name: "spring.cloud.consul.discovery.hostname"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Whether hostname is included into the default instance id when registering\
    \ service."
  shortDescription: "Whether hostname is included into the default instance id when\
    \ registering service."
  name: "spring.cloud.consul.discovery.include-hostname-in-instance-id"
  defaultValue: false
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Service instance group."
  shortDescription: "Service instance group."
  name: "spring.cloud.consul.discovery.instance-group"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Unique service instance id."
  shortDescription: "Unique service instance id."
  name: "spring.cloud.consul.discovery.instance-id"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Service instance zone."
  shortDescription: "Service instance zone."
  name: "spring.cloud.consul.discovery.instance-zone"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "IP address to use when accessing service (must also set preferIpAddress\
    \ to use)."
  shortDescription: "IP address to use when accessing service (must also set preferIpAddress\
    \ to use)."
  name: "spring.cloud.consul.discovery.ip-address"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties$Lifecycle"
  type: "java.lang.Boolean"
  name: "spring.cloud.consul.discovery.lifecycle.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Enable tag override for the registered management service."
  shortDescription: "Enable tag override for the registered management service."
  name: "spring.cloud.consul.discovery.management-enable-tag-override"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Metadata to use when registering management service."
  shortDescription: "Metadata to use when registering management service."
  name: "spring.cloud.consul.discovery.management-metadata"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Integer"
  description: "Port to register the management service under (defaults to management\
    \ port)."
  shortDescription: "Port to register the management service under (defaults to management\
    \ port)."
  name: "spring.cloud.consul.discovery.management-port"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Suffix to use when registering management service."
  shortDescription: "Suffix to use when registering management service."
  name: "spring.cloud.consul.discovery.management-suffix"
  defaultValue: "management"
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.util.List<java.lang.String>"
  description: "Tags to use when registering management service."
  shortDescription: "Tags to use when registering management service."
  name: "spring.cloud.consul.discovery.management-tags"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Metadata to use when registering service."
  shortDescription: "Metadata to use when registering service."
  name: "spring.cloud.consul.discovery.metadata"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Integer"
  description: "Order of the discovery client used by `CompositeDiscoveryClient` for\
    \ sorting available clients."
  shortDescription: "Order of the discovery client used by `CompositeDiscoveryClient`\
    \ for sorting available clients."
  name: "spring.cloud.consul.discovery.order"
  defaultValue: 0
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Integer"
  description: "Port to register the service under (defaults to listening port)."
  shortDescription: "Port to register the service under (defaults to listening port)."
  name: "spring.cloud.consul.discovery.port"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Source of how we will determine the address to use."
  shortDescription: "Source of how we will determine the address to use."
  name: "spring.cloud.consul.discovery.prefer-agent-address"
  defaultValue: false
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Use ip address rather than hostname during registration."
  shortDescription: "Use ip address rather than hostname during registration."
  name: "spring.cloud.consul.discovery.prefer-ip-address"
  defaultValue: false
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Add the 'passing` parameter to /v1/health/service/serviceName. This\
    \ pushes health check passing to the server."
  shortDescription: "Add the 'passing` parameter to /v1/health/service/serviceName."
  name: "spring.cloud.consul.discovery.query-passing"
  defaultValue: false
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Register as a service in consul."
  shortDescription: "Register as a service in consul."
  name: "spring.cloud.consul.discovery.register"
  defaultValue: true
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.Boolean"
  description: "Register health check in consul. Useful during development of a service."
  shortDescription: "Register health check in consul."
  name: "spring.cloud.consul.discovery.register-health-check"
  defaultValue: true
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Whether to register an http or https service."
  shortDescription: "Whether to register an http or https service."
  name: "spring.cloud.consul.discovery.scheme"
  defaultValue: "http"
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Map of serviceId's -> tag to query for in server list. This allows\
    \ filtering services by one more tags. Multiple tags can be specified with a comma\
    \ separated value."
  shortDescription: "Map of serviceId's -> tag to query for in server list."
  name: "spring.cloud.consul.discovery.server-list-query-tags"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.lang.String"
  description: "Service name."
  shortDescription: "Service name."
  name: "spring.cloud.consul.discovery.service-name"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.discovery.ConsulDiscoveryProperties"
  type: "java.util.List<java.lang.String>"
  description: "Tags to use when registering service."
  shortDescription: "Tags to use when registering service."
  name: "spring.cloud.consul.discovery.tags"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.ConsulProperties"
  type: "java.lang.Boolean"
  description: "Is spring cloud consul enabled."
  shortDescription: "Is spring cloud consul enabled."
  name: "spring.cloud.consul.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.consul.ConsulProperties"
  type: "java.lang.String"
  description: "Consul agent hostname. Defaults to 'localhost'."
  shortDescription: "Consul agent hostname."
  name: "spring.cloud.consul.host"
  defaultValue: "localhost"
- owner: "org.springframework.cloud.consul.ConsulProperties"
  type: "java.lang.String"
  description: "Custom path if consul is under non-root."
  shortDescription: "Custom path if consul is under non-root."
  name: "spring.cloud.consul.path"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.ConsulProperties"
  type: "java.lang.Integer"
  description: "Consul agent port. Defaults to '8500'."
  shortDescription: "Consul agent port."
  name: "spring.cloud.consul.port"
  defaultValue: 8500
- owner: "org.springframework.cloud.consul.RetryProperties"
  type: "java.lang.Boolean"
  description: "If consul retry is enabled."
  shortDescription: "If consul retry is enabled."
  name: "spring.cloud.consul.retry.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.consul.RetryProperties"
  type: "java.lang.Long"
  description: "Initial retry interval in milliseconds."
  shortDescription: "Initial retry interval in milliseconds."
  name: "spring.cloud.consul.retry.initial-interval"
  defaultValue: 1000
- owner: "org.springframework.cloud.consul.RetryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of attempts."
  shortDescription: "Maximum number of attempts."
  name: "spring.cloud.consul.retry.max-attempts"
  defaultValue: 6
- owner: "org.springframework.cloud.consul.RetryProperties"
  type: "java.lang.Long"
  description: "Maximum interval for backoff."
  shortDescription: "Maximum interval for backoff."
  name: "spring.cloud.consul.retry.max-interval"
  defaultValue: 2000
- owner: "org.springframework.cloud.consul.RetryProperties"
  type: "java.lang.Double"
  description: "Multiplier for next interval."
  shortDescription: "Multiplier for next interval."
  name: "spring.cloud.consul.retry.multiplier"
  defaultValue: 1.1
- type: "java.lang.Boolean"
  description: "Enables Consul and Ribbon integration."
  shortDescription: "Enables Consul and Ribbon integration."
  name: "spring.cloud.consul.ribbon.enabled"
  defaultValue: "true"
- owner: "org.springframework.cloud.consul.ConsulProperties"
  type: "java.lang.String"
  description: "Consul agent scheme (HTTP/HTTPS). If there is no scheme in address\
    \ - client will use HTTP."
  shortDescription: "Consul agent scheme (HTTP/HTTPS)."
  name: "spring.cloud.consul.scheme"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enables Consul Service Registry Auto-registration."
  shortDescription: "Enables Consul Service Registry Auto-registration."
  name: "spring.cloud.consul.service-registry.auto-registration.enabled"
  defaultValue: "true"
- type: "java.lang.Boolean"
  description: "Enables Consul Service Registry functionality."
  shortDescription: "Enables Consul Service Registry functionality."
  name: "spring.cloud.consul.service-registry.enabled"
  defaultValue: "true"
- owner: "org.springframework.cloud.consul.ConsulProperties$TLSConfig"
  type: "java.lang.String"
  description: "Password to open the certificate."
  shortDescription: "Password to open the certificate."
  name: "spring.cloud.consul.tls.certificate-password"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.ConsulProperties$TLSConfig"
  type: "java.lang.String"
  description: "File path to the certificate."
  shortDescription: "File path to the certificate."
  name: "spring.cloud.consul.tls.certificate-path"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.ConsulProperties$TLSConfig"
  type: "com.ecwid.consul.transport.TLSConfig$KeyStoreInstanceType"
  description: "Type of key framework to use."
  shortDescription: "Type of key framework to use."
  name: "spring.cloud.consul.tls.key-store-instance-type"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.ConsulProperties$TLSConfig"
  type: "java.lang.String"
  description: "Password to an external keystore."
  shortDescription: "Password to an external keystore."
  name: "spring.cloud.consul.tls.key-store-password"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.ConsulProperties$TLSConfig"
  type: "java.lang.String"
  description: "Path to an external keystore."
  shortDescription: "Path to an external keystore."
  name: "spring.cloud.consul.tls.key-store-path"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enable the DecryptEnvironmentPostProcessor."
  shortDescription: "Enable the DecryptEnvironmentPostProcessor."
  name: "spring.cloud.decrypt-environment-post-processor.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables discovery client composite health indicator."
  shortDescription: "Enables discovery client composite health indicator."
  name: "spring.cloud.discovery.client.composite-indicator.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.discovery.client.health-indicator.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.discovery.client.health-indicator.include-description"
  defaultValue: false
- owner: "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"
  type: "java.lang.Boolean"
  description: "Whether or not the indicator should use {@link DiscoveryClient#getServices}\
    \ to check its health. When set to {@code false} the indicator instead uses the\
    \ lighter {@link DiscoveryClient#probe()}. This can be helpful in large deployments\
    \ where the number of services returned makes the operation unnecessarily heavy."
  shortDescription: "Whether or not the indicator should use {@link DiscoveryClient#getServices}\
    \ to check its health."
  name: "spring.cloud.discovery.client.health-indicator.use-services-query"
  defaultValue: true
- owner: "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
  type: "java.util.Map<java.lang.String,java.util.List<org.springframework.cloud.client.DefaultServiceInstance>>"
  name: "spring.cloud.discovery.client.simple.instances"
  defaultValue: ""
- owner: "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.discovery.client.simple.order"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enables discovery client health indicators."
  shortDescription: "Enables discovery client health indicators."
  name: "spring.cloud.discovery.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables the features endpoint."
  shortDescription: "Enables the features endpoint."
  name: "spring.cloud.features.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.function.context.FunctionProperties"
  type: "org.springframework.context.ApplicationContext"
  name: "spring.cloud.function.application-context"
  defaultValue: ""
- owner: "org.springframework.cloud.function.context.FunctionProperties"
  type: "java.util.Map<java.lang.String,org.springframework.cloud.function.context.FunctionProperties$FunctionConfigurationProperties>"
  name: "spring.cloud.function.configuration"
  defaultValue: ""
- owner: "org.springframework.cloud.function.context.FunctionProperties"
  type: "java.lang.String"
  description: "Definition of the function to be used. This could be function name\
    \ (e.g., 'myFunction') or function composition definition (e.g., 'myFunction|yourFunction')"
  shortDescription: "Definition of the function to be used."
  name: "spring.cloud.function.definition"
  defaultValue: ""
- owner: "org.springframework.cloud.function.context.FunctionProperties"
  type: "java.lang.String"
  name: "spring.cloud.function.expected-content-type"
  defaultValue: ""
- owner: "org.springframework.cloud.function.context.FunctionProperties"
  type: "java.lang.String"
  description: "SpEL expression which should result in function definition (e.g.,\
    \ function name or composition instruction). NOTE: SpEL evaluation context's root\
    \ object is the input argument (e.g., Message)."
  shortDescription: "SpEL expression which should result in function definition (e.g.,\
    \ function name or composition instruction)."
  name: "spring.cloud.function.routing-expression"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enables creation of Apache Http Client factory beans."
  shortDescription: "Enables creation of Apache Http Client factory beans."
  name: "spring.cloud.httpclientfactories.apache.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables creation of OK Http Client factory beans."
  shortDescription: "Enables creation of OK Http Client factory beans."
  name: "spring.cloud.httpclientfactories.ok.enabled"
  defaultValue: "true"
- owner: "org.springframework.cloud.client.hypermedia.CloudHypermediaAutoConfiguration$CloudHypermediaProperties$Refresh"
  type: "java.lang.Integer"
  name: "spring.cloud.hypermedia.refresh.fixed-delay"
  defaultValue: 5000
- owner: "org.springframework.cloud.client.hypermedia.CloudHypermediaAutoConfiguration$CloudHypermediaProperties$Refresh"
  type: "java.lang.Integer"
  name: "spring.cloud.hypermedia.refresh.initial-delay"
  defaultValue: 10000
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.lang.String"
  description: "The default hostname. Used in case of errors."
  shortDescription: "The default hostname."
  name: "spring.cloud.inetutils.default-hostname"
  defaultValue: "localhost"
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.lang.String"
  description: "The default IP address. Used in case of errors."
  shortDescription: "The default IP address."
  name: "spring.cloud.inetutils.default-ip-address"
  defaultValue: "127.0.0.1"
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of Java regular expressions for network interfaces that will\
    \ be ignored."
  shortDescription: "List of Java regular expressions for network interfaces that\
    \ will be ignored."
  name: "spring.cloud.inetutils.ignored-interfaces"
  defaultValue: ""
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of Java regular expressions for network addresses that will be\
    \ preferred."
  shortDescription: "List of Java regular expressions for network addresses that will\
    \ be preferred."
  name: "spring.cloud.inetutils.preferred-networks"
  defaultValue: ""
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for calculating hostname."
  shortDescription: "Timeout, in seconds, for calculating hostname."
  name: "spring.cloud.inetutils.timeout-seconds"
  defaultValue: 1
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.lang.Boolean"
  description: "Whether to use only interfaces with site local addresses. See {@link\
    \ InetAddress#isSiteLocalAddress()} for more details."
  shortDescription: "Whether to use only interfaces with site local addresses."
  name: "spring.cloud.inetutils.use-only-site-local-interfaces"
  defaultValue: false
- owner: "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties$Caffeine"
  type: "java.lang.String"
  description: "The spec to use to create caches. See CaffeineSpec for more details\
    \ on the spec format."
  shortDescription: "The spec to use to create caches."
  name: "spring.cloud.loadbalancer.cache.caffeine.spec"
  defaultValue: ""
- owner: "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties"
  type: "java.lang.Integer"
  description: "Initial cache capacity expressed as int."
  shortDescription: "Initial cache capacity expressed as int."
  name: "spring.cloud.loadbalancer.cache.capacity"
  defaultValue: 256
- type: "java.lang.Boolean"
  description: "Enables Spring Cloud LoadBalancer caching mechanism."
  shortDescription: "Enables Spring Cloud LoadBalancer caching mechanism."
  name: "spring.cloud.loadbalancer.cache.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties"
  type: "java.time.Duration"
  description: "Time To Live - time counted from writing of the record, after which\
    \ cache entries are expired, expressed as a {@link Duration}. The property {@link\
    \ String} has to be in keeping with the appropriate syntax as specified in Spring\
    \ Boot <code>StringToDurationConverter</code>. @see <a href= \"https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToDurationConverter.java\"\
    >StringToDurationConverter.java</a>"
  shortDescription: "Time To Live - time counted from writing of the record, after\
    \ which cache entries are expired, expressed as a {@link Duration}."
  name: "spring.cloud.loadbalancer.cache.ttl"
  defaultValue: "35s"
- type: "java.lang.String"
  description: "Enables a predefined LoadBalancer configuration."
  shortDescription: "Enables a predefined LoadBalancer configuration."
  name: "spring.cloud.loadbalancer.configurations"
  defaultValue: "default"
- type: "java.lang.Boolean"
  description: "Enables Spring Cloud LoadBalancer."
  shortDescription: "Enables Spring Cloud LoadBalancer."
  name: "spring.cloud.loadbalancer.enabled"
  defaultValue: "true"
- owner: "org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerProperties"
  type: "java.lang.Boolean"
  description: "Used to determine whether we should try to get the `zone` value from\
    \ host name."
  shortDescription: "Used to determine whether we should try to get the `zone` value\
    \ from host name."
  name: "spring.cloud.loadbalancer.eureka.approximate-zone-from-hostname"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.time.Duration"
  description: "Initial delay value for the HealthCheck scheduler."
  shortDescription: "Initial delay value for the HealthCheck scheduler."
  name: "spring.cloud.loadbalancer.health-check.initial-delay"
  defaultValue: 0
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.time.Duration"
  description: "Interval for rerunning the HealthCheck scheduler."
  shortDescription: "Interval for rerunning the HealthCheck scheduler."
  name: "spring.cloud.loadbalancer.health-check.interval"
  defaultValue: "25s"
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  name: "spring.cloud.loadbalancer.health-check.path"
  defaultValue: ""
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.lang.Boolean"
  description: "Indicates whether the instances should be refetched by the <code>HealthCheckServiceInstanceListSupplier</code>.\
    \ This can be used if the instances can be updated and the underlying delegate\
    \ does not provide an ongoing flux."
  shortDescription: "Indicates whether the instances should be refetched by the <code>HealthCheckServiceInstanceListSupplier</code>."
  name: "spring.cloud.loadbalancer.health-check.refetch-instances"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.time.Duration"
  description: "Interval for refetching available service instances."
  shortDescription: "Interval for refetching available service instances."
  name: "spring.cloud.loadbalancer.health-check.refetch-instances-interval"
  defaultValue: "25s"
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.lang.Boolean"
  description: "Indicates whether health checks should keep repeating. It might be\
    \ useful to set it to <code>false</code> if periodically refetching the instances,\
    \ as every refetch will also trigger a healthcheck."
  shortDescription: "Indicates whether health checks should keep repeating."
  name: "spring.cloud.loadbalancer.health-check.repeat-health-check"
  defaultValue: true
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Allows setting the value of <code>hint</code> that is passed on to\
    \ the LoadBalancer request and can subsequently be used in {@link ReactiveLoadBalancer}\
    \ implementations."
  shortDescription: "Allows setting the value of <code>hint</code> that is passed\
    \ on to the LoadBalancer request and can subsequently be used in {@link ReactiveLoadBalancer}\
    \ implementations."
  name: "spring.cloud.loadbalancer.hint"
  defaultValue: ""
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties"
  type: "java.lang.String"
  description: "Allows setting the name of the header used for passing the hint for\
    \ hint-based service instance filtering."
  shortDescription: "Allows setting the name of the header used for passing the hint\
    \ for hint-based service instance filtering."
  name: "spring.cloud.loadbalancer.hint-header-name"
  defaultValue: "X-SC-LB-Hint"
- type: "java.lang.Boolean"
  description: "Enables wrapping ServiceInstanceListSupplier beans with `RetryAwareServiceInstanceListSupplier`\
    \ if Spring-Retry is in the classpath."
  shortDescription: "Enables wrapping ServiceInstanceListSupplier beans with `RetryAwareServiceInstanceListSupplier`\
    \ if Spring-Retry is in the classpath."
  name: "spring.cloud.loadbalancer.retry.avoid-previous-instance"
  defaultValue: true
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff"
  type: "java.lang.Boolean"
  description: "Indicates whether Reactor Retry backoffs should be applied."
  shortDescription: "Indicates whether Reactor Retry backoffs should be applied."
  name: "spring.cloud.loadbalancer.retry.backoff.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff"
  type: "java.lang.Double"
  description: "Used to set {@link RetryBackoffSpec#jitter}."
  shortDescription: "Used to set {@link RetryBackoffSpec#jitter}."
  name: "spring.cloud.loadbalancer.retry.backoff.jitter"
  defaultValue: 0.5
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff"
  type: "java.time.Duration"
  description: "Used to set {@link RetryBackoffSpec#maxBackoff}."
  shortDescription: "Used to set {@link RetryBackoffSpec#maxBackoff}."
  name: "spring.cloud.loadbalancer.retry.backoff.max-backoff"
  defaultValue: ""
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff"
  type: "java.time.Duration"
  description: "Used to set {@link RetryBackoffSpec#minBackoff}."
  shortDescription: "Used to set {@link RetryBackoffSpec#minBackoff}."
  name: "spring.cloud.loadbalancer.retry.backoff.min-backoff"
  defaultValue: "5ms"
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.lang.Boolean"
  description: "Enables LoadBalancer retries."
  shortDescription: "Enables LoadBalancer retries."
  name: "spring.cloud.loadbalancer.retry.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.lang.Integer"
  description: "Number of retries to be executed on the next <code>ServiceInstance</code>.\
    \ A <code>ServiceInstance</code> is chosen before each retry call."
  shortDescription: "Number of retries to be executed on the next <code>ServiceInstance</code>."
  name: "spring.cloud.loadbalancer.retry.max-retries-on-next-service-instance"
  defaultValue: 1
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.lang.Integer"
  description: "Number of retries to be executed on the same <code>ServiceInstance</code>."
  shortDescription: "Number of retries to be executed on the same <code>ServiceInstance</code>."
  name: "spring.cloud.loadbalancer.retry.max-retries-on-same-service-instance"
  defaultValue: 0
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.lang.Boolean"
  description: "Indicates retries should be attempted on operations other than {@link\
    \ HttpMethod#GET}."
  shortDescription: "Indicates retries should be attempted on operations other than\
    \ {@link HttpMethod#GET}."
  name: "spring.cloud.loadbalancer.retry.retry-on-all-operations"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.util.Set<java.lang.Integer>"
  description: "A {@link Set} of status codes that should trigger a retry."
  shortDescription: "A {@link Set} of status codes that should trigger a retry."
  name: "spring.cloud.loadbalancer.retry.retryable-status-codes"
  defaultValue: ""
- type: "java.lang.String"
  description: "String representation of Duration of the timeout for calls to service\
    \ discovery."
  shortDescription: "String representation of Duration of the timeout for calls to\
    \ service discovery."
  name: "spring.cloud.loadbalancer.service-discovery.timeout"
  defaultValue: ""
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"
  type: "java.lang.Boolean"
  description: "Indicates whether a cookie with the newly selected instance should\
    \ be added by SC LoadBalancer."
  shortDescription: "Indicates whether a cookie with the newly selected instance should\
    \ be added by SC LoadBalancer."
  name: "spring.cloud.loadbalancer.sticky-session.add-service-instance-cookie"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"
  type: "java.lang.String"
  description: "The name of the cookie holding the preferred instance id."
  shortDescription: "The name of the cookie holding the preferred instance id."
  name: "spring.cloud.loadbalancer.sticky-session.instance-id-cookie-name"
  defaultValue: "sc-lb-instance-id"
- type: "java.lang.String"
  description: "Spring Cloud LoadBalancer zone."
  shortDescription: "Spring Cloud LoadBalancer zone."
  name: "spring.cloud.loadbalancer.zone"
  defaultValue: ""
- owner: "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"
  type: "java.util.List<java.lang.String>"
  description: "Additional property sources to retain during a refresh. Typically\
    \ only system property sources are retained. This property allows property sources,\
    \ such as property sources created by EnvironmentPostProcessors to be retained\
    \ as well."
  shortDescription: "Additional property sources to retain during a refresh."
  name: "spring.cloud.refresh.additional-property-sources-to-retain"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enables autoconfiguration for the refresh scope and associated features."
  shortDescription: "Enables autoconfiguration for the refresh scope and associated\
    \ features."
  name: "spring.cloud.refresh.enabled"
  defaultValue: "true"
- type: "java.util.Set<java.lang.String>"
  description: "Additional class names for beans to post process into refresh scope."
  shortDescription: "Additional class names for beans to post process into refresh\
    \ scope."
  name: "spring.cloud.refresh.extra-refreshable"
  defaultValue: true
- type: "java.lang.String"
  description: "Comma separated list of class names for beans to never be refreshed\
    \ or rebound."
  shortDescription: "Comma separated list of class names for beans to never be refreshed\
    \ or rebound."
  name: "spring.cloud.refresh.never-refreshable"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables Service Registry Auto-registration."
  shortDescription: "Enables Service Registry Auto-registration."
  name: "spring.cloud.service-registry.auto-registration.enabled"
  defaultValue: "true"
- owner: "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties"
  type: "java.lang.Boolean"
  description: "Whether startup fails if there is no AutoServiceRegistration. Defaults\
    \ to false."
  shortDescription: "Whether startup fails if there is no AutoServiceRegistration."
  name: "spring.cloud.service-registry.auto-registration.fail-fast"
  defaultValue: false
- owner: "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties"
  type: "java.lang.Boolean"
  description: "Whether to register the management as a service. Defaults to true."
  shortDescription: "Whether to register the management as a service."
  name: "spring.cloud.service-registry.auto-registration.register-management"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables Service Registry functionality."
  shortDescription: "Enables Service Registry functionality."
  name: "spring.cloud.service-registry.enabled"
  defaultValue: "true"
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.util.Map<java.lang.String,org.springframework.cloud.stream.config.BinderProperties>"
  description: "Additional per-binder properties (see {@link BinderProperties}) if\
    \ more then one binder of the same type is used (i.e., connect to multiple instances\
    \ of RabbitMq). Here you can specify multiple binder configurations, each with\
    \ different environment settings. For example; spring.cloud.stream.binders.rabbit1.environment.\
    \ . . , spring.cloud.stream.binders.rabbit2.environment. . ."
  shortDescription: "Additional per-binder properties (see {@link BinderProperties})\
    \ if more then one binder of the same type is used (i.e., connect to multiple\
    \ instances of RabbitMq)."
  name: "spring.cloud.stream.binders"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.lang.Integer"
  description: "Retry interval (in seconds) used to schedule binding attempts. Default:\
    \ 30 sec."
  shortDescription: "Retry interval (in seconds) used to schedule binding attempts."
  name: "spring.cloud.stream.binding-retry-interval"
  defaultValue: 30
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.util.Map<java.lang.String,org.springframework.cloud.stream.config.BindingProperties>"
  description: "Additional binding properties (see {@link BinderProperties}) per binding\
    \ name (e.g., 'input`). For example; This sets the content-type for the 'input'\
    \ binding of a Sink application: 'spring.cloud.stream.bindings.input.contentType=text/plain'"
  shortDescription: "Additional binding properties (see {@link BinderProperties})\
    \ per binding name (e.g., 'input`)."
  name: "spring.cloud.stream.bindings"
  defaultValue: ""
- owner: "org.springframework.cloud.consul.binder.config.ConsulBinderProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.stream.consul.binder.event-timeout"
  defaultValue: 5
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.lang.String"
  description: "The name of the binder to use by all bindings in the event multiple\
    \ binders available (e.g., 'rabbit')."
  shortDescription: "The name of the binder to use by all bindings in the event multiple\
    \ binders available (e.g., 'rabbit')."
  name: "spring.cloud.stream.default-binder"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.lang.Integer"
  description: "The maximum size of Least Recently Used (LRU) cache of dynamic destinations.\
    \ Once this size is reached, new destinations will trigger the removal of old\
    \ destinations. Default: 10"
  shortDescription: "The maximum size of Least Recently Used (LRU) cache of dynamic\
    \ destinations."
  name: "spring.cloud.stream.dynamic-destination-cache-size"
  defaultValue: 10
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.lang.String[]"
  description: "A list of destinations that can be bound dynamically. If set, only\
    \ listed destinations can be bound."
  shortDescription: "A list of destinations that can be bound dynamically."
  name: "spring.cloud.stream.dynamic-destinations"
  defaultValue: []
- owner: "org.springframework.cloud.stream.function.StreamFunctionProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.stream.function.batch-mode"
  defaultValue: false
- owner: "org.springframework.cloud.stream.function.StreamFunctionProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  name: "spring.cloud.stream.function.bindings"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.lang.Integer"
  description: "The number of deployed instances of an application. Default: 1. NOTE:\
    \ Could also be managed per individual binding \"spring.cloud.stream.bindings.foo.consumer.instance-count\"\
    \ where 'foo' is the name of the binding."
  shortDescription: "The number of deployed instances of an application."
  name: "spring.cloud.stream.instance-count"
  defaultValue: 1
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.lang.Integer"
  description: "The instance id of the application: a number from 0 to instanceCount-1.\
    \ Used for partitioning and with Kafka. NOTE: Could also be managed per individual\
    \ binding \"spring.cloud.stream.bindings.foo.consumer.instance-index\" where 'foo'\
    \ is the name of the binding."
  shortDescription: "The instance id of the application: a number from 0 to instanceCount-1."
  name: "spring.cloud.stream.instance-index"
  defaultValue: 0
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.util.List<java.lang.Integer>"
  description: "A list of instance id's from 0 to instanceCount-1. Used for partitioning\
    \ and with Kafka. NOTE: Could also be managed per individual binding \"spring.cloud.stream.bindings.foo.consumer.instance-index-list\"\
    \ where 'foo' is the name of the binding. This setting will override the one set\
    \ in 'spring.cloud.stream.instance-index'"
  shortDescription: "A list of instance id's from 0 to instanceCount-1."
  name: "spring.cloud.stream.instance-index-list"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.config.SpringIntegrationProperties"
  type: "java.lang.String[]"
  description: "Message header names that will NOT be copied from the inbound message."
  shortDescription: "Message header names that will NOT be copied from the inbound\
    \ message."
  name: "spring.cloud.stream.integration.message-handler-not-propagated-headers"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.time.Duration"
  description: "Time between retries after AuthorizationException is caught in the\
    \ ListenerContainer; defalt is null which disables retries. For more info see:\
    \ {@link org.springframework.kafka.listener.ConsumerProperties#setAuthorizationExceptionRetryInterval(java.time.Duration)}"
  shortDescription: "Time between retries after AuthorizationException is caught in\
    \ the ListenerContainer; defalt is null which disables retries."
  name: "spring.cloud.stream.kafka.binder.authorization-exception-retry-interval"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.stream.kafka.binder.auto-add-partitions"
  defaultValue: false
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.stream.kafka.binder.auto-alter-topics"
  defaultValue: false
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.stream.kafka.binder.auto-create-topics"
  defaultValue: true
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.String[]"
  name: "spring.cloud.stream.kafka.binder.brokers"
  defaultValue:
  - "localhost"
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.String"
  description: "When a certificate store location is given as classpath URL (classpath:),\
    \ then the binder moves the resource from the classpath location inside the JAR\
    \ to a location on the filesystem. If this value is set, then this location is\
    \ used, otherwise, the certificate file is copied to the directory returned by\
    \ java.io.tmpdir."
  shortDescription: "When a certificate store location is given as classpath URL (classpath:),\
    \ then the binder moves the resource from the classpath location inside the JAR\
    \ to a location on the filesystem."
  name: "spring.cloud.stream.kafka.binder.certificate-store-directory"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Arbitrary kafka properties that apply to both producers and consumers."
  shortDescription: "Arbitrary kafka properties that apply to both producers and consumers."
  name: "spring.cloud.stream.kafka.binder.configuration"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.stream.kafka.binder.consider-down-when-any-partition-has-no-leader"
  defaultValue: false
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Arbitrary kafka consumer properties."
  shortDescription: "Arbitrary kafka consumer properties."
  name: "spring.cloud.stream.kafka.binder.consumer-properties"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.String"
  description: "The bean name of a custom header mapper to use instead of a {@link\
    \ org.springframework.kafka.support.DefaultKafkaHeaderMapper}."
  shortDescription: "The bean name of a custom header mapper to use instead of a {@link\
    \ org.springframework.kafka.support.DefaultKafkaHeaderMapper}."
  name: "spring.cloud.stream.kafka.binder.header-mapper-bean-name"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.String[]"
  name: "spring.cloud.stream.kafka.binder.headers"
  defaultValue: []
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.Integer"
  description: "Time to wait to get partition information in seconds; default 60."
  shortDescription: "Time to wait to get partition information in seconds; default\
    \ 60."
  name: "spring.cloud.stream.kafka.binder.health-timeout"
  defaultValue: 60
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "org.springframework.cloud.stream.binder.kafka.properties.JaasLoginModuleConfiguration"
  name: "spring.cloud.stream.kafka.binder.jaas"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.stream.kafka.binder.min-partition-count"
  defaultValue: 1
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Arbitrary kafka producer properties."
  shortDescription: "Arbitrary kafka producer properties."
  name: "spring.cloud.stream.kafka.binder.producer-properties"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.Short"
  name: "spring.cloud.stream.kafka.binder.replication-factor"
  defaultValue: -1
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
  type: "java.lang.String"
  name: "spring.cloud.stream.kafka.binder.required-acks"
  defaultValue: "1"
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.batch-timeout"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.buffer-size"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "org.springframework.cloud.stream.binder.kafka.properties.KafkaProducerProperties$CompressionType"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.compression-type"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.configuration"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.error-channel-enabled"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "org.springframework.cloud.stream.binder.HeaderMode"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.header-mode"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.String[]"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.header-patterns"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "org.springframework.expression.Expression"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.message-key-expression"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.partition-count"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "org.springframework.expression.Expression"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.partition-key-expression"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.String"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.partition-key-extractor-name"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "org.springframework.expression.Expression"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.partition-selector-expression"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.String"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.partition-selector-name"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.String[]"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.required-groups"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.sync"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "org.springframework.cloud.stream.binder.kafka.properties.KafkaTopicProperties"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.topic"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$CombinedProducerProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.stream.kafka.binder.transaction.producer.use-native-encoding"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties$Transaction"
  type: "java.lang.String"
  name: "spring.cloud.stream.kafka.binder.transaction.transaction-id-prefix"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.kafka.properties.KafkaExtendedBindingProperties"
  type: "java.util.Map<java.lang.String,org.springframework.cloud.stream.binder.kafka.properties.KafkaBindingProperties>"
  name: "spring.cloud.stream.kafka.bindings"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.micrometer.ApplicationMetricsProperties"
  type: "java.util.Map<java.lang.String,java.lang.Object>"
  description: "List of properties that are going to be appended to each message.\
    \ This gets populate by onApplicationEvent, once the context refreshes to avoid\
    \ overhead of doing per message basis."
  shortDescription: "List of properties that are going to be appended to each message."
  name: "spring.cloud.stream.metrics.export-properties"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.micrometer.ApplicationMetricsProperties"
  type: "java.lang.String"
  description: "The name of the metric being emitted. Should be an unique value per\
    \ application. Defaults to: ${spring.application.name:${vcap.application.name:${spring.config.name:application}}}."
  shortDescription: "The name of the metric being emitted."
  name: "spring.cloud.stream.metrics.key"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.micrometer.ApplicationMetricsProperties"
  type: "java.lang.String"
  description: "Pattern to control the 'meters' one wants to capture. By default all\
    \ 'meters' will be captured. For example, 'spring.integration.*' will only capture\
    \ metric information for meters whose name starts with 'spring.integration'."
  shortDescription: "Pattern to control the 'meters' one wants to capture."
  name: "spring.cloud.stream.metrics.meter-filter"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.micrometer.ApplicationMetricsProperties"
  type: "java.lang.String[]"
  description: "Application properties that should be added to the metrics payload\
    \ For example: `spring.application**`."
  shortDescription: "Application properties that should be added to the metrics payload\
    \ For example: `spring.application**`."
  name: "spring.cloud.stream.metrics.properties"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.micrometer.ApplicationMetricsProperties"
  type: "java.time.Duration"
  description: "Interval expressed as Duration for scheduling metrics snapshots publishing.\
    \ Defaults to 60 seconds"
  shortDescription: "Interval expressed as Duration for scheduling metrics snapshots\
    \ publishing."
  name: "spring.cloud.stream.metrics.schedule-interval"
  defaultValue: "60s"
- type: "java.lang.Boolean"
  description: "This property is only applicable when the cloud profile is active\
    \ and Spring Cloud Connectors are provided with the application. If the property\
    \ is false (the default), the binder detects a suitable bound service (for example,\
    \ a RabbitMQ service bound in Cloud Foundry for the RabbitMQ binder) and uses\
    \ it for creating connections (usually through Spring Cloud Connectors). When\
    \ set to true, this property instructs binders to completely ignore the bound\
    \ services and rely on Spring Boot properties (for example, relying on the spring.rabbitmq.*\
    \ properties provided in the environment for the RabbitMQ binder). The typical\
    \ usage of this property is to be nested in a customized environment when connecting\
    \ to multiple systems."
  shortDescription: "This property is only applicable when the cloud profile is active\
    \ and Spring Cloud Connectors are provided with the application."
  name: "spring.cloud.stream.override-cloud-connectors"
  defaultValue: "false"
- type: "java.lang.String"
  description: "A semi-colon delimited list of binding names of pollable sources.\
    \ Binding names follow the same naming convention as functions. For example, name\
    \ '...pollable-source=foobar' will be accessible as 'foobar-iin-0'' binding"
  shortDescription: "A semi-colon delimited list of binding names of pollable sources."
  name: "spring.cloud.stream.pollable-source"
  defaultValue: "none"
- owner: "org.springframework.cloud.stream.config.DefaultPollerProperties"
  type: "java.lang.String"
  description: "Cron expression value for the Cron Trigger."
  shortDescription: "Cron expression value for the Cron Trigger."
  name: "spring.cloud.stream.poller.cron"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.config.DefaultPollerProperties"
  type: "java.lang.Long"
  description: "Fixed delay for default poller."
  shortDescription: "Fixed delay for default poller."
  name: "spring.cloud.stream.poller.fixed-delay"
  defaultValue: 1000
- owner: "org.springframework.cloud.stream.config.DefaultPollerProperties"
  type: "java.lang.Integer"
  description: "Initial delay for periodic triggers."
  shortDescription: "Initial delay for periodic triggers."
  name: "spring.cloud.stream.poller.initial-delay"
  defaultValue: 0
- owner: "org.springframework.cloud.stream.config.DefaultPollerProperties"
  type: "java.lang.Long"
  description: "Maximum messages per poll for the default poller."
  shortDescription: "Maximum messages per poll for the default poller."
  name: "spring.cloud.stream.poller.max-messages-per-poll"
  defaultValue: 1
- owner: "org.springframework.cloud.stream.config.DefaultPollerProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "The TimeUnit to apply to delay values."
  shortDescription: "The TimeUnit to apply to delay values."
  name: "spring.cloud.stream.poller.time-unit"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.rabbit.properties.RabbitBinderConfigurationProperties"
  type: "java.lang.String[]"
  description: "Urls for management plugins; only needed for queue affinity."
  shortDescription: "Urls for management plugins; only needed for queue affinity."
  name: "spring.cloud.stream.rabbit.binder.admin-addresses"
  defaultValue: []
- owner: "org.springframework.cloud.stream.binder.rabbit.properties.RabbitBinderConfigurationProperties"
  type: "java.lang.String[]"
  name: "spring.cloud.stream.rabbit.binder.admin-adresses"
  defaultValue: ""
  deprecationLevel: "WARNING"
- owner: "org.springframework.cloud.stream.binder.rabbit.properties.RabbitBinderConfigurationProperties"
  type: "java.lang.Integer"
  description: "Compression level for compressed bindings; see 'java.util.zip.Deflator'."
  shortDescription: "Compression level for compressed bindings; see 'java.util.zip.Deflator'."
  name: "spring.cloud.stream.rabbit.binder.compression-level"
  defaultValue: 0
- owner: "org.springframework.cloud.stream.binder.rabbit.properties.RabbitBinderConfigurationProperties"
  type: "java.lang.String"
  description: "Prefix for connection names from this binder."
  shortDescription: "Prefix for connection names from this binder."
  name: "spring.cloud.stream.rabbit.binder.connection-name-prefix"
  defaultValue: ""
- owner: "org.springframework.cloud.stream.binder.rabbit.properties.RabbitBinderConfigurationProperties"
  type: "java.lang.String[]"
  description: "Cluster member node names; only needed for queue affinity."
  shortDescription: "Cluster member node names; only needed for queue affinity."
  name: "spring.cloud.stream.rabbit.binder.nodes"
  defaultValue: []
- owner: "org.springframework.cloud.stream.binder.rabbit.properties.RabbitExtendedBindingProperties"
  type: "java.util.Map<java.lang.String,org.springframework.cloud.stream.binder.rabbit.properties.RabbitBindingProperties>"
  name: "spring.cloud.stream.rabbit.bindings"
  defaultValue: ""
- type: "java.lang.String"
  description: "The name of the header used to determine the name of the output destination"
  shortDescription: "The name of the header used to determine the name of the output\
    \ destination"
  name: "spring.cloud.stream.sendto.destination"
  defaultValue: "none"
- owner: "org.springframework.cloud.stream.config.BindingServiceProperties"
  type: "java.lang.String"
  description: "A colon delimited string representing the names of the sources based\
    \ on which source bindings will be created.  This is primarily to support cases\
    \ where source binding may be required without providing a corresponding Supplier.\
    \  (e.g., for cases where the actual source of data is outside of scope of spring-cloud-stream\
    \ - HTTP -> Stream)"
  shortDescription: "A colon delimited string representing the names of the sources\
    \ based on which source bindings will be created."
  name: "spring.cloud.stream.source"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enables creation of Spring Cloud utility beans."
  shortDescription: "Enables creation of Spring Cloud utility beans."
  name: "spring.cloud.util.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.vault.config.VaultProperties$AppIdProperties"
  type: "java.lang.String"
  description: "Mount path of the AppId authentication backend."
  shortDescription: "Mount path of the AppId authentication backend."
  name: "spring.cloud.vault.app-id.app-id-path"
  defaultValue: "app-id"
- owner: "org.springframework.cloud.vault.config.VaultProperties$AppIdProperties"
  type: "java.lang.String"
  description: "Network interface hint for the \"MAC_ADDRESS\" UserId mechanism."
  shortDescription: "Network interface hint for the \"MAC_ADDRESS\" UserId mechanism."
  name: "spring.cloud.vault.app-id.network-interface"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AppIdProperties"
  type: "java.lang.String"
  description: "UserId mechanism. Can be either \"MAC_ADDRESS\", \"IP_ADDRESS\", a\
    \ string or a class name."
  shortDescription: "UserId mechanism."
  name: "spring.cloud.vault.app-id.user-id"
  defaultValue: "MAC_ADDRESS"
- owner: "org.springframework.cloud.vault.config.VaultProperties$AppRoleProperties"
  type: "java.lang.String"
  description: "Mount path of the AppRole authentication backend."
  shortDescription: "Mount path of the AppRole authentication backend."
  name: "spring.cloud.vault.app-role.app-role-path"
  defaultValue: "approle"
- owner: "org.springframework.cloud.vault.config.VaultProperties$AppRoleProperties"
  type: "java.lang.String"
  description: "Name of the role, optional, used for pull-mode."
  shortDescription: "Name of the role, optional, used for pull-mode."
  name: "spring.cloud.vault.app-role.role"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AppRoleProperties"
  type: "java.lang.String"
  description: "The RoleId."
  shortDescription: "The RoleId."
  name: "spring.cloud.vault.app-role.role-id"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AppRoleProperties"
  type: "java.lang.String"
  description: "The SecretId."
  shortDescription: "The SecretId."
  name: "spring.cloud.vault.app-role.secret-id"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.String"
  description: "Application name for AppId authentication."
  shortDescription: "Application name for AppId authentication."
  name: "spring.cloud.vault.application-name"
  defaultValue: "application"
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "org.springframework.cloud.vault.config.VaultProperties$AuthenticationMethod"
  name: "spring.cloud.vault.authentication"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AwsEc2Properties"
  type: "java.lang.String"
  description: "Mount path of the AWS-EC2 authentication backend."
  shortDescription: "Mount path of the AWS-EC2 authentication backend."
  name: "spring.cloud.vault.aws-ec2.aws-ec2-path"
  defaultValue: "aws-ec2"
- owner: "org.springframework.cloud.vault.config.VaultProperties$AwsEc2Properties"
  type: "java.net.URI"
  description: "URL of the AWS-EC2 PKCS7 identity document."
  shortDescription: "URL of the AWS-EC2 PKCS7 identity document."
  name: "spring.cloud.vault.aws-ec2.identity-document"
  defaultValue: "http://169.254.169.254/latest/dynamic/instance-identity/pkcs7"
- owner: "org.springframework.cloud.vault.config.VaultProperties$AwsEc2Properties"
  type: "java.lang.String"
  description: "Nonce used for AWS-EC2 authentication. An empty nonce defaults to\
    \ nonce generation."
  shortDescription: "Nonce used for AWS-EC2 authentication."
  name: "spring.cloud.vault.aws-ec2.nonce"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AwsEc2Properties"
  type: "java.lang.String"
  description: "Name of the role, optional."
  shortDescription: "Name of the role, optional."
  name: "spring.cloud.vault.aws-ec2.role"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AwsIamProperties"
  type: "java.lang.String"
  description: "Mount path of the AWS authentication backend."
  shortDescription: "Mount path of the AWS authentication backend."
  name: "spring.cloud.vault.aws-iam.aws-path"
  defaultValue: "aws"
- owner: "org.springframework.cloud.vault.config.VaultProperties$AwsIamProperties"
  type: "java.net.URI"
  description: "STS server URI. @since 2.2"
  shortDescription: "STS server URI."
  name: "spring.cloud.vault.aws-iam.endpoint-uri"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AwsIamProperties"
  type: "java.lang.String"
  description: "Name of the role, optional. Defaults to the friendly IAM name if not\
    \ set."
  shortDescription: "Name of the role, optional."
  name: "spring.cloud.vault.aws-iam.role"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AwsIamProperties"
  type: "java.lang.String"
  description: "Name of the server used to set {@code X-Vault-AWS-IAM-Server-ID} header\
    \ in the headers of login requests."
  shortDescription: "Name of the server used to set {@code X-Vault-AWS-IAM-Server-ID}\
    \ header in the headers of login requests."
  name: "spring.cloud.vault.aws-iam.server-name"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AzureMsiProperties"
  type: "java.lang.String"
  description: "Mount path of the Azure MSI authentication backend."
  shortDescription: "Mount path of the Azure MSI authentication backend."
  name: "spring.cloud.vault.azure-msi.azure-path"
  defaultValue: "azure"
- owner: "org.springframework.cloud.vault.config.VaultProperties$AzureMsiProperties"
  type: "java.net.URI"
  description: "Identity token service URI. @since 3.0"
  shortDescription: "Identity token service URI."
  name: "spring.cloud.vault.azure-msi.identity-token-service"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AzureMsiProperties"
  type: "java.net.URI"
  description: "Instance metadata service URI. @since 3.0"
  shortDescription: "Instance metadata service URI."
  name: "spring.cloud.vault.azure-msi.metadata-service"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$AzureMsiProperties"
  type: "java.lang.String"
  description: "Name of the role."
  shortDescription: "Name of the role."
  name: "spring.cloud.vault.azure-msi.role"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$ConfigLifecycle"
  type: "java.lang.Boolean"
  description: "Enable lifecycle management."
  shortDescription: "Enable lifecycle management."
  name: "spring.cloud.vault.config.lifecycle.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.vault.config.VaultProperties$ConfigLifecycle"
  type: "java.time.Duration"
  description: "The expiry threshold. {@link Lease} is renewed the given {@link Duration}\
    \ before it expires. @since 2.2"
  shortDescription: "The expiry threshold."
  name: "spring.cloud.vault.config.lifecycle.expiry-threshold"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$ConfigLifecycle"
  type: "org.springframework.vault.core.lease.LeaseEndpoints"
  description: "Set the {@link LeaseEndpoints} to delegate renewal/revocation calls\
    \ to. {@link LeaseEndpoints} encapsulates differences between Vault versions that\
    \ affect the location of renewal/revocation endpoints. Can be {@link LeaseEndpoints#SysLeases}\
    \ for version 0.8 or above of Vault or {@link LeaseEndpoints#Legacy} for older\
    \ versions (the default). @since 2.2"
  shortDescription: "Set the {@link LeaseEndpoints} to delegate renewal/revocation\
    \ calls to."
  name: "spring.cloud.vault.config.lifecycle.lease-endpoints"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$ConfigLifecycle"
  type: "java.time.Duration"
  description: "The time period that is at least required before renewing a lease.\
    \ @since 2.2"
  shortDescription: "The time period that is at least required before renewing a lease."
  name: "spring.cloud.vault.config.lifecycle.min-renewal"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$Config"
  type: "java.lang.Integer"
  description: "Used to set a {@link org.springframework.core.env.PropertySource}\
    \ priority. This is useful to use Vault as an override on other property sources.\
    \ @see org.springframework.core.PriorityOrdered"
  shortDescription: "Used to set a {@link org.springframework.core.env.PropertySource}\
    \ priority."
  name: "spring.cloud.vault.config.order"
  defaultValue: 0
  deprecationLevel: "WARNING"
  deprecationReason: "Only required for deprecated Bootstrap Context usage"
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.Integer"
  description: "Connection timeout."
  shortDescription: "Connection timeout."
  name: "spring.cloud.vault.connection-timeout"
  defaultValue: 5000
- owner: "org.springframework.cloud.vault.config.VaultProperties$Discovery"
  type: "java.lang.Boolean"
  description: "Flag to indicate that Vault server discovery is enabled (vault server\
    \ URL will be looked up via discovery)."
  shortDescription: "Flag to indicate that Vault server discovery is enabled (vault\
    \ server URL will be looked up via discovery)."
  name: "spring.cloud.vault.discovery.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.vault.config.VaultProperties$Discovery"
  type: "java.lang.String"
  description: "Service id to locate Vault."
  shortDescription: "Service id to locate Vault."
  name: "spring.cloud.vault.discovery.service-id"
  defaultValue: "vault"
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.Boolean"
  description: "Enable Vault config server."
  shortDescription: "Enable Vault config server."
  name: "spring.cloud.vault.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.Boolean"
  description: "Fail fast if data cannot be obtained from Vault."
  shortDescription: "Fail fast if data cannot be obtained from Vault."
  name: "spring.cloud.vault.fail-fast"
  defaultValue: false
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpGceProperties"
  type: "java.lang.String"
  description: "Mount path of the Kubernetes authentication backend."
  shortDescription: "Mount path of the Kubernetes authentication backend."
  name: "spring.cloud.vault.gcp-gce.gcp-path"
  defaultValue: "gcp"
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpGceProperties"
  type: "java.lang.String"
  description: "Name of the role against which the login is being attempted."
  shortDescription: "Name of the role against which the login is being attempted."
  name: "spring.cloud.vault.gcp-gce.role"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpGceProperties"
  type: "java.lang.String"
  description: "Optional service account id. Using the default id if left unconfigured."
  shortDescription: "Optional service account id."
  name: "spring.cloud.vault.gcp-gce.service-account"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpCredentials"
  type: "java.lang.String"
  description: "The base64 encoded contents of an OAuth2 account private key in JSON\
    \ format."
  shortDescription: "The base64 encoded contents of an OAuth2 account private key\
    \ in JSON format."
  name: "spring.cloud.vault.gcp-iam.credentials.encoded-key"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpCredentials"
  type: "org.springframework.core.io.Resource"
  description: "Location of the OAuth2 credentials private key. <p> Since this is\
    \ a Resource, the private key can be in a multitude of locations, such as a local\
    \ file system, classpath, URL, etc."
  shortDescription: "Location of the OAuth2 credentials private key."
  name: "spring.cloud.vault.gcp-iam.credentials.location"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpIamProperties"
  type: "java.lang.String"
  description: "Mount path of the Kubernetes authentication backend."
  shortDescription: "Mount path of the Kubernetes authentication backend."
  name: "spring.cloud.vault.gcp-iam.gcp-path"
  defaultValue: "gcp"
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpIamProperties"
  type: "java.time.Duration"
  description: "Validity of the JWT token."
  shortDescription: "Validity of the JWT token."
  name: "spring.cloud.vault.gcp-iam.jwt-validity"
  defaultValue: "15m"
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpIamProperties"
  type: "java.lang.String"
  description: "Overrides the GCP project Id."
  shortDescription: "Overrides the GCP project Id."
  name: "spring.cloud.vault.gcp-iam.project-id"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpIamProperties"
  type: "java.lang.String"
  description: "Name of the role against which the login is being attempted."
  shortDescription: "Name of the role against which the login is being attempted."
  name: "spring.cloud.vault.gcp-iam.role"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$GcpIamProperties"
  type: "java.lang.String"
  description: "Overrides the GCP service account Id."
  shortDescription: "Overrides the GCP service account Id."
  name: "spring.cloud.vault.gcp-iam.service-account-id"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.String"
  description: "Vault server host."
  shortDescription: "Vault server host."
  name: "spring.cloud.vault.host"
  defaultValue: "localhost"
- owner: "org.springframework.cloud.vault.config.VaultProperties$KubernetesProperties"
  type: "java.lang.String"
  description: "Mount path of the Kubernetes authentication backend."
  shortDescription: "Mount path of the Kubernetes authentication backend."
  name: "spring.cloud.vault.kubernetes.kubernetes-path"
  defaultValue: "kubernetes"
- owner: "org.springframework.cloud.vault.config.VaultProperties$KubernetesProperties"
  type: "java.lang.String"
  description: "Name of the role against which the login is being attempted."
  shortDescription: "Name of the role against which the login is being attempted."
  name: "spring.cloud.vault.kubernetes.role"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$KubernetesProperties"
  type: "java.lang.String"
  description: "Path to the service account token file."
  shortDescription: "Path to the service account token file."
  name: "spring.cloud.vault.kubernetes.service-account-token-file"
  defaultValue: "/var/run/secrets/kubernetes.io/serviceaccount/token"
- owner: "org.springframework.cloud.vault.config.VaultKeyValueBackendProperties"
  type: "java.lang.String"
  description: "Application name to be used for the context."
  shortDescription: "Application name to be used for the context."
  name: "spring.cloud.vault.kv.application-name"
  defaultValue: "application"
- owner: "org.springframework.cloud.vault.config.VaultKeyValueBackendProperties"
  type: "java.lang.String"
  description: "Name of the default backend."
  shortDescription: "Name of the default backend."
  name: "spring.cloud.vault.kv.backend"
  defaultValue: "secret"
- owner: "org.springframework.cloud.vault.config.VaultKeyValueBackendProperties"
  type: "java.lang.Integer"
  description: "Key-Value backend version. Currently supported versions are: <ul>\
    \ <li>Version 1 (unversioned key-value backend).</li> <li>Version 2 (versioned\
    \ key-value backend).</li> </ul>"
  shortDescription: "Key-Value backend version."
  name: "spring.cloud.vault.kv.backend-version"
  defaultValue: 2
  deprecationLevel: "WARNING"
  deprecationReason: "Backend version no longer required."
- owner: "org.springframework.cloud.vault.config.VaultKeyValueBackendProperties"
  type: "java.lang.String"
  description: "Name of the default context."
  shortDescription: "Name of the default context."
  name: "spring.cloud.vault.kv.default-context"
  defaultValue: "application"
- owner: "org.springframework.cloud.vault.config.VaultKeyValueBackendProperties"
  type: "java.lang.Boolean"
  description: "Enable the kev-value backend."
  shortDescription: "Enable the kev-value backend."
  name: "spring.cloud.vault.kv.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.vault.config.VaultKeyValueBackendProperties"
  type: "java.lang.String"
  description: "Profile-separator to combine application name and profile."
  shortDescription: "Profile-separator to combine application name and profile."
  name: "spring.cloud.vault.kv.profile-separator"
  defaultValue: "/"
- owner: "org.springframework.cloud.vault.config.VaultKeyValueBackendProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of active profiles. @since 3.0"
  shortDescription: "List of active profiles."
  name: "spring.cloud.vault.kv.profiles"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.String"
  description: "Vault namespace (requires Vault Enterprise)."
  shortDescription: "Vault namespace (requires Vault Enterprise)."
  name: "spring.cloud.vault.namespace"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$PcfProperties"
  type: "org.springframework.core.io.Resource"
  description: "Path to the instance certificate (PEM). Defaults to {@code CF_INSTANCE_CERT}\
    \ env variable."
  shortDescription: "Path to the instance certificate (PEM)."
  name: "spring.cloud.vault.pcf.instance-certificate"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$PcfProperties"
  type: "org.springframework.core.io.Resource"
  description: "Path to the instance key (PEM). Defaults to {@code CF_INSTANCE_KEY}\
    \ env variable."
  shortDescription: "Path to the instance key (PEM)."
  name: "spring.cloud.vault.pcf.instance-key"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$PcfProperties"
  type: "java.lang.String"
  description: "Mount path of the Kubernetes authentication backend."
  shortDescription: "Mount path of the Kubernetes authentication backend."
  name: "spring.cloud.vault.pcf.pcf-path"
  defaultValue: "pcf"
- owner: "org.springframework.cloud.vault.config.VaultProperties$PcfProperties"
  type: "java.lang.String"
  description: "Name of the role against which the login is being attempted."
  shortDescription: "Name of the role against which the login is being attempted."
  name: "spring.cloud.vault.pcf.role"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.Integer"
  description: "Vault server port."
  shortDescription: "Vault server port."
  name: "spring.cloud.vault.port"
  defaultValue: 8200
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.Integer"
  description: "Read timeout."
  shortDescription: "Read timeout."
  name: "spring.cloud.vault.read-timeout"
  defaultValue: 15000
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.String"
  description: "Protocol scheme. Can be either \"http\" or \"https\"."
  shortDescription: "Protocol scheme."
  name: "spring.cloud.vault.scheme"
  defaultValue: "https"
- owner: "org.springframework.cloud.vault.config.VaultProperties$SessionLifecycle"
  type: "java.lang.Boolean"
  description: "Enable session lifecycle management."
  shortDescription: "Enable session lifecycle management."
  name: "spring.cloud.vault.session.lifecycle.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.vault.config.VaultProperties$SessionLifecycle"
  type: "java.time.Duration"
  description: "The expiry threshold for a {@link LoginToken}. The threshold represents\
    \ a minimum TTL duration to consider a login token as valid. Tokens with a shorter\
    \ TTL are considered expired and are not used anymore. Should be greater than\
    \ {@code refreshBeforeExpiry} to prevent token expiry."
  shortDescription: "The expiry threshold for a {@link LoginToken}."
  name: "spring.cloud.vault.session.lifecycle.expiry-threshold"
  defaultValue: "7s"
- owner: "org.springframework.cloud.vault.config.VaultProperties$SessionLifecycle"
  type: "java.time.Duration"
  description: "The time period that is at least required before renewing the {@link\
    \ LoginToken}."
  shortDescription: "The time period that is at least required before renewing the\
    \ {@link LoginToken}."
  name: "spring.cloud.vault.session.lifecycle.refresh-before-expiry"
  defaultValue: "5s"
- owner: "org.springframework.cloud.vault.config.VaultProperties$Ssl"
  type: "java.lang.String"
  description: "Mount path of the TLS cert authentication backend."
  shortDescription: "Mount path of the TLS cert authentication backend."
  name: "spring.cloud.vault.ssl.cert-auth-path"
  defaultValue: "cert"
- owner: "org.springframework.cloud.vault.config.VaultProperties$Ssl"
  type: "java.util.List<java.lang.String>"
  description: "List of enabled SSL/TLS cipher suites. @since 3.0.2"
  shortDescription: "List of enabled SSL/TLS cipher suites."
  name: "spring.cloud.vault.ssl.enabled-cipher-suites"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$Ssl"
  type: "java.util.List<java.lang.String>"
  description: "List of enabled SSL/TLS protocol. @since 3.0.2"
  shortDescription: "List of enabled SSL/TLS protocol."
  name: "spring.cloud.vault.ssl.enabled-protocols"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Trust store that holds certificates and private keys."
  shortDescription: "Trust store that holds certificates and private keys."
  name: "spring.cloud.vault.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  shortDescription: "Password used to access the key store."
  name: "spring.cloud.vault.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store. @since 3.0"
  shortDescription: "Type of the key store."
  name: "spring.cloud.vault.ssl.key-store-type"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Trust store that holds SSL certificates."
  shortDescription: "Trust store that holds SSL certificates."
  name: "spring.cloud.vault.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the trust store."
  shortDescription: "Password used to access the trust store."
  name: "spring.cloud.vault.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store. @since 3.0"
  shortDescription: "Type of the trust store."
  name: "spring.cloud.vault.ssl.trust-store-type"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.String"
  description: "Static vault token. Required if {@link #authentication} is {@code\
    \ TOKEN}."
  shortDescription: "Static vault token."
  name: "spring.cloud.vault.token"
  defaultValue: ""
- owner: "org.springframework.cloud.vault.config.VaultProperties"
  type: "java.lang.String"
  description: "Vault URI. Can be set with scheme, host and port."
  shortDescription: "Vault URI."
  name: "spring.cloud.vault.uri"
  defaultValue: ""
- owner: "org.springframework.cloud.zookeeper.ZookeeperProperties"
  type: "java.lang.Integer"
  description: "Initial amount of time to wait between retries."
  shortDescription: "Initial amount of time to wait between retries."
  name: "spring.cloud.zookeeper.base-sleep-time-ms"
  defaultValue: 50
- owner: "org.springframework.cloud.zookeeper.ZookeeperProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "The unit of time related to blocking on connection to Zookeeper."
  shortDescription: "The unit of time related to blocking on connection to Zookeeper."
  name: "spring.cloud.zookeeper.block-until-connected-unit"
  defaultValue: ""
- owner: "org.springframework.cloud.zookeeper.ZookeeperProperties"
  type: "java.lang.Integer"
  description: "Wait time to block on connection to Zookeeper."
  shortDescription: "Wait time to block on connection to Zookeeper."
  name: "spring.cloud.zookeeper.block-until-connected-wait"
  defaultValue: 10
- owner: "org.springframework.cloud.zookeeper.config.ZookeeperConfigProperties"
  type: "java.lang.String"
  description: "The name of the default context."
  shortDescription: "The name of the default context."
  name: "spring.cloud.zookeeper.config.default-context"
  defaultValue: "application"
- owner: "org.springframework.cloud.zookeeper.config.ZookeeperConfigProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.zookeeper.config.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.zookeeper.config.ZookeeperConfigProperties"
  type: "java.lang.Boolean"
  description: "Throw exceptions during config lookup if true, otherwise, log warnings."
  shortDescription: "Throw exceptions during config lookup if true, otherwise, log\
    \ warnings."
  name: "spring.cloud.zookeeper.config.fail-fast"
  defaultValue: true
- owner: "org.springframework.cloud.zookeeper.config.ZookeeperConfigProperties"
  type: "java.lang.String"
  description: "Alternative to spring.application.name to use in looking up values\
    \ in zookeeper."
  shortDescription: "Alternative to spring.application.name to use in looking up values\
    \ in zookeeper."
  name: "spring.cloud.zookeeper.config.name"
  defaultValue: ""
- owner: "org.springframework.cloud.zookeeper.config.ZookeeperConfigProperties"
  type: "java.lang.String"
  description: "Separator for profile appended to the application name."
  shortDescription: "Separator for profile appended to the application name."
  name: "spring.cloud.zookeeper.config.profile-separator"
  defaultValue: ","
- owner: "org.springframework.cloud.zookeeper.config.ZookeeperConfigProperties"
  type: "java.lang.String"
  description: "Root folder where the configuration for Zookeeper is kept."
  shortDescription: "Root folder where the configuration for Zookeeper is kept."
  name: "spring.cloud.zookeeper.config.root"
  defaultValue: "config"
- owner: "org.springframework.cloud.zookeeper.ZookeeperProperties"
  type: "java.lang.String"
  description: "Connection string to the Zookeeper cluster."
  shortDescription: "Connection string to the Zookeeper cluster."
  name: "spring.cloud.zookeeper.connect-string"
  defaultValue: "localhost:2181"
- owner: "org.springframework.cloud.zookeeper.ZookeeperProperties"
  type: "java.time.Duration"
  description: "The configured connection timeout in milliseconds."
  shortDescription: "The configured connection timeout in milliseconds."
  name: "spring.cloud.zookeeper.connection-timeout"
  defaultValue: ""
- owner: "org.springframework.cloud.zookeeper.ZookeeperProperties"
  type: "java.lang.Boolean"
  description: "Is Zookeeper enabled."
  shortDescription: "Is Zookeeper enabled."
  name: "spring.cloud.zookeeper.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.zookeeper.ZookeeperProperties"
  type: "java.lang.Integer"
  description: "Max number of times to retry."
  shortDescription: "Max number of times to retry."
  name: "spring.cloud.zookeeper.max-retries"
  defaultValue: 10
- owner: "org.springframework.cloud.zookeeper.ZookeeperProperties"
  type: "java.lang.Integer"
  description: "Max time in ms to sleep on each retry."
  shortDescription: "Max time in ms to sleep on each retry."
  name: "spring.cloud.zookeeper.max-sleep-ms"
  defaultValue: 500
- owner: "org.springframework.cloud.zookeeper.ZookeeperProperties"
  type: "java.time.Duration"
  description: "The configured/negotiated session timeout in milliseconds. Please\
    \ refer to <a href='https://cwiki.apache.org/confluence/display/CURATOR/TN14'>Curator's\
    \ Tech Note 14</a> to understand how Curator implements connection sessions. @see\
    \ <a href='https://cwiki.apache.org/confluence/display/CURATOR/TN14'>Curator's\
    \ Tech Note 14</a>"
  shortDescription: "The configured/negotiated session timeout in milliseconds."
  name: "spring.cloud.zookeeper.session-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.codec.CodecProperties"
  type: "java.lang.Boolean"
  description: "Whether to log form data at DEBUG level, and headers at TRACE level."
  shortDescription: "Whether to log form data at DEBUG level, and headers at TRACE\
    \ level."
  name: "spring.codec.log-request-details"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.codec.CodecProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Limit on the number of bytes that can be buffered whenever the input\
    \ stream needs to be aggregated. This applies only to the auto-configured WebFlux\
    \ server and WebClient instances. By default this is not set, in which case individual\
    \ codec defaults apply. Most codecs are limited to 256K by default."
  shortDescription: "Limit on the number of bytes that can be buffered whenever the\
    \ input stream needs to be aggregated."
  name: "spring.codec.max-in-memory-size"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigDataProperties"
  type: "org.springframework.boot.cloud.CloudPlatform"
  description: "Required cloud platform for the document to be included."
  shortDescription: "Required cloud platform for the document to be included."
  name: "spring.config.activate.on-cloud-platform"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigDataProperties"
  type: "java.lang.String[]"
  description: "Profile expressions that should match for the document to be included."
  shortDescription: "Profile expressions that should match for the document to be\
    \ included."
  name: "spring.config.activate.on-profile"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.lang.String"
  description: "Config file locations used in addition to the defaults."
  shortDescription: "Config file locations used in addition to the defaults."
  name: "spring.config.additional-location"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigDataProperties"
  type: "java.util.List<java.lang.String>"
  description: "Import additional config data."
  shortDescription: "Import additional config data."
  name: "spring.config.import"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.lang.String"
  description: "Config file locations that replace the defaults."
  shortDescription: "Config file locations that replace the defaults."
  name: "spring.config.location"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.lang.String"
  description: "Config file name."
  shortDescription: "Config file name."
  name: "spring.config.name"
  defaultValue: "application"
- type: "java.lang.Boolean"
  description: "Whether to enable configuration data processing legacy mode."
  shortDescription: "Whether to enable configuration data processing legacy mode."
  name: "spring.config.use-legacy-processing"
  defaultValue: false
- type: "java.util.List<java.lang.String>"
  description: "Couchbase nodes (host or IP address) to bootstrap from."
  shortDescription: "Couchbase nodes (host or IP address) to bootstrap from."
  name: "spring.couchbase.bootstrap-hosts"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.connection-string"
- type: "java.lang.String"
  description: "Name of the bucket to connect to."
  shortDescription: "Name of the bucket to connect to."
  name: "spring.couchbase.bucket.name"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "A bucket is no longer auto-configured."
- type: "java.lang.String"
  description: "Password of the bucket."
  shortDescription: "Password of the bucket."
  name: "spring.couchbase.bucket.password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "A bucket is no longer auto-configured."
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties"
  type: "java.lang.String"
  description: "Connection string used to locate the Couchbase cluster."
  shortDescription: "Connection string used to locate the Couchbase cluster."
  name: "spring.couchbase.connection-string"
  defaultValue: ""
- type: "java.lang.Integer"
  description: "Port for the HTTP bootstrap."
  shortDescription: "Port for the HTTP bootstrap."
  name: "spring.couchbase.env.bootstrap.http-direct-port"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Port for the HTTPS bootstrap."
  shortDescription: "Port for the HTTPS bootstrap."
  name: "spring.couchbase.env.bootstrap.http-ssl-port"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Number of sockets per node against the key/value service."
  shortDescription: "Number of sockets per node against the key/value service."
  name: "spring.couchbase.env.endpoints.key-value"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Number of sockets per node against the query (N1QL) service."
  shortDescription: "Number of sockets per node against the query (N1QL) service."
  name: "spring.couchbase.env.endpoints.query"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Maximum number of sockets per node."
  shortDescription: "Maximum number of sockets per node."
  name: "spring.couchbase.env.endpoints.queryservice.max-endpoints"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.env.io.max-endpoints"
- type: "java.lang.Integer"
  description: "Minimum number of sockets per node."
  shortDescription: "Minimum number of sockets per node."
  name: "spring.couchbase.env.endpoints.queryservice.min-endpoints"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.env.io.min-endpoints"
- type: "java.lang.Integer"
  description: "Number of sockets per node against the view service."
  shortDescription: "Number of sockets per node against the view service."
  name: "spring.couchbase.env.endpoints.view"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Maximum number of sockets per node."
  shortDescription: "Maximum number of sockets per node."
  name: "spring.couchbase.env.endpoints.viewservice.max-endpoints"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.env.io.max-endpoints"
- type: "java.lang.Integer"
  description: "Minimum number of sockets per node."
  shortDescription: "Minimum number of sockets per node."
  name: "spring.couchbase.env.endpoints.viewservice.min-endpoints"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.env.io.min-endpoints"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Io"
  type: "java.time.Duration"
  description: "Length of time an HTTP connection may remain idle before it is closed\
    \ and removed from the pool."
  shortDescription: "Length of time an HTTP connection may remain idle before it is\
    \ closed and removed from the pool."
  name: "spring.couchbase.env.io.idle-http-connection-timeout"
  defaultValue: "4500ms"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Io"
  type: "java.lang.Integer"
  description: "Maximum number of sockets per node."
  shortDescription: "Maximum number of sockets per node."
  name: "spring.couchbase.env.io.max-endpoints"
  defaultValue: 12
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Io"
  type: "java.lang.Integer"
  description: "Minimum number of sockets per node."
  shortDescription: "Minimum number of sockets per node."
  name: "spring.couchbase.env.io.min-endpoints"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support. Enabled automatically if a \"keyStore\"\
    \ is provided unless specified otherwise."
  shortDescription: "Whether to enable SSL support."
  name: "spring.couchbase.env.ssl.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl"
  type: "java.lang.String"
  description: "Path to the JVM key store that holds the certificates."
  shortDescription: "Path to the JVM key store that holds the certificates."
  name: "spring.couchbase.env.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  shortDescription: "Password used to access the key store."
  name: "spring.couchbase.env.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for the analytics service."
  shortDescription: "Timeout for the analytics service."
  name: "spring.couchbase.env.timeouts.analytics"
  defaultValue: "75s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Bucket connect timeout."
  shortDescription: "Bucket connect timeout."
  name: "spring.couchbase.env.timeouts.connect"
  defaultValue: "10s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Bucket disconnect timeout."
  shortDescription: "Bucket disconnect timeout."
  name: "spring.couchbase.env.timeouts.disconnect"
  defaultValue: "10s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for operations on a specific key-value."
  shortDescription: "Timeout for operations on a specific key-value."
  name: "spring.couchbase.env.timeouts.key-value"
  defaultValue: "2500ms"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for operations on a specific key-value with a durability level."
  shortDescription: "Timeout for operations on a specific key-value with a durability\
    \ level."
  name: "spring.couchbase.env.timeouts.key-value-durable"
  defaultValue: "10s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for the management operations."
  shortDescription: "Timeout for the management operations."
  name: "spring.couchbase.env.timeouts.management"
  defaultValue: "75s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "N1QL query operations timeout."
  shortDescription: "N1QL query operations timeout."
  name: "spring.couchbase.env.timeouts.query"
  defaultValue: "75s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for the search service."
  shortDescription: "Timeout for the search service."
  name: "spring.couchbase.env.timeouts.search"
  defaultValue: "75s"
- type: "java.time.Duration"
  description: "Socket connect connections timeout."
  shortDescription: "Socket connect connections timeout."
  name: "spring.couchbase.env.timeouts.socket-connect"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Regular and geospatial view operations timeout."
  shortDescription: "Regular and geospatial view operations timeout."
  name: "spring.couchbase.env.timeouts.view"
  defaultValue: "75s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties"
  type: "java.lang.String"
  description: "Cluster password."
  shortDescription: "Cluster password."
  name: "spring.couchbase.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties"
  type: "java.lang.String"
  description: "Cluster username."
  shortDescription: "Cluster username."
  name: "spring.couchbase.username"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable the PersistenceExceptionTranslationPostProcessor."
  shortDescription: "Whether to enable the PersistenceExceptionTranslationPostProcessor."
  name: "spring.dao.exceptiontranslation.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Compression"
  description: "Compression supported by the Cassandra binary protocol."
  shortDescription: "Compression supported by the Cassandra binary protocol."
  name: "spring.data.cassandra.compression"
  defaultValue: "none"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "org.springframework.core.io.Resource"
  description: "Location of the configuration file to use."
  shortDescription: "Location of the configuration file to use."
  name: "spring.data.cassandra.config"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Connection"
  type: "java.time.Duration"
  description: "Timeout to use when establishing driver connections."
  shortDescription: "Timeout to use when establishing driver connections."
  name: "spring.data.cassandra.connection.connect-timeout"
  defaultValue: ""
- name: "spring.data.cassandra.connection.connection-timeout"
  defaultValue: "5s"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Connection"
  type: "java.time.Duration"
  description: "Timeout to use for internal queries that run as part of the initialization\
    \ process, just after a connection is opened."
  shortDescription: "Timeout to use for internal queries that run as part of the initialization\
    \ process, just after a connection is opened."
  name: "spring.data.cassandra.connection.init-query-timeout"
  defaultValue: "5s"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.util.List<java.lang.String>"
  description: "Cluster node addresses in the form 'host:port', or a simple 'host'\
    \ to use the configured port."
  shortDescription: "Cluster node addresses in the form 'host:port', or a simple 'host'\
    \ to use the configured port."
  name: "spring.data.cassandra.contact-points"
  defaultValue:
  - "127.0.0.1:9042"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Controlconnection"
  type: "java.time.Duration"
  description: "Timeout to use for control queries."
  shortDescription: "Timeout to use for control queries."
  name: "spring.data.cassandra.controlconnection.timeout"
  defaultValue: "5s"
- type: "java.lang.Boolean"
  description: "Whether to enable JMX reporting. Default to false as Cassandra JMX\
    \ reporting is not compatible with Dropwizard Metrics."
  shortDescription: "Whether to enable JMX reporting."
  name: "spring.data.cassandra.jmx-enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Cassandra no longer provides JMX metrics."
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Keyspace name to use."
  shortDescription: "Keyspace name to use."
  name: "spring.data.cassandra.keyspace-name"
  defaultValue: ""
- type: "java.lang.Class"
  description: "Class name of the load balancing policy. The class must have a default\
    \ constructor."
  shortDescription: "Class name of the load balancing policy."
  name: "spring.data.cassandra.load-balancing-policy"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Datacenter that is considered \"local\". Contact points should be\
    \ from this datacenter."
  shortDescription: "Datacenter that is considered \"local\"."
  name: "spring.data.cassandra.local-datacenter"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Login password of the server."
  shortDescription: "Login password of the server."
  name: "spring.data.cassandra.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Pool"
  type: "java.time.Duration"
  description: "Heartbeat interval after which a message is sent on an idle connection\
    \ to make sure it's still alive."
  shortDescription: "Heartbeat interval after which a message is sent on an idle connection\
    \ to make sure it's still alive."
  name: "spring.data.cassandra.pool.heartbeat-interval"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Pool"
  type: "java.time.Duration"
  description: "Idle timeout before an idle connection is removed."
  shortDescription: "Idle timeout before an idle connection is removed."
  name: "spring.data.cassandra.pool.idle-timeout"
  defaultValue: "5s"
- type: "java.lang.Integer"
  name: "spring.data.cassandra.pool.max-queue-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.data.cassandra.request.throttler.max-queue-size"
- type: "java.time.Duration"
  description: "Pool timeout when trying to acquire a connection from a host's pool."
  shortDescription: "Pool timeout when trying to acquire a connection from a host's\
    \ pool."
  name: "spring.data.cassandra.pool.pool-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "No longer available."
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.Integer"
  description: "Port to use if a contact point does not specify one."
  shortDescription: "Port to use if a contact point does not specify one."
  name: "spring.data.cassandra.port"
  defaultValue: 9042
- type: "java.lang.Class"
  description: "Class name of the reconnection policy. The class must have a default\
    \ constructor."
  shortDescription: "Class name of the reconnection policy."
  name: "spring.data.cassandra.reconnection-policy"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "org.springframework.boot.autoconfigure.data.RepositoryType"
  description: "Type of Cassandra repositories to enable."
  shortDescription: "Type of Cassandra repositories to enable."
  name: "spring.data.cassandra.repositories.type"
  defaultValue: "auto"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Request"
  type: "com.datastax.oss.driver.api.core.DefaultConsistencyLevel"
  description: "Queries consistency level."
  shortDescription: "Queries consistency level."
  name: "spring.data.cassandra.request.consistency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Request"
  type: "java.lang.Integer"
  description: "How many rows will be retrieved simultaneously in a single network\
    \ roundtrip."
  shortDescription: "How many rows will be retrieved simultaneously in a single network\
    \ roundtrip."
  name: "spring.data.cassandra.request.page-size"
  defaultValue: 5000
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Request"
  type: "com.datastax.oss.driver.api.core.DefaultConsistencyLevel"
  description: "Queries serial consistency level."
  shortDescription: "Queries serial consistency level."
  name: "spring.data.cassandra.request.serial-consistency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "java.time.Duration"
  description: "How often the throttler attempts to dequeue requests. Set this high\
    \ enough that each attempt will process multiple entries in the queue, but not\
    \ delay requests too much."
  shortDescription: "How often the throttler attempts to dequeue requests."
  name: "spring.data.cassandra.request.throttler.drain-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "java.lang.Integer"
  description: "Maximum number of requests that are allowed to execute in parallel."
  shortDescription: "Maximum number of requests that are allowed to execute in parallel."
  name: "spring.data.cassandra.request.throttler.max-concurrent-requests"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "java.lang.Integer"
  description: "Maximum number of requests that can be enqueued when the throttling\
    \ threshold is exceeded."
  shortDescription: "Maximum number of requests that can be enqueued when the throttling\
    \ threshold is exceeded."
  name: "spring.data.cassandra.request.throttler.max-queue-size"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "java.lang.Integer"
  description: "Maximum allowed request rate."
  shortDescription: "Maximum allowed request rate."
  name: "spring.data.cassandra.request.throttler.max-requests-per-second"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$ThrottlerType"
  description: "Request throttling type."
  shortDescription: "Request throttling type."
  name: "spring.data.cassandra.request.throttler.type"
  defaultValue: "none"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Request"
  type: "java.time.Duration"
  description: "How long the driver waits for a request to complete."
  shortDescription: "How long the driver waits for a request to complete."
  name: "spring.data.cassandra.request.timeout"
  defaultValue: "2s"
- type: "java.lang.Class"
  description: "Class name of the retry policy. The class must have a default constructor."
  shortDescription: "Class name of the retry policy."
  name: "spring.data.cassandra.retry-policy"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Schema action to take at startup."
  shortDescription: "Schema action to take at startup."
  name: "spring.data.cassandra.schema-action"
  defaultValue: "none"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Name of the Cassandra session."
  shortDescription: "Name of the Cassandra session."
  name: "spring.data.cassandra.session-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.Boolean"
  description: "Enable SSL support."
  shortDescription: "Enable SSL support."
  name: "spring.data.cassandra.ssl"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Login user of the server."
  shortDescription: "Login user of the server."
  name: "spring.data.cassandra.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.Boolean"
  description: "Automatically create views and indexes. Use the meta-data provided\
    \ by \"@ViewIndexed\", \"@N1qlPrimaryIndexed\" and \"@N1qlSecondaryIndexed\"."
  shortDescription: "Automatically create views and indexes."
  name: "spring.data.couchbase.auto-index"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.String"
  description: "Name of the bucket to connect to."
  shortDescription: "Name of the bucket to connect to."
  name: "spring.data.couchbase.bucket-name"
  defaultValue: ""
- type: "org.springframework.data.couchbase.core.query.Consistency"
  name: "spring.data.couchbase.consistency"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.Class<?>"
  description: "Fully qualified name of the FieldNamingStrategy to use."
  shortDescription: "Fully qualified name of the FieldNamingStrategy to use."
  name: "spring.data.couchbase.field-naming-strategy"
  defaultValue: ""
- type: "org.springframework.boot.autoconfigure.data.RepositoryType"
  description: "Type of Couchbase repositories to enable."
  shortDescription: "Type of Couchbase repositories to enable."
  name: "spring.data.couchbase.repositories.type"
  defaultValue: "auto"
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.String"
  description: "Name of the scope used for all collection access."
  shortDescription: "Name of the scope used for all collection access."
  name: "spring.data.couchbase.scope-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.String"
  description: "Name of the field that stores the type information for complex types\
    \ when using \"MappingCouchbaseConverter\"."
  shortDescription: "Name of the field that stores the type information for complex\
    \ types when using \"MappingCouchbaseConverter\"."
  name: "spring.data.couchbase.type-key"
  defaultValue: "_class"
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.time.Duration"
  description: "Connection timeout."
  shortDescription: "Connection timeout."
  name: "spring.data.elasticsearch.client.reactive.connection-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of the Elasticsearch endpoints to connect to."
  shortDescription: "Comma-separated list of the Elasticsearch endpoints to connect\
    \ to."
  name: "spring.data.elasticsearch.client.reactive.endpoints"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Limit on the number of bytes that can be buffered whenever the input\
    \ stream needs to be aggregated."
  shortDescription: "Limit on the number of bytes that can be buffered whenever the\
    \ input stream needs to be aggregated."
  name: "spring.data.elasticsearch.client.reactive.max-in-memory-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.lang.String"
  description: "Credentials password."
  shortDescription: "Credentials password."
  name: "spring.data.elasticsearch.client.reactive.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.time.Duration"
  description: "Read and Write Socket timeout."
  shortDescription: "Read and Write Socket timeout."
  name: "spring.data.elasticsearch.client.reactive.socket-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.lang.Boolean"
  description: "Whether the client should use SSL to connect to the endpoints."
  shortDescription: "Whether the client should use SSL to connect to the endpoints."
  name: "spring.data.elasticsearch.client.reactive.use-ssl"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.lang.String"
  description: "Credentials username."
  shortDescription: "Credentials username."
  name: "spring.data.elasticsearch.client.reactive.username"
  defaultValue: ""
- type: "java.lang.String"
  description: "Elasticsearch cluster name."
  shortDescription: "Elasticsearch cluster name."
  name: "spring.data.elasticsearch.cluster-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Comma-separated list of cluster node addresses."
  shortDescription: "Comma-separated list of cluster node addresses."
  name: "spring.data.elasticsearch.cluster-nodes"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional properties used to configure the client."
  shortDescription: "Additional properties used to configure the client."
  name: "spring.data.elasticsearch.properties"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  description: "Whether to enable Elasticsearch repositories."
  shortDescription: "Whether to enable Elasticsearch repositories."
  name: "spring.data.elasticsearch.repositories.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable JDBC repositories."
  shortDescription: "Whether to enable JDBC repositories."
  name: "spring.data.jdbc.repositories.enabled"
  defaultValue: true
- type: "org.springframework.data.repository.config.BootstrapMode"
  description: "Bootstrap mode for JPA repositories."
  shortDescription: "Bootstrap mode for JPA repositories."
  name: "spring.data.jpa.repositories.bootstrap-mode"
  defaultValue: "default"
- type: "java.lang.Boolean"
  description: "Whether to enable JPA repositories."
  shortDescription: "Whether to enable JPA repositories."
  name: "spring.data.jpa.repositories.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable LDAP repositories."
  shortDescription: "Whether to enable LDAP repositories."
  name: "spring.data.ldap.repositories.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Authentication database name."
  shortDescription: "Authentication database name."
  name: "spring.data.mongodb.authentication-database"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable auto-index creation."
  shortDescription: "Whether to enable auto-index creation."
  name: "spring.data.mongodb.auto-index-creation"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Database name."
  shortDescription: "Database name."
  name: "spring.data.mongodb.database"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.Class<?>"
  description: "Fully qualified name of the FieldNamingStrategy to use."
  shortDescription: "Fully qualified name of the FieldNamingStrategy to use."
  name: "spring.data.mongodb.field-naming-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  name: "spring.data.mongodb.grid-fs-database"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.data.mongodb.gridfs.database"
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties$Gridfs"
  type: "java.lang.String"
  description: "GridFS bucket name."
  shortDescription: "GridFS bucket name."
  name: "spring.data.mongodb.gridfs.bucket"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties$Gridfs"
  type: "java.lang.String"
  description: "GridFS database name."
  shortDescription: "GridFS database name."
  name: "spring.data.mongodb.gridfs.database"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Mongo server host. Cannot be set with URI."
  shortDescription: "Mongo server host."
  name: "spring.data.mongodb.host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.Character[]"
  description: "Login password of the mongo server. Cannot be set with URI."
  shortDescription: "Login password of the mongo server."
  name: "spring.data.mongodb.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.Integer"
  description: "Mongo server port. Cannot be set with URI."
  shortDescription: "Mongo server port."
  name: "spring.data.mongodb.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Required replica set name for the cluster. Cannot be set with URI."
  shortDescription: "Required replica set name for the cluster."
  name: "spring.data.mongodb.replica-set-name"
  defaultValue: ""
- type: "org.springframework.boot.autoconfigure.data.RepositoryType"
  description: "Type of Mongo repositories to enable."
  shortDescription: "Type of Mongo repositories to enable."
  name: "spring.data.mongodb.repositories.type"
  defaultValue: "auto"
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Mongo database URI. Cannot be set with host, port, credentials and\
    \ replica set name."
  shortDescription: "Mongo database URI."
  name: "spring.data.mongodb.uri"
  defaultValue: "mongodb://localhost/test"
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Login user of the mongo server. Cannot be set with URI."
  shortDescription: "Login user of the mongo server."
  name: "spring.data.mongodb.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "org.bson.UuidRepresentation"
  description: "Representation to use when converting a UUID to a BSON binary value."
  shortDescription: "Representation to use when converting a UUID to a BSON binary\
    \ value."
  name: "spring.data.mongodb.uuid-representation"
  defaultValue: "java-legacy"
- description: "Auto index mode."
  shortDescription: "Auto index mode."
  name: "spring.data.neo4j.auto-index"
  defaultValue: "none"
  deprecationLevel: "ERROR"
  deprecationReason: "Automatic index creation is no longer supported."
- owner: "org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataProperties"
  type: "java.lang.String"
  description: "Database name to use. By default, the server decides the default database\
    \ to use."
  shortDescription: "Database name to use."
  name: "spring.data.neo4j.database"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable embedded mode if the embedded driver is available."
  shortDescription: "Whether to enable embedded mode if the embedded driver is available."
  name: "spring.data.neo4j.embedded.enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Embedded mode is no longer supported, please use Testcontainers\
    \ instead."
- type: "java.lang.Boolean"
  description: "Register OpenSessionInViewInterceptor that binds a Neo4j Session to\
    \ the thread for the entire processing of the request."
  shortDescription: "Register OpenSessionInViewInterceptor that binds a Neo4j Session\
    \ to the thread for the entire processing of the request."
  name: "spring.data.neo4j.open-in-view"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Login password of the server."
  shortDescription: "Login password of the server."
  name: "spring.data.neo4j.password"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.neo4j.authentication.password"
- type: "java.lang.Boolean"
  description: "Whether to enable Neo4j repositories."
  shortDescription: "Whether to enable Neo4j repositories."
  name: "spring.data.neo4j.repositories.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.data.neo4j.repositories.type"
- type: "org.springframework.boot.autoconfigure.data.RepositoryType"
  description: "Type of Neo4j repositories to enable."
  shortDescription: "Type of Neo4j repositories to enable."
  name: "spring.data.neo4j.repositories.type"
  defaultValue: "auto"
- type: "java.lang.String"
  description: "URI used by the driver. Auto-detected by default."
  shortDescription: "URI used by the driver."
  name: "spring.data.neo4j.uri"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.neo4j.uri"
- type: "java.lang.Boolean"
  description: "Whether to use Neo4j native types wherever possible."
  shortDescription: "Whether to use Neo4j native types wherever possible."
  name: "spring.data.neo4j.use-native-types"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Native type support is now built-in."
- type: "java.lang.String"
  description: "Login user of the server."
  shortDescription: "Login user of the server."
  name: "spring.data.neo4j.username"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.neo4j.authentication.password"
- type: "java.lang.Boolean"
  description: "Whether to enable R2DBC repositories."
  shortDescription: "Whether to enable R2DBC repositories."
  name: "spring.data.r2dbc.repositories.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Redis repositories."
  shortDescription: "Whether to enable Redis repositories."
  name: "spring.data.redis.repositories.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.String"
  description: "Base path to be used by Spring Data REST to expose repository resources."
  shortDescription: "Base path to be used by Spring Data REST to expose repository\
    \ resources."
  name: "spring.data.rest.base-path"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "org.springframework.http.MediaType"
  description: "Content type to use as a default when none is specified."
  shortDescription: "Content type to use as a default when none is specified."
  name: "spring.data.rest.default-media-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Integer"
  description: "Default size of pages."
  shortDescription: "Default size of pages."
  name: "spring.data.rest.default-page-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "org.springframework.data.rest.core.mapping.RepositoryDetectionStrategy$RepositoryDetectionStrategies"
  description: "Strategy to use to determine which repositories get exposed."
  shortDescription: "Strategy to use to determine which repositories get exposed."
  name: "spring.data.rest.detection-strategy"
  defaultValue: "default"
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable enum value translation through the Spring Data REST\
    \ default resource bundle."
  shortDescription: "Whether to enable enum value translation through the Spring Data\
    \ REST default resource bundle."
  name: "spring.data.rest.enable-enum-translation"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.String"
  description: "Name of the URL query string parameter that indicates how many results\
    \ to return at once."
  shortDescription: "Name of the URL query string parameter that indicates how many\
    \ results to return at once."
  name: "spring.data.rest.limit-param-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Integer"
  description: "Maximum size of pages."
  shortDescription: "Maximum size of pages."
  name: "spring.data.rest.max-page-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.String"
  description: "Name of the URL query string parameter that indicates what page to\
    \ return."
  shortDescription: "Name of the URL query string parameter that indicates what page\
    \ to return."
  name: "spring.data.rest.page-param-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Boolean"
  description: "Whether to return a response body after creating an entity."
  shortDescription: "Whether to return a response body after creating an entity."
  name: "spring.data.rest.return-body-on-create"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Boolean"
  description: "Whether to return a response body after updating an entity."
  shortDescription: "Whether to return a response body after updating an entity."
  name: "spring.data.rest.return-body-on-update"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.String"
  description: "Name of the URL query string parameter that indicates what direction\
    \ to sort results."
  shortDescription: "Name of the URL query string parameter that indicates what direction\
    \ to sort results."
  name: "spring.data.rest.sort-param-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.solr.SolrProperties"
  type: "java.lang.String"
  description: "Solr host. Ignored if \"zk-host\" is set."
  shortDescription: "Solr host."
  name: "spring.data.solr.host"
  defaultValue: "http://127.0.0.1:8983/solr"
- owner: "org.springframework.boot.autoconfigure.solr.SolrProperties"
  type: "java.lang.String"
  description: "ZooKeeper host address in the form HOST:PORT."
  shortDescription: "ZooKeeper host address in the form HOST:PORT."
  name: "spring.data.solr.zk-host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.Integer"
  description: "Default page size."
  shortDescription: "Default page size."
  name: "spring.data.web.pageable.default-page-size"
  defaultValue: 20
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.Integer"
  description: "Maximum page size to be accepted."
  shortDescription: "Maximum page size to be accepted."
  name: "spring.data.web.pageable.max-page-size"
  defaultValue: 2000
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.Boolean"
  description: "Whether to expose and assume 1-based page number indexes. Defaults\
    \ to \"false\", meaning a page number of 0 in the request equals the first page."
  shortDescription: "Whether to expose and assume 1-based page number indexes."
  name: "spring.data.web.pageable.one-indexed-parameters"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.String"
  description: "Page index parameter name."
  shortDescription: "Page index parameter name."
  name: "spring.data.web.pageable.page-parameter"
  defaultValue: "page"
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.String"
  description: "General prefix to be prepended to the page number and page size parameters."
  shortDescription: "General prefix to be prepended to the page number and page size\
    \ parameters."
  name: "spring.data.web.pageable.prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.String"
  description: "Delimiter to be used between the qualifier and the actual page number\
    \ and size properties."
  shortDescription: "Delimiter to be used between the qualifier and the actual page\
    \ number and size properties."
  name: "spring.data.web.pageable.qualifier-delimiter"
  defaultValue: "_"
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.String"
  description: "Page size parameter name."
  shortDescription: "Page size parameter name."
  name: "spring.data.web.pageable.size-parameter"
  defaultValue: "size"
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort"
  type: "java.lang.String"
  description: "Sort parameter name."
  shortDescription: "Sort parameter name."
  name: "spring.data.web.sort.sort-parameter"
  defaultValue: "sort"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to stop if an error occurs while initializing the database."
  shortDescription: "Whether to stop if an error occurs while initializing the database."
  name: "spring.datasource.continue-on-error"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.continue-on-error"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.util.List<java.lang.String>"
  description: "Data (DML) script resource references."
  shortDescription: "Data (DML) script resource references."
  name: "spring.datasource.data"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.data-locations"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Password of the database to execute DML scripts (if different)."
  shortDescription: "Password of the database to execute DML scripts (if different)."
  name: "spring.datasource.data-password"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.password"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Username of the database to execute DML scripts (if different)."
  shortDescription: "Username of the database to execute DML scripts (if different)."
  name: "spring.datasource.data-username"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.username"
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.abandoned-usage-tracking"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.access-to-underlying-connection-allowed"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.auto-commit-on-return"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.cache-state"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.clear-statement-pool-on-return"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.connection-factory-class-name"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.util.List<java.lang.String>"
  name: "spring.datasource.dbcp2.connection-init-sqls"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.default-auto-commit"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.default-catalog"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.default-query-timeout"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.default-read-only"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.default-schema"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.default-transaction-isolation"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.util.Set<java.lang.String>"
  name: "spring.datasource.dbcp2.disconnection-sql-codes"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.sql.Driver"
  name: "spring.datasource.dbcp2.driver"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.driver-class-name"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.enable-auto-commit-on-return"
  defaultValue: ""
  deprecationLevel: "WARNING"
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.eviction-policy-class-name"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.fast-fail-validation"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.initial-size"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.jmx-name"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.lifo"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.log-abandoned"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.log-expired-connections"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.login-timeout"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.max-conn-lifetime-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.max-idle"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.max-open-prepared-statements"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.max-total"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.max-wait-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.min-evictable-idle-time-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.min-idle"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.num-tests-per-eviction-run"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.password"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.pool-prepared-statements"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.remove-abandoned-on-borrow"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.remove-abandoned-on-maintenance"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.remove-abandoned-timeout"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.rollback-on-return"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.soft-min-evictable-idle-time-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.test-on-borrow"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.test-on-create"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.test-on-return"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.test-while-idle"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.time-between-eviction-runs-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.url"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.username"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.validation-query"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.validation-query-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Fully qualified name of the JDBC driver. Auto-detected based on the\
    \ URL by default."
  shortDescription: "Fully qualified name of the JDBC driver."
  name: "spring.datasource.driver-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
  description: "Connection details for an embedded database. Defaults to the most\
    \ suitable embedded database that is available on the classpath."
  shortDescription: "Connection details for an embedded database."
  name: "spring.datasource.embedded-database-connection"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to generate a random datasource name."
  shortDescription: "Whether to generate a random datasource name."
  name: "spring.datasource.generate-unique-name"
  defaultValue: true
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.allow-pool-suspension"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.auto-commit"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.catalog"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.connection-init-sql"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.connection-test-query"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.connection-timeout"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.data-source-class-name"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.data-source-j-n-d-i"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.util.Properties"
  name: "spring.datasource.hikari.data-source-properties"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.driver-class-name"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.exception-override-class-name"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.util.Properties"
  name: "spring.datasource.hikari.health-check-properties"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Object"
  name: "spring.datasource.hikari.health-check-registry"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.idle-timeout"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.initialization-fail-timeout"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.isolate-internal-queries"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.jdbc-url"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.keepalive-time"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.leak-detection-threshold"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.hikari.login-timeout"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.max-lifetime"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.hikari.maximum-pool-size"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Object"
  name: "spring.datasource.hikari.metric-registry"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
  name: "spring.datasource.hikari.metrics-tracker-factory"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.hikari.minimum-idle"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.password"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.pool-name"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.read-only"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.register-mbeans"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.util.concurrent.ScheduledExecutorService"
  name: "spring.datasource.hikari.scheduled-executor"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.schema"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.transaction-isolation"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.username"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.validation-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Mode to apply when determining if DataSource initialization should\
    \ be performed using the available DDL and DML scripts."
  shortDescription: "Mode to apply when determining if DataSource initialization should\
    \ be performed using the available DDL and DML scripts."
  name: "spring.datasource.initialization-mode"
  defaultValue: "embedded"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.mode"
- type: "java.lang.Boolean"
  description: "Whether to enable JMX support (if provided by the underlying pool)."
  shortDescription: "Whether to enable JMX support (if provided by the underlying\
    \ pool)."
  name: "spring.datasource.jmx-enabled"
  defaultValue: false
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.datasource.tomcat.jmx-enabled"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "JNDI location of the datasource. Class, url, username and password\
    \ are ignored when set."
  shortDescription: "JNDI location of the datasource."
  name: "spring.datasource.jndi-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Datasource name to use if \"generate-unique-name\" is false. Defaults\
    \ to \"testdb\" when using an embedded database, otherwise null."
  shortDescription: "Datasource name to use if \"generate-unique-name\" is false."
  name: "spring.datasource.name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.abandoned-connection-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.connection-factory-class-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.util.Properties"
  name: "spring.datasource.oracleucp.connection-factory-properties"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-harvest-max-count"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-harvest-trigger-count"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-labeling-high-cost"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.connection-pool-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.util.Properties"
  name: "spring.datasource.oracleucp.connection-properties"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-repurpose-threshold"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-validation-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-wait-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.data-source-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.database-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.description"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Boolean"
  name: "spring.datasource.oracleucp.fast-connection-failover-enabled"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.high-cost-connection-reuse-threshold"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.inactive-connection-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.initial-pool-size"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.login-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-connection-reuse-count"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Long"
  name: "spring.datasource.oracleucp.max-connection-reuse-time"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-connections-per-shard"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-idle-time"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-pool-size"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-statements"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.min-pool-size"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.network-protocol"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.o-n-s-configuration"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.password"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.util.Properties"
  name: "spring.datasource.oracleucp.pdb-roles"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.port-number"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.property-cycle"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.query-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Boolean"
  name: "spring.datasource.oracleucp.read-only-instance-allowed"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.role-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.s-q-l-for-validate-connection"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.seconds-to-trust-idle-connection"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.server-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Boolean"
  name: "spring.datasource.oracleucp.sharding-mode"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.time-to-live-connection-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.timeout-check-interval"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.u-r-l"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.user"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Boolean"
  name: "spring.datasource.oracleucp.validate-connection-on-borrow"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Login password of the database."
  shortDescription: "Login password of the database."
  name: "spring.datasource.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Platform to use in the DDL or DML scripts (such as schema-${platform}.sql\
    \ or data-${platform}.sql)."
  shortDescription: "Platform to use in the DDL or DML scripts (such as schema-${platform}.sql\
    \ or data-${platform}.sql)."
  name: "spring.datasource.platform"
  defaultValue: "all"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.platform"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.util.List<java.lang.String>"
  description: "Schema (DDL) script resource references."
  shortDescription: "Schema (DDL) script resource references."
  name: "spring.datasource.schema"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.schema-locations"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Password of the database to execute DDL scripts (if different)."
  shortDescription: "Password of the database to execute DDL scripts (if different)."
  name: "spring.datasource.schema-password"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.password"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Username of the database to execute DDL scripts (if different)."
  shortDescription: "Username of the database to execute DDL scripts (if different)."
  name: "spring.datasource.schema-username"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.username"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Statement separator in SQL initialization scripts."
  shortDescription: "Statement separator in SQL initialization scripts."
  name: "spring.datasource.separator"
  defaultValue: ";"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.separator"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.nio.charset.Charset"
  description: "SQL scripts encoding."
  shortDescription: "SQL scripts encoding."
  name: "spring.datasource.sql-script-encoding"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.encoding"
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.abandon-when-percentage-full"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.access-to-underlying-connection-allowed"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.alternate-username-allowed"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.commit-on-return"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.connection-properties"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Object"
  name: "spring.datasource.tomcat.data-source"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.data-source-j-n-d-i"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.util.Properties"
  name: "spring.datasource.tomcat.db-properties"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.default-auto-commit"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.default-catalog"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.default-read-only"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.default-transaction-isolation"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.driver-class-name"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.fair-queue"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.ignore-exception-on-pre-load"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.init-s-q-l"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.initial-size"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.jdbc-interceptors"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.jmx-enabled"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.log-abandoned"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.log-validation-errors"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.login-timeout"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.max-active"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Long"
  name: "spring.datasource.tomcat.max-age"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.max-idle"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.max-wait"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.min-evictable-idle-time-millis"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.min-idle"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.name"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.num-tests-per-eviction-run"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.password"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.propagate-interrupt-state"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.remove-abandoned"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.remove-abandoned-timeout"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.rollback-on-return"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.suspect-timeout"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.test-on-borrow"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.test-on-connect"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.test-on-return"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.test-while-idle"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.time-between-eviction-runs-millis"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.url"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.use-disposable-connection-facade"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.use-equals"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.use-lock"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.use-statement-facade"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.username"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Long"
  name: "spring.datasource.tomcat.validation-interval"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.validation-query"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.validation-query-timeout"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.validator-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.Class<? extends javax.sql.DataSource>"
  description: "Fully qualified name of the connection pool implementation to use.\
    \ By default, it is auto-detected from the classpath."
  shortDescription: "Fully qualified name of the connection pool implementation to\
    \ use."
  name: "spring.datasource.type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "JDBC URL of the database."
  shortDescription: "JDBC URL of the database."
  name: "spring.datasource.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Login username of the database."
  shortDescription: "Login username of the database."
  name: "spring.datasource.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
  type: "java.lang.String"
  description: "XA datasource fully qualified name."
  shortDescription: "XA datasource fully qualified name."
  name: "spring.datasource.xa.data-source-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Properties to pass to the XA data source."
  shortDescription: "Properties to pass to the XA data source."
  name: "spring.datasource.xa.properties"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable development property defaults."
  shortDescription: "Whether to enable development property defaults."
  name: "spring.devtools.add-properties"
  defaultValue: true
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Livereload"
  type: "java.lang.Boolean"
  description: "Whether to enable a livereload.com-compatible server."
  shortDescription: "Whether to enable a livereload.com-compatible server."
  name: "spring.devtools.livereload.enabled"
  defaultValue: true
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Livereload"
  type: "java.lang.Integer"
  description: "Server port."
  shortDescription: "Server port."
  name: "spring.devtools.livereload.port"
  defaultValue: 35729
- owner: "org.springframework.boot.devtools.autoconfigure.RemoteDevToolsProperties"
  type: "java.lang.String"
  description: "Context path used to handle the remote connection."
  shortDescription: "Context path used to handle the remote connection."
  name: "spring.devtools.remote.context-path"
  defaultValue: "/.~~spring-boot!~"
- owner: "org.springframework.boot.devtools.autoconfigure.RemoteDevToolsProperties$Proxy"
  type: "java.lang.String"
  description: "The host of the proxy to use to connect to the remote application."
  shortDescription: "The host of the proxy to use to connect to the remote application."
  name: "spring.devtools.remote.proxy.host"
  defaultValue: ""
- owner: "org.springframework.boot.devtools.autoconfigure.RemoteDevToolsProperties$Proxy"
  type: "java.lang.Integer"
  description: "The port of the proxy to use to connect to the remote application."
  shortDescription: "The port of the proxy to use to connect to the remote application."
  name: "spring.devtools.remote.proxy.port"
  defaultValue: ""
- owner: "org.springframework.boot.devtools.autoconfigure.RemoteDevToolsProperties$Restart"
  type: "java.lang.Boolean"
  description: "Whether to enable remote restart."
  shortDescription: "Whether to enable remote restart."
  name: "spring.devtools.remote.restart.enabled"
  defaultValue: true
- owner: "org.springframework.boot.devtools.autoconfigure.RemoteDevToolsProperties"
  type: "java.lang.String"
  description: "A shared secret required to establish a connection (required to enable\
    \ remote support)."
  shortDescription: "A shared secret required to establish a connection (required\
    \ to enable remote support)."
  name: "spring.devtools.remote.secret"
  defaultValue: ""
- owner: "org.springframework.boot.devtools.autoconfigure.RemoteDevToolsProperties"
  type: "java.lang.String"
  description: "HTTP header used to transfer the shared secret."
  shortDescription: "HTTP header used to transfer the shared secret."
  name: "spring.devtools.remote.secret-header-name"
  defaultValue: "X-AUTH-TOKEN"
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Restart"
  type: "java.lang.String"
  description: "Additional patterns that should be excluded from triggering a full\
    \ restart."
  shortDescription: "Additional patterns that should be excluded from triggering a\
    \ full restart."
  name: "spring.devtools.restart.additional-exclude"
  defaultValue: ""
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Restart"
  type: "java.util.List<java.io.File>"
  description: "Additional paths to watch for changes."
  shortDescription: "Additional paths to watch for changes."
  name: "spring.devtools.restart.additional-paths"
  defaultValue: ""
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Restart"
  type: "java.lang.Boolean"
  description: "Whether to enable automatic restart."
  shortDescription: "Whether to enable automatic restart."
  name: "spring.devtools.restart.enabled"
  defaultValue: true
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Restart"
  type: "java.lang.String"
  description: "Patterns that should be excluded from triggering a full restart."
  shortDescription: "Patterns that should be excluded from triggering a full restart."
  name: "spring.devtools.restart.exclude"
  defaultValue: "META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties,META-INF/build-info.properties"
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Restart"
  type: "java.lang.Boolean"
  description: "Whether to log the condition evaluation delta upon restart."
  shortDescription: "Whether to log the condition evaluation delta upon restart."
  name: "spring.devtools.restart.log-condition-evaluation-delta"
  defaultValue: true
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Restart"
  type: "java.time.Duration"
  description: "Amount of time to wait between polling for classpath changes."
  shortDescription: "Amount of time to wait between polling for classpath changes."
  name: "spring.devtools.restart.poll-interval"
  defaultValue: "1s"
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Restart"
  type: "java.time.Duration"
  description: "Amount of quiet time required without any classpath changes before\
    \ a restart is triggered."
  shortDescription: "Amount of quiet time required without any classpath changes before\
    \ a restart is triggered."
  name: "spring.devtools.restart.quiet-period"
  defaultValue: "400ms"
- owner: "org.springframework.boot.devtools.autoconfigure.DevToolsProperties$Restart"
  type: "java.lang.String"
  description: "Name of a specific file that, when changed, triggers the restart check.\
    \ Must be a simple name (without any path) of a file that appears on your classpath.\
    \ If not specified, any classpath file change triggers the restart."
  shortDescription: "Name of a specific file that, when changed, triggers the restart\
    \ check."
  name: "spring.devtools.restart.trigger-file"
  defaultValue: ""
- type: "java.time.Duration"
  description: "Connection timeout."
  shortDescription: "Connection timeout."
  name: "spring.elasticsearch.jest.connection-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  description: "Whether to enable connection requests from multiple execution threads."
  shortDescription: "Whether to enable connection requests from multiple execution\
    \ threads."
  name: "spring.elasticsearch.jest.multi-threaded"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Login password."
  shortDescription: "Login password."
  name: "spring.elasticsearch.jest.password"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Proxy host the HTTP client should use."
  shortDescription: "Proxy host the HTTP client should use."
  name: "spring.elasticsearch.jest.proxy.host"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Proxy port the HTTP client should use."
  shortDescription: "Proxy port the HTTP client should use."
  name: "spring.elasticsearch.jest.proxy.port"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.time.Duration"
  description: "Read timeout."
  shortDescription: "Read timeout."
  name: "spring.elasticsearch.jest.read-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of the Elasticsearch instances to use."
  shortDescription: "Comma-separated list of the Elasticsearch instances to use."
  name: "spring.elasticsearch.jest.uris"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Login username."
  shortDescription: "Login username."
  name: "spring.elasticsearch.jest.username"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.time.Duration"
  description: "Connection timeout."
  shortDescription: "Connection timeout."
  name: "spring.elasticsearch.rest.connection-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.lang.String"
  description: "Credentials password."
  shortDescription: "Credentials password."
  name: "spring.elasticsearch.rest.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.time.Duration"
  description: "Read timeout."
  shortDescription: "Read timeout."
  name: "spring.elasticsearch.rest.read-timeout"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties$Sniffer"
  type: "java.time.Duration"
  description: "Delay of a sniff execution scheduled after a failure."
  shortDescription: "Delay of a sniff execution scheduled after a failure."
  name: "spring.elasticsearch.rest.sniffer.delay-after-failure"
  defaultValue: "1m"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties$Sniffer"
  type: "java.time.Duration"
  description: "Interval between consecutive ordinary sniff executions."
  shortDescription: "Interval between consecutive ordinary sniff executions."
  name: "spring.elasticsearch.rest.sniffer.interval"
  defaultValue: "5m"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of the Elasticsearch instances to use."
  shortDescription: "Comma-separated list of the Elasticsearch instances to use."
  name: "spring.elasticsearch.rest.uris"
  defaultValue:
  - "http://localhost:9200"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.lang.String"
  description: "Credentials username."
  shortDescription: "Credentials username."
  name: "spring.elasticsearch.rest.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Description to tag an existing schema with when applying a baseline."
  shortDescription: "Description to tag an existing schema with when applying a baseline."
  name: "spring.flyway.baseline-description"
  defaultValue: "<< Flyway Baseline >>"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically call baseline when migrating a non-empty\
    \ schema."
  shortDescription: "Whether to automatically call baseline when migrating a non-empty\
    \ schema."
  name: "spring.flyway.baseline-on-migrate"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Version to tag an existing schema with when executing baseline."
  shortDescription: "Version to tag an existing schema with when executing baseline."
  name: "spring.flyway.baseline-version"
  defaultValue: "1"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to batch SQL statements when executing them. Requires Flyway\
    \ Teams."
  shortDescription: "Whether to batch SQL statements when executing them."
  name: "spring.flyway.batch"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that migration scripts location exists. Should be\
    \ set to false when using a wildcard location or a remote-hosted location such\
    \ as S3 or GCS."
  shortDescription: "Whether to check that migration scripts location exists."
  name: "spring.flyway.check-location"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReason: "Locations can no longer be checked accurately due to changes\
    \ in Flyway's location support."
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String[]"
  description: "Migrations that Flyway should consider when migrating or undoing.\
    \ When empty all available migrations are considered. Requires Flyway Teams."
  shortDescription: "Migrations that Flyway should consider when migrating or undoing."
  name: "spring.flyway.cherry-pick"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to disable cleaning of the database."
  shortDescription: "Whether to disable cleaning of the database."
  name: "spring.flyway.clean-disabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically call clean when a validation error occurs."
  shortDescription: "Whether to automatically call clean when a validation error occurs."
  name: "spring.flyway.clean-on-validation-error"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Integer"
  description: "Maximum number of retries when attempting to connect to the database."
  shortDescription: "Maximum number of retries when attempting to connect to the database."
  name: "spring.flyway.connect-retries"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether Flyway should attempt to create the schemas specified in the\
    \ schemas property."
  shortDescription: "Whether Flyway should attempt to create the schemas specified\
    \ in the schemas property."
  name: "spring.flyway.create-schemas"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Default schema name managed by Flyway (case-sensitive)."
  shortDescription: "Default schema name managed by Flyway (case-sensitive)."
  name: "spring.flyway.default-schema"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Fully qualified name of the JDBC driver. Auto-detected based on the\
    \ URL by default."
  shortDescription: "Fully qualified name of the JDBC driver."
  name: "spring.flyway.driver-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.io.File"
  description: "File to which the SQL statements of a migration dry run should be\
    \ output. Requires Flyway Teams."
  shortDescription: "File to which the SQL statements of a migration dry run should\
    \ be output."
  name: "spring.flyway.dry-run-output"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Flyway pro edition only."
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable flyway."
  shortDescription: "Whether to enable flyway."
  name: "spring.flyway.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.nio.charset.Charset"
  description: "Encoding of SQL migrations."
  shortDescription: "Encoding of SQL migrations."
  name: "spring.flyway.encoding"
  defaultValue: "UTF-8"
- type: "org.flywaydb.core.api.errorhandler.ErrorHandler[]"
  name: "spring.flyway.error-handlers"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Flyway pro edition only."
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String[]"
  description: "Rules for the built-in error handling to override specific SQL states\
    \ and error codes. Requires Flyway Teams."
  shortDescription: "Rules for the built-in error handling to override specific SQL\
    \ states and error codes."
  name: "spring.flyway.error-overrides"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to group all pending migrations together in the same transaction\
    \ when applying them."
  shortDescription: "Whether to group all pending migrations together in the same\
    \ transaction when applying them."
  name: "spring.flyway.group"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore future migrations when reading the schema history\
    \ table."
  shortDescription: "Whether to ignore future migrations when reading the schema history\
    \ table."
  name: "spring.flyway.ignore-future-migrations"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore ignored migrations when reading the schema history\
    \ table."
  shortDescription: "Whether to ignore ignored migrations when reading the schema\
    \ history table."
  name: "spring.flyway.ignore-ignored-migrations"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore missing migrations when reading the schema history\
    \ table."
  shortDescription: "Whether to ignore missing migrations when reading the schema\
    \ history table."
  name: "spring.flyway.ignore-missing-migrations"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore pending migrations when reading the schema history\
    \ table."
  shortDescription: "Whether to ignore pending migrations when reading the schema\
    \ history table."
  name: "spring.flyway.ignore-pending-migrations"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.List<java.lang.String>"
  description: "SQL statements to execute to initialize a connection immediately after\
    \ obtaining it."
  shortDescription: "SQL statements to execute to initialize a connection immediately\
    \ after obtaining it."
  name: "spring.flyway.init-sqls"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Username recorded in the schema history table as having applied the\
    \ migration."
  shortDescription: "Username recorded in the schema history table as having applied\
    \ the migration."
  name: "spring.flyway.installed-by"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Properties to pass to the JDBC driver. Requires Flyway Teams."
  shortDescription: "Properties to pass to the JDBC driver."
  name: "spring.flyway.jdbc-properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Licence key for Flyway Teams."
  shortDescription: "Licence key for Flyway Teams."
  name: "spring.flyway.license-key"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.List<java.lang.String>"
  description: "Locations of migrations scripts. Can contain the special \"{vendor}\"\
    \ placeholder to use vendor-specific locations."
  shortDescription: "Locations of migrations scripts."
  name: "spring.flyway.locations"
  defaultValue:
  - "classpath:db/migration"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Integer"
  description: "Maximum number of retries when trying to obtain a lock."
  shortDescription: "Maximum number of retries when trying to obtain a lock."
  name: "spring.flyway.lock-retry-count"
  defaultValue: 50
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to allow mixing transactional and non-transactional statements\
    \ within the same migration."
  shortDescription: "Whether to allow mixing transactional and non-transactional statements\
    \ within the same migration."
  name: "spring.flyway.mixed"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Path of the Oracle Kerberos cache file. Requires Flyway Teams."
  shortDescription: "Path of the Oracle Kerberos cache file."
  name: "spring.flyway.oracle-kerberos-cache-file"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Path of the Oracle Kerberos config file. Requires Flyway Teams."
  shortDescription: "Path of the Oracle Kerberos config file."
  name: "spring.flyway.oracle-kerberos-config-file"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable support for Oracle SQL*Plus commands. Requires Flyway\
    \ Teams."
  shortDescription: "Whether to enable support for Oracle SQL*Plus commands."
  name: "spring.flyway.oracle-sqlplus"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to issue a warning rather than an error when a not-yet-supported\
    \ Oracle SQL*Plus statement is encountered. Requires Flyway Teams."
  shortDescription: "Whether to issue a warning rather than an error when a not-yet-supported\
    \ Oracle SQL*Plus statement is encountered."
  name: "spring.flyway.oracle-sqlplus-warn"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to allow migrations to be run out of order."
  shortDescription: "Whether to allow migrations to be run out of order."
  name: "spring.flyway.out-of-order"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether Flyway should output a table with the results of queries when\
    \ executing migrations. Requires Flyway Teams."
  shortDescription: "Whether Flyway should output a table with the results of queries\
    \ when executing migrations."
  name: "spring.flyway.output-query-results"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Login password of the database to migrate."
  shortDescription: "Login password of the database to migrate."
  name: "spring.flyway.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Prefix of placeholders in migration scripts."
  shortDescription: "Prefix of placeholders in migration scripts."
  name: "spring.flyway.placeholder-prefix"
  defaultValue: "${"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Perform placeholder replacement in migration scripts."
  shortDescription: "Perform placeholder replacement in migration scripts."
  name: "spring.flyway.placeholder-replacement"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Suffix of placeholders in migration scripts."
  shortDescription: "Suffix of placeholders in migration scripts."
  name: "spring.flyway.placeholder-suffix"
  defaultValue: "}"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Placeholders and their replacements to apply to sql migration scripts."
  shortDescription: "Placeholders and their replacements to apply to sql migration\
    \ scripts."
  name: "spring.flyway.placeholders"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "File name prefix for repeatable SQL migrations."
  shortDescription: "File name prefix for repeatable SQL migrations."
  name: "spring.flyway.repeatable-sql-migration-prefix"
  defaultValue: "R"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.List<java.lang.String>"
  description: "Scheme names managed by Flyway (case-sensitive)."
  shortDescription: "Scheme names managed by Flyway (case-sensitive)."
  name: "spring.flyway.schemas"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to skip default callbacks. If true, only custom callbacks\
    \ are used."
  shortDescription: "Whether to skip default callbacks."
  name: "spring.flyway.skip-default-callbacks"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to skip default resolvers. If true, only custom resolvers\
    \ are used."
  shortDescription: "Whether to skip default resolvers."
  name: "spring.flyway.skip-default-resolvers"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether Flyway should skip executing the contents of the migrations\
    \ and only update the schema history table. Requires Flyway teams."
  shortDescription: "Whether Flyway should skip executing the contents of the migrations\
    \ and only update the schema history table."
  name: "spring.flyway.skip-executing-migrations"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "File name prefix for SQL migrations."
  shortDescription: "File name prefix for SQL migrations."
  name: "spring.flyway.sql-migration-prefix"
  defaultValue: "V"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "File name separator for SQL migrations."
  shortDescription: "File name separator for SQL migrations."
  name: "spring.flyway.sql-migration-separator"
  defaultValue: "__"
- type: "java.lang.String"
  name: "spring.flyway.sql-migration-suffix"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.flyway.sql-migration-suffixes"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.List<java.lang.String>"
  description: "File name suffix for SQL migrations."
  shortDescription: "File name suffix for SQL migrations."
  name: "spring.flyway.sql-migration-suffixes"
  defaultValue:
  - ".sql"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to stream SQL migrations when executing them. Requires Flyway\
    \ Teams."
  shortDescription: "Whether to stream SQL migrations when executing them."
  name: "spring.flyway.stream"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Name of the schema history table that will be used by Flyway."
  shortDescription: "Name of the schema history table that will be used by Flyway."
  name: "spring.flyway.table"
  defaultValue: "flyway_schema_history"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Tablespace in which the schema history table is created. Ignored when\
    \ using a database that does not support tablespaces. Defaults to the default\
    \ tablespace of the connection used by Flyway."
  shortDescription: "Tablespace in which the schema history table is created."
  name: "spring.flyway.tablespace"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Target version up to which migrations should be considered."
  shortDescription: "Target version up to which migrations should be considered."
  name: "spring.flyway.target"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "File name prefix for undo SQL migrations. Requires Flyway Teams."
  shortDescription: "File name prefix for undo SQL migrations."
  name: "spring.flyway.undo-sql-migration-prefix"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Flyway pro edition only."
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "JDBC url of the database to migrate. If not set, the primary configured\
    \ data source is used."
  shortDescription: "JDBC url of the database to migrate."
  name: "spring.flyway.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Login user of the database to migrate."
  shortDescription: "Login user of the database to migrate."
  name: "spring.flyway.user"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to validate migrations and callbacks whose scripts do not\
    \ obey the correct naming convention."
  shortDescription: "Whether to validate migrations and callbacks whose scripts do\
    \ not obey the correct naming convention."
  name: "spring.flyway.validate-migration-naming"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically call validate when performing a migration."
  shortDescription: "Whether to automatically call validate when performing a migration."
  name: "spring.flyway.validate-on-migrate"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of paths to secrets that contain Flyway configurations.\
    \ This must start with the name of the engine followed by '/data/' and end with\
    \ the name of the secret. The resulting form is '{engine}/data/{path}/{to}/{secret_name}'.\
    \ Requires Flyway teams."
  shortDescription: "Comma-separated list of paths to secrets that contain Flyway\
    \ configurations."
  name: "spring.flyway.vault-secrets"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Vault token required to access secrets. Requires Flyway teams."
  shortDescription: "Vault token required to access secrets."
  name: "spring.flyway.vault-token"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "REST API URL of the Vault server. Requires Flyway teams."
  shortDescription: "REST API URL of the Vault server."
  name: "spring.flyway.vault-url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpServletRequest attributes are allowed to override (hide)\
    \ controller generated model attributes of the same name."
  shortDescription: "Whether HttpServletRequest attributes are allowed to override\
    \ (hide) controller generated model attributes of the same name."
  name: "spring.freemarker.allow-request-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpSession attributes are allowed to override (hide) controller\
    \ generated model attributes of the same name."
  shortDescription: "Whether HttpSession attributes are allowed to override (hide)\
    \ controller generated model attributes of the same name."
  name: "spring.freemarker.allow-session-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable template caching."
  shortDescription: "Whether to enable template caching."
  name: "spring.freemarker.cache"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.nio.charset.Charset"
  description: "Template encoding."
  shortDescription: "Template encoding."
  name: "spring.freemarker.charset"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the templates location exists."
  shortDescription: "Whether to check that the templates location exists."
  name: "spring.freemarker.check-template-location"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "org.springframework.util.MimeType"
  description: "Content-Type value."
  shortDescription: "Content-Type value."
  name: "spring.freemarker.content-type"
  defaultValue: "text/html"
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable MVC view resolution for this technology."
  shortDescription: "Whether to enable MVC view resolution for this technology."
  name: "spring.freemarker.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether all request attributes should be added to the model prior\
    \ to merging with the template."
  shortDescription: "Whether all request attributes should be added to the model prior\
    \ to merging with the template."
  name: "spring.freemarker.expose-request-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether all HttpSession attributes should be added to the model prior\
    \ to merging with the template."
  shortDescription: "Whether all HttpSession attributes should be added to the model\
    \ prior to merging with the template."
  name: "spring.freemarker.expose-session-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to expose a RequestContext for use by Spring's macro library,\
    \ under the name \"springMacroRequestContext\"."
  shortDescription: "Whether to expose a RequestContext for use by Spring's macro\
    \ library, under the name \"springMacroRequestContext\"."
  name: "spring.freemarker.expose-spring-macro-helpers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to prefer file system access for template loading to enable\
    \ hot detection of template changes. When a template path is detected as a directory,\
    \ templates are loaded from the directory only and other matching classpath locations\
    \ will not be considered."
  shortDescription: "Whether to prefer file system access for template loading to\
    \ enable hot detection of template changes."
  name: "spring.freemarker.prefer-file-system-access"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String"
  description: "Prefix that gets prepended to view names when building a URL."
  shortDescription: "Prefix that gets prepended to view names when building a URL."
  name: "spring.freemarker.prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String"
  description: "Name of the RequestContext attribute for all views."
  shortDescription: "Name of the RequestContext attribute for all views."
  name: "spring.freemarker.request-context-attribute"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Well-known FreeMarker keys which are passed to FreeMarker's Configuration."
  shortDescription: "Well-known FreeMarker keys which are passed to FreeMarker's Configuration."
  name: "spring.freemarker.settings"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String"
  description: "Suffix that gets appended to view names when building a URL."
  shortDescription: "Suffix that gets appended to view names when building a URL."
  name: "spring.freemarker.suffix"
  defaultValue: ".ftlh"
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String[]"
  description: "Comma-separated list of template paths."
  shortDescription: "Comma-separated list of template paths."
  name: "spring.freemarker.template-loader-path"
  defaultValue:
  - "classpath:/templates/"
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String[]"
  description: "View names that can be resolved."
  shortDescription: "View names that can be resolved."
  name: "spring.freemarker.view-names"
  defaultValue: ""
- type: "java.lang.String"
  description: "Resource reference to a generated git info properties file."
  shortDescription: "Resource reference to a generated git info properties file."
  name: "spring.git.properties"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.info.git.location"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpServletRequest attributes are allowed to override (hide)\
    \ controller generated model attributes of the same name."
  shortDescription: "Whether HttpServletRequest attributes are allowed to override\
    \ (hide) controller generated model attributes of the same name."
  name: "spring.groovy.template.allow-request-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpSession attributes are allowed to override (hide) controller\
    \ generated model attributes of the same name."
  shortDescription: "Whether HttpSession attributes are allowed to override (hide)\
    \ controller generated model attributes of the same name."
  name: "spring.groovy.template.allow-session-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable template caching."
  shortDescription: "Whether to enable template caching."
  name: "spring.groovy.template.cache"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.nio.charset.Charset"
  description: "Template encoding."
  shortDescription: "Template encoding."
  name: "spring.groovy.template.charset"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the templates location exists."
  shortDescription: "Whether to check that the templates location exists."
  name: "spring.groovy.template.check-template-location"
  defaultValue: true
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.auto-escape"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.auto-indent"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.String"
  name: "spring.groovy.template.configuration.auto-indent-string"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.auto-new-line"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Class<? extends groovy.text.markup.BaseTemplate>"
  name: "spring.groovy.template.configuration.base-template-class"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.cache-templates"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.String"
  name: "spring.groovy.template.configuration.declaration-encoding"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.expand-empty-elements"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.util.Locale"
  name: "spring.groovy.template.configuration.locale"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.String"
  name: "spring.groovy.template.configuration.new-line-string"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.String"
  name: "spring.groovy.template.configuration.resource-loader-path"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.use-double-quotes"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "org.springframework.util.MimeType"
  description: "Content-Type value."
  shortDescription: "Content-Type value."
  name: "spring.groovy.template.content-type"
  defaultValue: "text/html"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable MVC view resolution for this technology."
  shortDescription: "Whether to enable MVC view resolution for this technology."
  name: "spring.groovy.template.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether all request attributes should be added to the model prior\
    \ to merging with the template."
  shortDescription: "Whether all request attributes should be added to the model prior\
    \ to merging with the template."
  name: "spring.groovy.template.expose-request-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether all HttpSession attributes should be added to the model prior\
    \ to merging with the template."
  shortDescription: "Whether all HttpSession attributes should be added to the model\
    \ prior to merging with the template."
  name: "spring.groovy.template.expose-session-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether to expose a RequestContext for use by Spring's macro library,\
    \ under the name \"springMacroRequestContext\"."
  shortDescription: "Whether to expose a RequestContext for use by Spring's macro\
    \ library, under the name \"springMacroRequestContext\"."
  name: "spring.groovy.template.expose-spring-macro-helpers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String"
  description: "Prefix that gets prepended to view names when building a URL."
  shortDescription: "Prefix that gets prepended to view names when building a URL."
  name: "spring.groovy.template.prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String"
  description: "Name of the RequestContext attribute for all views."
  shortDescription: "Name of the RequestContext attribute for all views."
  name: "spring.groovy.template.request-context-attribute"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String"
  description: "Template path."
  shortDescription: "Template path."
  name: "spring.groovy.template.resource-loader-path"
  defaultValue: "classpath:/templates/"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String"
  description: "Suffix that gets appended to view names when building a URL."
  shortDescription: "Suffix that gets appended to view names when building a URL."
  name: "spring.groovy.template.suffix"
  defaultValue: ".tpl"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String[]"
  description: "View names that can be resolved."
  shortDescription: "View names that can be resolved."
  name: "spring.groovy.template.view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.String"
  description: "Format to use when serializing Date objects."
  shortDescription: "Format to use when serializing Date objects."
  name: "spring.gson.date-format"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to disable the escaping of HTML characters such as '<', '>',\
    \ etc."
  shortDescription: "Whether to disable the escaping of HTML characters such as '<',\
    \ '>', etc."
  name: "spring.gson.disable-html-escaping"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to exclude inner classes during serialization."
  shortDescription: "Whether to exclude inner classes during serialization."
  name: "spring.gson.disable-inner-class-serialization"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable serialization of complex map keys (i.e. non-primitives)."
  shortDescription: "Whether to enable serialization of complex map keys (i.e. non-primitives)."
  name: "spring.gson.enable-complex-map-key-serialization"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to exclude all fields from consideration for serialization\
    \ or deserialization that do not have the \"Expose\" annotation."
  shortDescription: "Whether to exclude all fields from consideration for serialization\
    \ or deserialization that do not have the \"Expose\" annotation."
  name: "spring.gson.exclude-fields-without-expose-annotation"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "com.google.gson.FieldNamingPolicy"
  description: "Naming policy that should be applied to an object's field during serialization\
    \ and deserialization."
  shortDescription: "Naming policy that should be applied to an object's field during\
    \ serialization and deserialization."
  name: "spring.gson.field-naming-policy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to generate non executable JSON by prefixing the output with\
    \ some special text."
  shortDescription: "Whether to generate non executable JSON by prefixing the output\
    \ with some special text."
  name: "spring.gson.generate-non-executable-json"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to be lenient about parsing JSON that doesn't conform to RFC\
    \ 4627."
  shortDescription: "Whether to be lenient about parsing JSON that doesn't conform\
    \ to RFC 4627."
  name: "spring.gson.lenient"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "com.google.gson.LongSerializationPolicy"
  description: "Serialization policy for Long and long types."
  shortDescription: "Serialization policy for Long and long types."
  name: "spring.gson.long-serialization-policy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to output serialized JSON that fits in a page for pretty printing."
  shortDescription: "Whether to output serialized JSON that fits in a page for pretty\
    \ printing."
  name: "spring.gson.pretty-printing"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to serialize null fields."
  shortDescription: "Whether to serialize null fields."
  name: "spring.gson.serialize-nulls"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable the console."
  shortDescription: "Whether to enable the console."
  name: "spring.h2.console.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties"
  type: "java.lang.String"
  description: "Path at which the console is available."
  shortDescription: "Path at which the console is available."
  name: "spring.h2.console.path"
  defaultValue: "/h2-console"
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties$Settings"
  type: "java.lang.Boolean"
  description: "Whether to enable trace output."
  shortDescription: "Whether to enable trace output."
  name: "spring.h2.console.settings.trace"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties$Settings"
  type: "java.lang.String"
  description: "Password to access preferences and tools of H2 Console."
  shortDescription: "Password to access preferences and tools of H2 Console."
  name: "spring.h2.console.settings.web-admin-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties$Settings"
  type: "java.lang.Boolean"
  description: "Whether to enable remote access."
  shortDescription: "Whether to enable remote access."
  name: "spring.h2.console.settings.web-allow-others"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.hateoas.HateoasProperties"
  type: "java.lang.Boolean"
  description: "Whether application/hal+json responses should be sent to requests\
    \ that accept application/json."
  shortDescription: "Whether application/hal+json responses should be sent to requests\
    \ that accept application/json."
  name: "spring.hateoas.use-hal-as-default-json-media-type"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties"
  type: "org.springframework.core.io.Resource"
  description: "The location of the configuration file to use to initialize Hazelcast."
  shortDescription: "The location of the configuration file to use to initialize Hazelcast."
  name: "spring.hazelcast.config"
  defaultValue: ""
- type: "java.lang.String"
  description: "Preferred JSON mapper to use for HTTP message conversion. By default,\
    \ auto-detected according to the environment."
  shortDescription: "Preferred JSON mapper to use for HTTP message conversion."
  name: "spring.http.converters.preferred-json-mapper"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.mvc.converters.preferred-json-mapper"
- type: "java.nio.charset.Charset"
  description: "Charset of HTTP requests and responses. Added to the Content-Type\
    \ header if not set explicitly."
  shortDescription: "Charset of HTTP requests and responses."
  name: "spring.http.encoding.charset"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.charset"
- type: "java.lang.Boolean"
  description: "Whether to enable http encoding support."
  shortDescription: "Whether to enable http encoding support."
  name: "spring.http.encoding.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.enabled"
- type: "java.lang.Boolean"
  description: "Whether to force the encoding to the configured charset on HTTP requests\
    \ and responses."
  shortDescription: "Whether to force the encoding to the configured charset on HTTP\
    \ requests and responses."
  name: "spring.http.encoding.force"
  defaultValue: false
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.force"
- type: "java.lang.Boolean"
  description: "Whether to force the encoding to the configured charset on HTTP requests.\
    \ Defaults to true when force has not been specified."
  shortDescription: "Whether to force the encoding to the configured charset on HTTP\
    \ requests."
  name: "spring.http.encoding.force-request"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.force-request"
- type: "java.lang.Boolean"
  description: "Whether to force the encoding to the configured charset on HTTP responses."
  shortDescription: "Whether to force the encoding to the configured charset on HTTP\
    \ responses."
  name: "spring.http.encoding.force-response"
  defaultValue: false
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.force-response"
- type: "java.util.Map<java.util.Locale,java.nio.charset.Charset>"
  description: "Locale in which to encode mapping."
  shortDescription: "Locale in which to encode mapping."
  name: "spring.http.encoding.mapping"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.mapping"
- type: "java.lang.Boolean"
  description: "Whether logging of (potentially sensitive) request details at DEBUG\
    \ and TRACE level is allowed."
  shortDescription: "Whether logging of (potentially sensitive) request details at\
    \ DEBUG and TRACE level is allowed."
  name: "spring.http.log-request-details"
  defaultValue: false
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.mvc.log-request-details"
- owner: "org.springframework.boot.autoconfigure.influx.InfluxDbProperties"
  type: "java.lang.String"
  description: "Login password."
  shortDescription: "Login password."
  name: "spring.influx.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.influx.InfluxDbProperties"
  type: "java.lang.String"
  description: "URL of the InfluxDB instance to which to connect."
  shortDescription: "URL of the InfluxDB instance to which to connect."
  name: "spring.influx.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.influx.InfluxDbProperties"
  type: "java.lang.String"
  description: "Login user."
  shortDescription: "Login user."
  name: "spring.influx.user"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
  type: "java.nio.charset.Charset"
  description: "File encoding."
  shortDescription: "File encoding."
  name: "spring.info.build.encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
  type: "org.springframework.core.io.Resource"
  description: "Location of the generated build-info.properties file."
  shortDescription: "Location of the generated build-info.properties file."
  name: "spring.info.build.location"
  defaultValue: "classpath:META-INF/build-info.properties"
- owner: "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
  type: "java.nio.charset.Charset"
  description: "File encoding."
  shortDescription: "File encoding."
  name: "spring.info.git.encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
  type: "org.springframework.core.io.Resource"
  description: "Location of the generated git.properties file."
  shortDescription: "Location of the generated git.properties file."
  name: "spring.info.git.location"
  defaultValue: "classpath:git.properties"
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Channel"
  type: "java.lang.Boolean"
  description: "Whether to create input channels if necessary."
  shortDescription: "Whether to create input channels if necessary."
  name: "spring.integration.channel.auto-create"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Channel"
  type: "java.lang.Integer"
  description: "Default number of subscribers allowed on, for example, a 'PublishSubscribeChannel'."
  shortDescription: "Default number of subscribers allowed on, for example, a 'PublishSubscribeChannel'."
  name: "spring.integration.channel.max-broadcast-subscribers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Channel"
  type: "java.lang.Integer"
  description: "Default number of subscribers allowed on, for example, a 'DirectChannel'."
  shortDescription: "Default number of subscribers allowed on, for example, a 'DirectChannel'."
  name: "spring.integration.channel.max-unicast-subscribers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Endpoint"
  type: "java.util.List<java.lang.String>"
  description: "A comma-separated list of endpoint bean names patterns that should\
    \ not be started automatically during application startup."
  shortDescription: "A comma-separated list of endpoint bean names patterns that should\
    \ not be started automatically during application startup."
  name: "spring.integration.endpoint.no-auto-startup"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Endpoint"
  type: "java.util.List<java.lang.String>"
  description: "A comma-separated list of message header names that should not be\
    \ populated into Message instances during a header copying operation."
  shortDescription: "A comma-separated list of message header names that should not\
    \ be populated into Message instances during a header copying operation."
  name: "spring.integration.endpoint.read-only-headers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Endpoint"
  type: "java.lang.Boolean"
  description: "Whether to throw an exception when a reply is not expected anymore\
    \ by a gateway."
  shortDescription: "Whether to throw an exception when a reply is not expected anymore\
    \ by a gateway."
  name: "spring.integration.endpoint.throw-exception-on-late-reply"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Error"
  type: "java.lang.Boolean"
  description: "Whether to ignore failures for one or more of the handlers of the\
    \ global 'errorChannel'."
  shortDescription: "Whether to ignore failures for one or more of the handlers of\
    \ the global 'errorChannel'."
  name: "spring.integration.error.ignore-failures"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Error"
  type: "java.lang.Boolean"
  description: "Whether to not silently ignore messages on the global 'errorChannel'\
    \ when they are no subscribers."
  shortDescription: "Whether to not silently ignore messages on the global 'errorChannel'\
    \ when they are no subscribers."
  name: "spring.integration.error.require-subscribers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Jdbc"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Database schema initialization mode."
  shortDescription: "Database schema initialization mode."
  name: "spring.integration.jdbc.initialize-schema"
  defaultValue: "embedded"
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Jdbc"
  type: "java.lang.String"
  description: "Path to the SQL file to use to initialize the database schema."
  shortDescription: "Path to the SQL file to use to initialize the database schema."
  name: "spring.integration.jdbc.schema"
  defaultValue: "classpath:org/springframework/integration/jdbc/schema-@@platform@@.sql"
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Client"
  type: "java.lang.String"
  description: "TCP RSocket server host to connect to."
  shortDescription: "TCP RSocket server host to connect to."
  name: "spring.integration.rsocket.client.host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Client"
  type: "java.lang.Integer"
  description: "TCP RSocket server port to connect to."
  shortDescription: "TCP RSocket server port to connect to."
  name: "spring.integration.rsocket.client.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Client"
  type: "java.net.URI"
  description: "WebSocket RSocket server uri to connect to."
  shortDescription: "WebSocket RSocket server uri to connect to."
  name: "spring.integration.rsocket.client.uri"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Server"
  type: "java.lang.Boolean"
  description: "Whether to handle message mapping for RSocket via Spring Integration."
  shortDescription: "Whether to handle message mapping for RSocket via Spring Integration."
  name: "spring.integration.rsocket.server.message-mapping-enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.lang.String"
  description: "Date format string or a fully-qualified date format class name. For\
    \ instance, `yyyy-MM-dd HH:mm:ss`."
  shortDescription: "Date format string or a fully-qualified date format class name."
  name: "spring.jackson.date-format"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "com.fasterxml.jackson.annotation.JsonInclude$Include"
  description: "Controls the inclusion of properties during serialization. Configured\
    \ with one of the values in Jackson's JsonInclude.Include enumeration."
  shortDescription: "Controls the inclusion of properties during serialization."
  name: "spring.jackson.default-property-inclusion"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.databind.DeserializationFeature,java.lang.Boolean>"
  description: "Jackson on/off features that affect the way Java objects are deserialized."
  shortDescription: "Jackson on/off features that affect the way Java objects are\
    \ deserialized."
  name: "spring.jackson.deserialization"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.core.JsonGenerator$Feature,java.lang.Boolean>"
  description: "Jackson on/off features for generators."
  shortDescription: "Jackson on/off features for generators."
  name: "spring.jackson.generator"
  defaultValue: ""
- type: "java.lang.String"
  description: "Joda date time format string. If not configured, \"date-format\" is\
    \ used as a fallback if it is configured with a format string."
  shortDescription: "Joda date time format string."
  name: "spring.jackson.joda-date-time-format"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Locale"
  description: "Locale used for formatting."
  shortDescription: "Locale used for formatting."
  name: "spring.jackson.locale"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.databind.MapperFeature,java.lang.Boolean>"
  description: "Jackson general purpose on/off features."
  shortDescription: "Jackson general purpose on/off features."
  name: "spring.jackson.mapper"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.core.JsonParser$Feature,java.lang.Boolean>"
  description: "Jackson on/off features for parsers."
  shortDescription: "Jackson on/off features for parsers."
  name: "spring.jackson.parser"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.lang.String"
  description: "One of the constants on Jackson's PropertyNamingStrategies. Can also\
    \ be a fully-qualified class name of a PropertyNamingStrategy implementation."
  shortDescription: "One of the constants on Jackson's PropertyNamingStrategies."
  name: "spring.jackson.property-naming-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.databind.SerializationFeature,java.lang.Boolean>"
  description: "Jackson on/off features that affect the way Java objects are serialized."
  shortDescription: "Jackson on/off features that affect the way Java objects are\
    \ serialized."
  name: "spring.jackson.serialization"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.TimeZone"
  description: "Time zone used when formatting dates. For instance, \"America/Los_Angeles\"\
    \ or \"GMT+10\"."
  shortDescription: "Time zone used when formatting dates."
  name: "spring.jackson.time-zone"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility>"
  description: "Jackson visibility thresholds that can be used to limit which methods\
    \ (and fields) are auto-detected."
  shortDescription: "Jackson visibility thresholds that can be used to limit which\
    \ methods (and fields) are auto-detected."
  name: "spring.jackson.visibility"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
  type: "java.lang.Integer"
  description: "Number of rows that should be fetched from the database when more\
    \ rows are needed. Use -1 to use the JDBC driver's default configuration."
  shortDescription: "Number of rows that should be fetched from the database when\
    \ more rows are needed."
  name: "spring.jdbc.template.fetch-size"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
  type: "java.lang.Integer"
  description: "Maximum number of rows. Use -1 to use the JDBC driver's default configuration."
  shortDescription: "Maximum number of rows."
  name: "spring.jdbc.template.max-rows"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
  type: "java.time.Duration"
  description: "Query timeout. Default is to use the JDBC driver's default configuration.\
    \ If a duration suffix is not specified, seconds will be used."
  shortDescription: "Query timeout."
  name: "spring.jdbc.template.query-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties"
  type: "java.lang.String"
  description: "Path that serves as the base URI for the application. If specified,\
    \ overrides the value of \"@ApplicationPath\"."
  shortDescription: "Path that serves as the base URI for the application."
  name: "spring.jersey.application-path"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties$Filter"
  type: "java.lang.Integer"
  description: "Jersey filter chain order."
  shortDescription: "Jersey filter chain order."
  name: "spring.jersey.filter.order"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Init parameters to pass to Jersey through the servlet or filter."
  shortDescription: "Init parameters to pass to Jersey through the servlet or filter."
  name: "spring.jersey.init"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties$Servlet"
  type: "java.lang.Integer"
  description: "Load on startup priority of the Jersey servlet."
  shortDescription: "Load on startup priority of the Jersey servlet."
  name: "spring.jersey.servlet.load-on-startup"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties"
  type: "org.springframework.boot.autoconfigure.jersey.JerseyProperties$Type"
  description: "Jersey integration type."
  shortDescription: "Jersey integration type."
  name: "spring.jersey.type"
  defaultValue: "servlet"
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Cache"
  type: "java.lang.Boolean"
  description: "Whether to cache message consumers."
  shortDescription: "Whether to cache message consumers."
  name: "spring.jms.cache.consumers"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Cache"
  type: "java.lang.Boolean"
  description: "Whether to cache sessions."
  shortDescription: "Whether to cache sessions."
  name: "spring.jms.cache.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Cache"
  type: "java.lang.Boolean"
  description: "Whether to cache message producers."
  shortDescription: "Whether to cache message producers."
  name: "spring.jms.cache.producers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Cache"
  type: "java.lang.Integer"
  description: "Size of the session cache (per JMS Session type)."
  shortDescription: "Size of the session cache (per JMS Session type)."
  name: "spring.jms.cache.session-cache-size"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties"
  type: "java.lang.String"
  description: "Connection factory JNDI name. When set, takes precedence to others\
    \ connection factory auto-configurations."
  shortDescription: "Connection factory JNDI name."
  name: "spring.jms.jndi-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "org.springframework.boot.autoconfigure.jms.JmsProperties$AcknowledgeMode"
  description: "Acknowledge mode of the container. By default, the listener is transacted\
    \ with automatic acknowledgment."
  shortDescription: "Acknowledge mode of the container."
  name: "spring.jms.listener.acknowledge-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "java.lang.Boolean"
  description: "Start the container automatically on startup."
  shortDescription: "Start the container automatically on startup."
  name: "spring.jms.listener.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "java.lang.Integer"
  description: "Minimum number of concurrent consumers."
  shortDescription: "Minimum number of concurrent consumers."
  name: "spring.jms.listener.concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "java.lang.Integer"
  description: "Maximum number of concurrent consumers."
  shortDescription: "Maximum number of concurrent consumers."
  name: "spring.jms.listener.max-concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "java.time.Duration"
  description: "Timeout to use for receive calls. Use -1 for a no-wait receive or\
    \ 0 for no timeout at all. The latter is only feasible if not running within a\
    \ transaction manager and is generally discouraged since it prevents clean shutdown."
  shortDescription: "Timeout to use for receive calls."
  name: "spring.jms.listener.receive-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties"
  type: "java.lang.Boolean"
  description: "Whether the default destination type is topic."
  shortDescription: "Whether the default destination type is topic."
  name: "spring.jms.pub-sub-domain"
  defaultValue: false
- owner: "com.microsoft.azure.spring.autoconfigure.jms.AzureServiceBusJMSProperties"
  type: "java.lang.String"
  name: "spring.jms.servicebus.connection-string"
  defaultValue: ""
- owner: "com.microsoft.azure.spring.autoconfigure.jms.AzureServiceBusJMSProperties"
  type: "java.lang.Integer"
  name: "spring.jms.servicebus.idle-timeout"
  defaultValue: 1800000
- owner: "com.microsoft.azure.spring.autoconfigure.jms.AzureServiceBusJMSProperties"
  type: "java.lang.String"
  description: "JMS clientID"
  shortDescription: "JMS clientID"
  name: "spring.jms.servicebus.topic-client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.lang.String"
  description: "Default destination to use on send and receive operations that do\
    \ not have a destination parameter."
  shortDescription: "Default destination to use on send and receive operations that\
    \ do not have a destination parameter."
  name: "spring.jms.template.default-destination"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.time.Duration"
  description: "Delivery delay to use for send calls."
  shortDescription: "Delivery delay to use for send calls."
  name: "spring.jms.template.delivery-delay"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "org.springframework.boot.autoconfigure.jms.JmsProperties$DeliveryMode"
  description: "Delivery mode. Enables QoS (Quality of Service) when set."
  shortDescription: "Delivery mode."
  name: "spring.jms.template.delivery-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.lang.Integer"
  description: "Priority of a message when sending. Enables QoS (Quality of Service)\
    \ when set."
  shortDescription: "Priority of a message when sending."
  name: "spring.jms.template.priority"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether to enable explicit QoS (Quality of Service) when sending a\
    \ message. When enabled, the delivery mode, priority and time-to-live properties\
    \ will be used when sending a message. QoS is automatically enabled when at least\
    \ one of those settings is customized."
  shortDescription: "Whether to enable explicit QoS (Quality of Service) when sending\
    \ a message."
  name: "spring.jms.template.qos-enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.time.Duration"
  description: "Timeout to use for receive calls."
  shortDescription: "Timeout to use for receive calls."
  name: "spring.jms.template.receive-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.time.Duration"
  description: "Time-to-live of a message when sending. Enables QoS (Quality of Service)\
    \ when set."
  shortDescription: "Time-to-live of a message when sending."
  name: "spring.jms.template.time-to-live"
  defaultValue: ""
- type: "java.lang.String"
  description: "JMX domain name."
  shortDescription: "JMX domain name."
  name: "spring.jmx.default-domain"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Expose management beans to the JMX domain."
  shortDescription: "Expose management beans to the JMX domain."
  name: "spring.jmx.enabled"
  defaultValue: false
- type: "java.lang.String"
  description: "MBeanServer bean name."
  shortDescription: "MBeanServer bean name."
  name: "spring.jmx.server"
  defaultValue: "mbeanServer"
- type: "java.lang.Boolean"
  description: "Whether unique runtime object names should be ensured."
  shortDescription: "Whether unique runtime object names should be ensured."
  name: "spring.jmx.unique-names"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jooq.JooqProperties"
  type: "org.jooq.SQLDialect"
  description: "SQL dialect to use. Auto-detected by default."
  shortDescription: "SQL dialect to use."
  name: "spring.jooq.sql-dialect"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "org.springframework.orm.jpa.vendor.Database"
  description: "Target database to operate on, auto-detected by default. Can be alternatively\
    \ set using the \"databasePlatform\" property."
  shortDescription: "Target database to operate on, auto-detected by default."
  name: "spring.jpa.database"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.lang.String"
  description: "Name of the target database to operate on, auto-detected by default.\
    \ Can be alternatively set using the \"Database\" enum."
  shortDescription: "Name of the target database to operate on, auto-detected by default."
  name: "spring.jpa.database-platform"
  defaultValue: ""
- type: "java.lang.Boolean"
  name: "spring.jpa.defer-datasource-initialization"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.lang.Boolean"
  description: "Whether to initialize the schema on startup."
  shortDescription: "Whether to initialize the schema on startup."
  name: "spring.jpa.generate-ddl"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties"
  type: "java.lang.String"
  description: "DDL mode. This is actually a shortcut for the \"hibernate.hbm2ddl.auto\"\
    \ property. Defaults to \"create-drop\" when using an embedded database and no\
    \ schema manager was detected. Otherwise, defaults to \"none\"."
  shortDescription: "DDL mode."
  name: "spring.jpa.hibernate.ddl-auto"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming"
  type: "java.lang.String"
  description: "Fully qualified name of the implicit naming strategy."
  shortDescription: "Fully qualified name of the implicit naming strategy."
  name: "spring.jpa.hibernate.naming.implicit-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming"
  type: "java.lang.String"
  description: "Fully qualified name of the physical naming strategy."
  shortDescription: "Fully qualified name of the physical naming strategy."
  name: "spring.jpa.hibernate.naming.physical-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties"
  type: "java.lang.Boolean"
  description: "Whether to use Hibernate's newer IdentifierGenerator for AUTO, TABLE\
    \ and SEQUENCE. This is actually a shortcut for the \"hibernate.id.new_generator_mappings\"\
    \ property. When not specified will default to \"true\"."
  shortDescription: "Whether to use Hibernate's newer IdentifierGenerator for AUTO,\
    \ TABLE and SEQUENCE."
  name: "spring.jpa.hibernate.use-new-id-generator-mappings"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.util.List<java.lang.String>"
  description: "Mapping resources (equivalent to \"mapping-file\" entries in persistence.xml)."
  shortDescription: "Mapping resources (equivalent to \"mapping-file\" entries in\
    \ persistence.xml)."
  name: "spring.jpa.mapping-resources"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.lang.Boolean"
  description: "Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager\
    \ to the thread for the entire processing of the request."
  shortDescription: "Register OpenEntityManagerInViewInterceptor."
  name: "spring.jpa.open-in-view"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional native properties to set on the JPA provider."
  shortDescription: "Additional native properties to set on the JPA provider."
  name: "spring.jpa.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable logging of SQL statements."
  shortDescription: "Whether to enable logging of SQL statements."
  name: "spring.jpa.show-sql"
  defaultValue: false
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for borrowing connections from the pool."
  shortDescription: "Timeout, in seconds, for borrowing connections from the pool."
  name: "spring.jta.atomikos.connectionfactory.borrow-connection-timeout"
  defaultValue: 30
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether to ignore the transacted flag when creating session."
  shortDescription: "Whether to ignore the transacted flag when creating session."
  name: "spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether local transactions are desired."
  shortDescription: "Whether local transactions are desired."
  name: "spring.jta.atomikos.connectionfactory.local-transaction-mode"
  defaultValue: false
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, between runs of the pool's maintenance thread."
  shortDescription: "Time, in seconds, between runs of the pool's maintenance thread."
  name: "spring.jta.atomikos.connectionfactory.maintenance-interval"
  defaultValue: 60
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, after which connections are cleaned up from the\
    \ pool."
  shortDescription: "Time, in seconds, after which connections are cleaned up from\
    \ the pool."
  name: "spring.jta.atomikos.connectionfactory.max-idle-time"
  defaultValue: 60
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, that a connection can be pooled for before being\
    \ destroyed. 0 denotes no limit."
  shortDescription: "Time, in seconds, that a connection can be pooled for before\
    \ being destroyed. 0 denotes no limit."
  name: "spring.jta.atomikos.connectionfactory.max-lifetime"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Maximum size of the pool."
  shortDescription: "Maximum size of the pool."
  name: "spring.jta.atomikos.connectionfactory.max-pool-size"
  defaultValue: 1
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Minimum size of the pool."
  shortDescription: "Minimum size of the pool."
  name: "spring.jta.atomikos.connectionfactory.min-pool-size"
  defaultValue: 1
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Reap timeout, in seconds, for borrowed connections. 0 denotes no limit."
  shortDescription: "Reap timeout, in seconds, for borrowed connections. 0 denotes\
    \ no limit."
  name: "spring.jta.atomikos.connectionfactory.reap-timeout"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.String"
  description: "Unique name used to identify the resource during recovery."
  shortDescription: "Unique name used to identify the resource during recovery."
  name: "spring.jta.atomikos.connectionfactory.unique-resource-name"
  defaultValue: "jmsConnectionFactory"
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.String"
  description: "Vendor-specific implementation of XAConnectionFactory."
  shortDescription: "Vendor-specific implementation of XAConnectionFactory."
  name: "spring.jta.atomikos.connectionfactory.xa-connection-factory-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.util.Properties"
  description: "Vendor-specific XA properties."
  shortDescription: "Vendor-specific XA properties."
  name: "spring.jta.atomikos.connectionfactory.xa-properties"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for borrowing connections from the pool."
  shortDescription: "Timeout, in seconds, for borrowing connections from the pool."
  name: "spring.jta.atomikos.datasource.borrow-connection-timeout"
  defaultValue: 30
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether to use concurrent connection validation."
  shortDescription: "Whether to use concurrent connection validation."
  name: "spring.jta.atomikos.datasource.concurrent-connection-validation"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Default isolation level of connections provided by the pool."
  shortDescription: "Default isolation level of connections provided by the pool."
  name: "spring.jta.atomikos.datasource.default-isolation-level"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for establishing a database connection."
  shortDescription: "Timeout, in seconds, for establishing a database connection."
  name: "spring.jta.atomikos.datasource.login-timeout"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, between runs of the pool's maintenance thread."
  shortDescription: "Time, in seconds, between runs of the pool's maintenance thread."
  name: "spring.jta.atomikos.datasource.maintenance-interval"
  defaultValue: 60
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, after which connections are cleaned up from the\
    \ pool."
  shortDescription: "Time, in seconds, after which connections are cleaned up from\
    \ the pool."
  name: "spring.jta.atomikos.datasource.max-idle-time"
  defaultValue: 60
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, that a connection can be pooled for before being\
    \ destroyed. 0 denotes no limit."
  shortDescription: "Time, in seconds, that a connection can be pooled for before\
    \ being destroyed. 0 denotes no limit."
  name: "spring.jta.atomikos.datasource.max-lifetime"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Maximum size of the pool."
  shortDescription: "Maximum size of the pool."
  name: "spring.jta.atomikos.datasource.max-pool-size"
  defaultValue: 1
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Minimum size of the pool."
  shortDescription: "Minimum size of the pool."
  name: "spring.jta.atomikos.datasource.min-pool-size"
  defaultValue: 1
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Reap timeout, in seconds, for borrowed connections. 0 denotes no limit."
  shortDescription: "Reap timeout, in seconds, for borrowed connections. 0 denotes\
    \ no limit."
  name: "spring.jta.atomikos.datasource.reap-timeout"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.String"
  description: "SQL query or statement used to validate a connection before returning\
    \ it."
  shortDescription: "SQL query or statement used to validate a connection before returning\
    \ it."
  name: "spring.jta.atomikos.datasource.test-query"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.String"
  description: "Unique name used to identify the resource during recovery."
  shortDescription: "Unique name used to identify the resource during recovery."
  name: "spring.jta.atomikos.datasource.unique-resource-name"
  defaultValue: "dataSource"
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.String"
  description: "Vendor-specific implementation of XAConnectionFactory."
  shortDescription: "Vendor-specific implementation of XAConnectionFactory."
  name: "spring.jta.atomikos.datasource.xa-data-source-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.util.Properties"
  description: "Vendor-specific XA properties."
  shortDescription: "Vendor-specific XA properties."
  name: "spring.jta.atomikos.datasource.xa-properties"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Specify whether sub-transactions are allowed."
  shortDescription: "Specify whether sub-transactions are allowed."
  name: "spring.jta.atomikos.properties.allow-sub-transactions"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Long"
  description: "Interval between checkpoints, expressed as the number of log writes\
    \ between two checkpoints. A checkpoint reduces the log file size at the expense\
    \ of adding some overhead in the runtime."
  shortDescription: "Interval between checkpoints, expressed as the number of log\
    \ writes between two checkpoints."
  name: "spring.jta.atomikos.properties.checkpoint-interval"
  defaultValue: 500
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.time.Duration"
  description: "Default timeout for JTA transactions."
  shortDescription: "Default timeout for JTA transactions."
  name: "spring.jta.atomikos.properties.default-jta-timeout"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Long"
  description: "How long should normal shutdown (no-force) wait for transactions to\
    \ complete."
  shortDescription: "How long should normal shutdown (no-force) wait for transactions\
    \ to complete."
  name: "spring.jta.atomikos.properties.default-max-wait-time-on-shutdown"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable disk logging."
  shortDescription: "Whether to enable disk logging."
  name: "spring.jta.atomikos.properties.enable-logging"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Whether a VM shutdown should trigger forced shutdown of the transaction\
    \ core."
  shortDescription: "Whether a VM shutdown should trigger forced shutdown of the transaction\
    \ core."
  name: "spring.jta.atomikos.properties.force-shutdown-on-vm-exit"
  defaultValue: false
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.String"
  description: "Directory in which the log files should be stored. Defaults to the\
    \ current working directory."
  shortDescription: "Directory in which the log files should be stored."
  name: "spring.jta.atomikos.properties.log-base-dir"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.String"
  description: "Transactions log file base name."
  shortDescription: "Transactions log file base name."
  name: "spring.jta.atomikos.properties.log-base-name"
  defaultValue: "tmlog"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Integer"
  description: "Maximum number of active transactions."
  shortDescription: "Maximum number of active transactions."
  name: "spring.jta.atomikos.properties.max-actives"
  defaultValue: 50
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.time.Duration"
  description: "Maximum timeout that can be allowed for transactions."
  shortDescription: "Maximum timeout that can be allowed for transactions."
  name: "spring.jta.atomikos.properties.max-timeout"
  defaultValue: "300000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery"
  type: "java.time.Duration"
  description: "Delay between two recovery scans."
  shortDescription: "Delay between two recovery scans."
  name: "spring.jta.atomikos.properties.recovery.delay"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery"
  type: "java.time.Duration"
  description: "Delay after which recovery can cleanup pending ('orphaned') log entries."
  shortDescription: "Delay after which recovery can cleanup pending ('orphaned') log\
    \ entries."
  name: "spring.jta.atomikos.properties.recovery.forget-orphaned-log-entries-delay"
  defaultValue: "86400000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery"
  type: "java.lang.Integer"
  description: "Number of retry attempts to commit the transaction before throwing\
    \ an exception."
  shortDescription: "Number of retry attempts to commit the transaction before throwing\
    \ an exception."
  name: "spring.jta.atomikos.properties.recovery.max-retries"
  defaultValue: 5
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery"
  type: "java.time.Duration"
  description: "Delay between retry attempts."
  shortDescription: "Delay between retry attempts."
  name: "spring.jta.atomikos.properties.recovery.retry-interval"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Whether sub-transactions should be joined when possible."
  shortDescription: "Whether sub-transactions should be joined when possible."
  name: "spring.jta.atomikos.properties.serial-jta-transactions"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.String"
  description: "Transaction manager implementation that should be started."
  shortDescription: "Transaction manager implementation that should be started."
  name: "spring.jta.atomikos.properties.service"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Whether to use different (and concurrent) threads for two-phase commit\
    \ on the participating resources."
  shortDescription: "Whether to use different (and concurrent) threads for two-phase\
    \ commit on the participating resources."
  name: "spring.jta.atomikos.properties.threaded-two-phase-commit"
  defaultValue: false
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.String"
  description: "The transaction manager's unique name. Defaults to the machine's IP\
    \ address. If you plan to run more than one transaction manager against one database\
    \ you must set this property to a unique value."
  shortDescription: "The transaction manager's unique name."
  name: "spring.jta.atomikos.properties.transaction-manager-unique-name"
  defaultValue: ""
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.connectionfactory.acquire-increment"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.connectionfactory.acquisition-interval"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.connectionfactory.acquisition-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.allow-local-transactions"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.apply-transaction-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.automatic-enlisting-enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.cache-producers-consumers"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.connectionfactory.class-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.defer-connection-release"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.disabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.util.Properties"
  name: "spring.jta.bitronix.connectionfactory.driver-properties"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.ignore-recovery-failures"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.connectionfactory.max-idle-time"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.connectionfactory.max-pool-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.connectionfactory.min-pool-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.connectionfactory.password"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.share-transaction-connections"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.test-connections"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.connectionfactory.two-pc-ordering-position"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.connectionfactory.unique-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.use-tm-join"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.connectionfactory.user"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.datasource.acquire-increment"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.datasource.acquisition-interval"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.datasource.acquisition-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.allow-local-transactions"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.apply-transaction-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.automatic-enlisting-enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.datasource.class-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.datasource.cursor-holdability"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.defer-connection-release"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.disabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.util.Properties"
  name: "spring.jta.bitronix.datasource.driver-properties"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.enable-jdbc4-connection-test"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.ignore-recovery-failures"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.datasource.isolation-level"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.datasource.local-auto-commit"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.datasource.login-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.datasource.max-idle-time"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.datasource.max-pool-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.datasource.min-pool-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.datasource.prepared-statement-cache-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.share-transaction-connections"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.datasource.test-query"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.datasource.two-pc-ordering-position"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.datasource.unique-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.use-tm-join"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.allow-multiple-lrc"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.asynchronous2-pc"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.properties.background-recovery-interval"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.properties.background-recovery-interval-seconds"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.current-node-only-recovery"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.debug-zero-resource-transaction"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.properties.default-transaction-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.disable-jmx"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.properties.exception-analyzer"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.filter-log-status"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.force-batching-enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.forced-write-enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.properties.graceful-shutdown-interval"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.properties.jndi-user-transaction-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.properties.journal"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.properties.log-part1-filename"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.properties.log-part2-filename"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  name: "spring.jta.bitronix.properties.max-log-size-in-mb"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.properties.resource-configuration-filename"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  name: "spring.jta.bitronix.properties.server-id"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.skip-corrupted-logs"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  name: "spring.jta.bitronix.properties.warn-about-zero-resource-transaction"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  description: "Whether to enable JTA support."
  shortDescription: "Whether to enable JTA support."
  name: "spring.jta.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.transaction.jta.JtaProperties"
  type: "java.lang.String"
  description: "Transaction logs directory."
  shortDescription: "Transaction logs directory."
  name: "spring.jta.log-dir"
  defaultValue: ""
- type: "java.time.Duration"
  description: "Transaction timeout. If a duration suffix is not specified, seconds\
    \ will be used."
  shortDescription: "Transaction timeout."
  name: "spring.jta.narayana.default-timeout"
  defaultValue: "60s"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of expiry scanners."
  shortDescription: "Comma-separated list of expiry scanners."
  name: "spring.jta.narayana.expiry-scanners"
  defaultValue:
  - "com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "Transaction object store directory."
  shortDescription: "Transaction object store directory."
  name: "spring.jta.narayana.log-dir"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.Boolean"
  description: "Whether to enable one phase commit optimization."
  shortDescription: "Whether to enable one phase commit optimization."
  name: "spring.jta.narayana.one-phase-commit"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.time.Duration"
  description: "Interval in which periodic recovery scans are performed. If a duration\
    \ suffix is not specified, seconds will be used."
  shortDescription: "Interval in which periodic recovery scans are performed."
  name: "spring.jta.narayana.periodic-recovery-period"
  defaultValue: "120s"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.time.Duration"
  description: "Back off period between first and second phases of the recovery scan.\
    \ If a duration suffix is not specified, seconds will be used."
  shortDescription: "Back off period between first and second phases of the recovery\
    \ scan."
  name: "spring.jta.narayana.recovery-backoff-period"
  defaultValue: "10s"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "Database password to be used by the recovery manager."
  shortDescription: "Database password to be used by the recovery manager."
  name: "spring.jta.narayana.recovery-db-pass"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "Database username to be used by the recovery manager."
  shortDescription: "Database username to be used by the recovery manager."
  name: "spring.jta.narayana.recovery-db-user"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "JMS password to be used by the recovery manager."
  shortDescription: "JMS password to be used by the recovery manager."
  name: "spring.jta.narayana.recovery-jms-pass"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "JMS username to be used by the recovery manager."
  shortDescription: "JMS username to be used by the recovery manager."
  name: "spring.jta.narayana.recovery-jms-user"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of recovery modules."
  shortDescription: "Comma-separated list of recovery modules."
  name: "spring.jta.narayana.recovery-modules"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "Unique transaction manager id."
  shortDescription: "Unique transaction manager id."
  name: "spring.jta.narayana.transaction-manager-id"
  defaultValue: "1"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of orphan filters."
  shortDescription: "Comma-separated list of orphan filters."
  name: "spring.jta.narayana.xa-resource-orphan-filters"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- owner: "org.springframework.boot.autoconfigure.transaction.jta.JtaProperties"
  type: "java.lang.String"
  description: "Transaction manager unique identifier."
  shortDescription: "Transaction manager unique identifier."
  name: "spring.jta.transaction-manager-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  shortDescription: "ID to pass to the server when making requests."
  name: "spring.kafka.admin.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin"
  type: "java.lang.Boolean"
  description: "Whether to fail fast if the broker is not available on startup."
  shortDescription: "Whether to fail fast if the broker is not available on startup."
  name: "spring.kafka.admin.fail-fast"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional admin-specific properties used to configure the client."
  shortDescription: "Additional admin-specific properties used to configure the client."
  name: "spring.kafka.admin.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  shortDescription: "Security protocol used to communicate with brokers."
  name: "spring.kafka.admin.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  shortDescription: "Password of the private key in the key store file."
  name: "spring.kafka.admin.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  shortDescription: "Location of the key store file."
  name: "spring.kafka.admin.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  shortDescription: "Store password for the key store file."
  name: "spring.kafka.admin.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  shortDescription: "Type of the key store."
  name: "spring.kafka.admin.ssl.key-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  shortDescription: "Location of the key store file."
  name: "spring.kafka.admin.ssl.keystore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.admin.ssl.key-store-location"
- type: "java.lang.String"
  description: "Store password for the key store file."
  shortDescription: "Store password for the key store file."
  name: "spring.kafka.admin.ssl.keystore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.admin.ssl.key-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  shortDescription: "SSL protocol to use."
  name: "spring.kafka.admin.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  shortDescription: "Location of the trust store file."
  name: "spring.kafka.admin.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  shortDescription: "Store password for the trust store file."
  name: "spring.kafka.admin.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  shortDescription: "Type of the trust store."
  name: "spring.kafka.admin.ssl.trust-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  shortDescription: "Location of the trust store file."
  name: "spring.kafka.admin.ssl.truststore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.admin.ssl.trust-store-location"
- type: "java.lang.String"
  description: "Store password for the trust store file."
  shortDescription: "Store password for the trust store file."
  name: "spring.kafka.admin.ssl.truststore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.admin.ssl.trust-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-delimited list of host:port pairs to use for establishing the\
    \ initial connections to the Kafka cluster. Applies to all components unless overridden."
  shortDescription: "Comma-delimited list of host:port pairs to use for establishing\
    \ the initial connections to the Kafka cluster."
  name: "spring.kafka.bootstrap-servers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  shortDescription: "ID to pass to the server when making requests."
  name: "spring.kafka.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.time.Duration"
  description: "Frequency with which the consumer offsets are auto-committed to Kafka\
    \ if 'enable.auto.commit' is set to true."
  shortDescription: "Frequency with which the consumer offsets are auto-committed\
    \ to Kafka if 'enable.auto.commit' is set to true."
  name: "spring.kafka.consumer.auto-commit-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.String"
  description: "What to do when there is no initial offset in Kafka or if the current\
    \ offset no longer exists on the server."
  shortDescription: "What to do when there is no initial offset in Kafka or if the\
    \ current offset no longer exists on the server."
  name: "spring.kafka.consumer.auto-offset-reset"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.util.List<java.lang.String>"
  description: "Comma-delimited list of host:port pairs to use for establishing the\
    \ initial connections to the Kafka cluster. Overrides the global property, for\
    \ consumers."
  shortDescription: "Comma-delimited list of host:port pairs to use for establishing\
    \ the initial connections to the Kafka cluster."
  name: "spring.kafka.consumer.bootstrap-servers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  shortDescription: "ID to pass to the server when making requests."
  name: "spring.kafka.consumer.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.Boolean"
  description: "Whether the consumer's offset is periodically committed in the background."
  shortDescription: "Whether the consumer's offset is periodically committed in the\
    \ background."
  name: "spring.kafka.consumer.enable-auto-commit"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.time.Duration"
  description: "Maximum amount of time the server blocks before answering the fetch\
    \ request if there isn't sufficient data to immediately satisfy the requirement\
    \ given by \"fetch-min-size\"."
  shortDescription: "Maximum amount of time the server blocks before answering the\
    \ fetch request if there isn't sufficient data to immediately satisfy the requirement\
    \ given by \"fetch-min-size\"."
  name: "spring.kafka.consumer.fetch-max-wait"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "org.springframework.util.unit.DataSize"
  description: "Minimum amount of data the server should return for a fetch request."
  shortDescription: "Minimum amount of data the server should return for a fetch request."
  name: "spring.kafka.consumer.fetch-min-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.String"
  description: "Unique string that identifies the consumer group to which this consumer\
    \ belongs."
  shortDescription: "Unique string that identifies the consumer group to which this\
    \ consumer belongs."
  name: "spring.kafka.consumer.group-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.time.Duration"
  description: "Expected time between heartbeats to the consumer coordinator."
  shortDescription: "Expected time between heartbeats to the consumer coordinator."
  name: "spring.kafka.consumer.heartbeat-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$IsolationLevel"
  description: "Isolation level for reading messages that have been written transactionally."
  shortDescription: "Isolation level for reading messages that have been written transactionally."
  name: "spring.kafka.consumer.isolation-level"
  defaultValue: "read-uncommitted"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.Class<?>"
  description: "Deserializer class for keys."
  shortDescription: "Deserializer class for keys."
  name: "spring.kafka.consumer.key-deserializer"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.Integer"
  description: "Maximum number of records returned in a single call to poll()."
  shortDescription: "Maximum number of records returned in a single call to poll()."
  name: "spring.kafka.consumer.max-poll-records"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional consumer-specific properties used to configure the client."
  shortDescription: "Additional consumer-specific properties used to configure the\
    \ client."
  name: "spring.kafka.consumer.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  shortDescription: "Security protocol used to communicate with brokers."
  name: "spring.kafka.consumer.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  shortDescription: "Password of the private key in the key store file."
  name: "spring.kafka.consumer.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  shortDescription: "Location of the key store file."
  name: "spring.kafka.consumer.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  shortDescription: "Store password for the key store file."
  name: "spring.kafka.consumer.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  shortDescription: "Type of the key store."
  name: "spring.kafka.consumer.ssl.key-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  shortDescription: "Location of the key store file."
  name: "spring.kafka.consumer.ssl.keystore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.consumer.ssl.key-store-location"
- type: "java.lang.String"
  description: "Store password for the key store file."
  shortDescription: "Store password for the key store file."
  name: "spring.kafka.consumer.ssl.keystore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.consumer.ssl.key-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  shortDescription: "SSL protocol to use."
  name: "spring.kafka.consumer.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  shortDescription: "Location of the trust store file."
  name: "spring.kafka.consumer.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  shortDescription: "Store password for the trust store file."
  name: "spring.kafka.consumer.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  shortDescription: "Type of the trust store."
  name: "spring.kafka.consumer.ssl.trust-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  shortDescription: "Location of the trust store file."
  name: "spring.kafka.consumer.ssl.truststore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.consumer.ssl.trust-store-location"
- type: "java.lang.String"
  description: "Store password for the trust store file."
  shortDescription: "Store password for the trust store file."
  name: "spring.kafka.consumer.ssl.truststore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.consumer.ssl.trust-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.Class<?>"
  description: "Deserializer class for values."
  shortDescription: "Deserializer class for values."
  name: "spring.kafka.consumer.value-deserializer"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas"
  type: "org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer$ControlFlag"
  description: "Control flag for login configuration."
  shortDescription: "Control flag for login configuration."
  name: "spring.kafka.jaas.control-flag"
  defaultValue: "required"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas"
  type: "java.lang.Boolean"
  description: "Whether to enable JAAS configuration."
  shortDescription: "Whether to enable JAAS configuration."
  name: "spring.kafka.jaas.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas"
  type: "java.lang.String"
  description: "Login module."
  shortDescription: "Login module."
  name: "spring.kafka.jaas.login-module"
  defaultValue: "com.sun.security.auth.module.Krb5LoginModule"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional JAAS options."
  shortDescription: "Additional JAAS options."
  name: "spring.kafka.jaas.options"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Integer"
  description: "Number of records between offset commits when ackMode is \"COUNT\"\
    \ or \"COUNT_TIME\"."
  shortDescription: "Number of records between offset commits when ackMode is \"COUNT\"\
    \ or \"COUNT_TIME\"."
  name: "spring.kafka.listener.ack-count"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "org.springframework.kafka.listener.ContainerProperties$AckMode"
  description: "Listener AckMode. See the spring-kafka documentation."
  shortDescription: "Listener AckMode."
  name: "spring.kafka.listener.ack-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Time between offset commits when ackMode is \"TIME\" or \"COUNT_TIME\"\
    ."
  shortDescription: "Time between offset commits when ackMode is \"TIME\" or \"COUNT_TIME\"\
    ."
  name: "spring.kafka.listener.ack-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.String"
  description: "Prefix for the listener's consumer client.id property."
  shortDescription: "Prefix for the listener's consumer client.id property."
  name: "spring.kafka.listener.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Integer"
  description: "Number of threads to run in the listener containers."
  shortDescription: "Number of threads to run in the listener containers."
  name: "spring.kafka.listener.concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Sleep interval between Consumer.poll(Duration) calls."
  shortDescription: "Sleep interval between Consumer.poll(Duration) calls."
  name: "spring.kafka.listener.idle-between-polls"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Time between publishing idle consumer events (no data received)."
  shortDescription: "Time between publishing idle consumer events (no data received)."
  name: "spring.kafka.listener.idle-event-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Boolean"
  description: "Whether to log the container configuration during initialization (INFO\
    \ level)."
  shortDescription: "Whether to log the container configuration during initialization\
    \ (INFO level)."
  name: "spring.kafka.listener.log-container-config"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Boolean"
  description: "Whether the container should fail to start if at least one of the\
    \ configured topics are not present on the broker."
  shortDescription: "Whether the container should fail to start if at least one of\
    \ the configured topics are not present on the broker."
  name: "spring.kafka.listener.missing-topics-fatal"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Time between checks for non-responsive consumers. If a duration suffix\
    \ is not specified, seconds will be used."
  shortDescription: "Time between checks for non-responsive consumers."
  name: "spring.kafka.listener.monitor-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Float"
  description: "Multiplier applied to \"pollTimeout\" to determine if a consumer is\
    \ non-responsive."
  shortDescription: "Multiplier applied to \"pollTimeout\" to determine if a consumer\
    \ is non-responsive."
  name: "spring.kafka.listener.no-poll-threshold"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Boolean"
  description: "Whether to suppress the entire record from being written to the log\
    \ when retries are being attempted."
  shortDescription: "Whether to suppress the entire record from being written to the\
    \ log when retries are being attempted."
  name: "spring.kafka.listener.only-log-record-metadata"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Timeout to use when polling the consumer."
  shortDescription: "Timeout to use when polling the consumer."
  name: "spring.kafka.listener.poll-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener$Type"
  description: "Listener type."
  shortDescription: "Listener type."
  name: "spring.kafka.listener.type"
  defaultValue: "single"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.String"
  description: "Number of acknowledgments the producer requires the leader to have\
    \ received before considering a request complete."
  shortDescription: "Number of acknowledgments the producer requires the leader to\
    \ have received before considering a request complete."
  name: "spring.kafka.producer.acks"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "org.springframework.util.unit.DataSize"
  description: "Default batch size. A small batch size will make batching less common\
    \ and may reduce throughput (a batch size of zero disables batching entirely)."
  shortDescription: "Default batch size."
  name: "spring.kafka.producer.batch-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.util.List<java.lang.String>"
  description: "Comma-delimited list of host:port pairs to use for establishing the\
    \ initial connections to the Kafka cluster. Overrides the global property, for\
    \ producers."
  shortDescription: "Comma-delimited list of host:port pairs to use for establishing\
    \ the initial connections to the Kafka cluster."
  name: "spring.kafka.producer.bootstrap-servers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "org.springframework.util.unit.DataSize"
  description: "Total memory size the producer can use to buffer records waiting to\
    \ be sent to the server."
  shortDescription: "Total memory size the producer can use to buffer records waiting\
    \ to be sent to the server."
  name: "spring.kafka.producer.buffer-memory"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  shortDescription: "ID to pass to the server when making requests."
  name: "spring.kafka.producer.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.String"
  description: "Compression type for all data generated by the producer."
  shortDescription: "Compression type for all data generated by the producer."
  name: "spring.kafka.producer.compression-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.Class<?>"
  description: "Serializer class for keys."
  shortDescription: "Serializer class for keys."
  name: "spring.kafka.producer.key-serializer"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional producer-specific properties used to configure the client."
  shortDescription: "Additional producer-specific properties used to configure the\
    \ client."
  name: "spring.kafka.producer.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.Integer"
  description: "When greater than zero, enables retrying of failed sends."
  shortDescription: "When greater than zero, enables retrying of failed sends."
  name: "spring.kafka.producer.retries"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  shortDescription: "Security protocol used to communicate with brokers."
  name: "spring.kafka.producer.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  shortDescription: "Password of the private key in the key store file."
  name: "spring.kafka.producer.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  shortDescription: "Location of the key store file."
  name: "spring.kafka.producer.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  shortDescription: "Store password for the key store file."
  name: "spring.kafka.producer.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  shortDescription: "Type of the key store."
  name: "spring.kafka.producer.ssl.key-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  shortDescription: "Location of the key store file."
  name: "spring.kafka.producer.ssl.keystore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.producer.ssl.key-store-location"
- type: "java.lang.String"
  description: "Store password for the key store file."
  shortDescription: "Store password for the key store file."
  name: "spring.kafka.producer.ssl.keystore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.producer.ssl.key-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  shortDescription: "SSL protocol to use."
  name: "spring.kafka.producer.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  shortDescription: "Location of the trust store file."
  name: "spring.kafka.producer.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  shortDescription: "Store password for the trust store file."
  name: "spring.kafka.producer.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  shortDescription: "Type of the trust store."
  name: "spring.kafka.producer.ssl.trust-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  shortDescription: "Location of the trust store file."
  name: "spring.kafka.producer.ssl.truststore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.producer.ssl.trust-store-location"
- type: "java.lang.String"
  description: "Store password for the trust store file."
  shortDescription: "Store password for the trust store file."
  name: "spring.kafka.producer.ssl.truststore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.producer.ssl.trust-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.String"
  description: "When non empty, enables transaction support for producer."
  shortDescription: "When non empty, enables transaction support for producer."
  name: "spring.kafka.producer.transaction-id-prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.Class<?>"
  description: "Serializer class for values."
  shortDescription: "Serializer class for values."
  name: "spring.kafka.producer.value-serializer"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional properties, common to producers and consumers, used to\
    \ configure the client."
  shortDescription: "Additional properties, common to producers and consumers, used\
    \ to configure the client."
  name: "spring.kafka.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  shortDescription: "Security protocol used to communicate with brokers."
  name: "spring.kafka.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  shortDescription: "Password of the private key in the key store file."
  name: "spring.kafka.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  shortDescription: "Location of the key store file."
  name: "spring.kafka.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  shortDescription: "Store password for the key store file."
  name: "spring.kafka.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  shortDescription: "Type of the key store."
  name: "spring.kafka.ssl.key-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  shortDescription: "Location of the key store file."
  name: "spring.kafka.ssl.keystore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.ssl.key-store-location"
- type: "java.lang.String"
  description: "Store password for the key store file."
  shortDescription: "Store password for the key store file."
  name: "spring.kafka.ssl.keystore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.ssl.key-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  shortDescription: "SSL protocol to use."
  name: "spring.kafka.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  shortDescription: "Location of the trust store file."
  name: "spring.kafka.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  shortDescription: "Store password for the trust store file."
  name: "spring.kafka.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  shortDescription: "Type of the trust store."
  name: "spring.kafka.ssl.trust-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  shortDescription: "Location of the trust store file."
  name: "spring.kafka.ssl.truststore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.ssl.trust-store-location"
- type: "java.lang.String"
  description: "Store password for the trust store file."
  shortDescription: "Store password for the trust store file."
  name: "spring.kafka.ssl.truststore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.ssl.trust-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.String"
  description: "Kafka streams application.id property; default spring.application.name."
  shortDescription: "Kafka streams application.id property; default spring.application.name."
  name: "spring.kafka.streams.application-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.Boolean"
  description: "Whether or not to auto-start the streams factory bean."
  shortDescription: "Whether or not to auto-start the streams factory bean."
  name: "spring.kafka.streams.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.util.List<java.lang.String>"
  description: "Comma-delimited list of host:port pairs to use for establishing the\
    \ initial connections to the Kafka cluster. Overrides the global property, for\
    \ streams."
  shortDescription: "Comma-delimited list of host:port pairs to use for establishing\
    \ the initial connections to the Kafka cluster."
  name: "spring.kafka.streams.bootstrap-servers"
  defaultValue: ""
- type: "java.lang.Integer"
  name: "spring.kafka.streams.cache-max-bytes-buffering"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.streams.cache-max-size-buffering"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum memory size to be used for buffering across all threads."
  shortDescription: "Maximum memory size to be used for buffering across all threads."
  name: "spring.kafka.streams.cache-max-size-buffering"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Cleanup"
  type: "java.lang.Boolean"
  description: "Cleanup the application’s local state directory on shutdown."
  shortDescription: "Cleanup the application’s local state directory on shutdown."
  name: "spring.kafka.streams.cleanup.on-shutdown"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Cleanup"
  type: "java.lang.Boolean"
  description: "Cleanup the application’s local state directory on startup."
  shortDescription: "Cleanup the application’s local state directory on startup."
  name: "spring.kafka.streams.cleanup.on-startup"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  shortDescription: "ID to pass to the server when making requests."
  name: "spring.kafka.streams.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional Kafka properties used to configure the streams."
  shortDescription: "Additional Kafka properties used to configure the streams."
  name: "spring.kafka.streams.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.Integer"
  description: "The replication factor for change log topics and repartition topics\
    \ created by the stream processing application."
  shortDescription: "The replication factor for change log topics and repartition\
    \ topics created by the stream processing application."
  name: "spring.kafka.streams.replication-factor"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  shortDescription: "Security protocol used to communicate with brokers."
  name: "spring.kafka.streams.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  shortDescription: "Password of the private key in the key store file."
  name: "spring.kafka.streams.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  shortDescription: "Location of the key store file."
  name: "spring.kafka.streams.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  shortDescription: "Store password for the key store file."
  name: "spring.kafka.streams.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  shortDescription: "Type of the key store."
  name: "spring.kafka.streams.ssl.key-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  shortDescription: "SSL protocol to use."
  name: "spring.kafka.streams.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  shortDescription: "Location of the trust store file."
  name: "spring.kafka.streams.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  shortDescription: "Store password for the trust store file."
  name: "spring.kafka.streams.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  shortDescription: "Type of the trust store."
  name: "spring.kafka.streams.ssl.trust-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.String"
  description: "Directory location for the state store."
  shortDescription: "Directory location for the state store."
  name: "spring.kafka.streams.state-dir"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Template"
  type: "java.lang.String"
  description: "Default topic to which messages are sent."
  shortDescription: "Default topic to which messages are sent."
  name: "spring.kafka.template.default-topic"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.Boolean"
  description: "Whether read-only operations should use an anonymous environment.\
    \ Disabled by default unless a username is set."
  shortDescription: "Whether read-only operations should use an anonymous environment."
  name: "spring.ldap.anonymous-read-only"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.String"
  description: "Base suffix from which all operations should originate."
  shortDescription: "Base suffix from which all operations should originate."
  name: "spring.ldap.base"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "LDAP specification settings."
  shortDescription: "LDAP specification settings."
  name: "spring.ldap.base-environment"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of base DNs."
  shortDescription: "List of base DNs."
  name: "spring.ldap.embedded.base-dn"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties$Credential"
  type: "java.lang.String"
  description: "Embedded LDAP password."
  shortDescription: "Embedded LDAP password."
  name: "spring.ldap.embedded.credential.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties$Credential"
  type: "java.lang.String"
  description: "Embedded LDAP username."
  shortDescription: "Embedded LDAP username."
  name: "spring.ldap.embedded.credential.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties"
  type: "java.lang.String"
  description: "Schema (LDIF) script resource reference."
  shortDescription: "Schema (LDIF) script resource reference."
  name: "spring.ldap.embedded.ldif"
  defaultValue: "classpath:schema.ldif"
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties"
  type: "java.lang.Integer"
  description: "Embedded LDAP port."
  shortDescription: "Embedded LDAP port."
  name: "spring.ldap.embedded.port"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties$Validation"
  type: "java.lang.Boolean"
  description: "Whether to enable LDAP schema validation."
  shortDescription: "Whether to enable LDAP schema validation."
  name: "spring.ldap.embedded.validation.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties$Validation"
  type: "org.springframework.core.io.Resource"
  description: "Path to the custom schema."
  shortDescription: "Path to the custom schema."
  name: "spring.ldap.embedded.validation.schema"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.String"
  description: "Login password of the server."
  shortDescription: "Login password of the server."
  name: "spring.ldap.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether NameNotFoundException should be ignored in searches via the\
    \ LdapTemplate."
  shortDescription: "Whether NameNotFoundException should be ignored in searches via\
    \ the LdapTemplate."
  name: "spring.ldap.template.ignore-name-not-found-exception"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether PartialResultException should be ignored in searches via the\
    \ LdapTemplate."
  shortDescription: "Whether PartialResultException should be ignored in searches\
    \ via the LdapTemplate."
  name: "spring.ldap.template.ignore-partial-result-exception"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether SizeLimitExceededException should be ignored in searches via\
    \ the LdapTemplate."
  shortDescription: "Whether SizeLimitExceededException should be ignored in searches\
    \ via the LdapTemplate."
  name: "spring.ldap.template.ignore-size-limit-exceeded-exception"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.String[]"
  description: "LDAP URLs of the server."
  shortDescription: "LDAP URLs of the server."
  name: "spring.ldap.urls"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.String"
  description: "Login username of the server."
  shortDescription: "Login username of the server."
  name: "spring.ldap.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.context.LifecycleProperties"
  type: "java.time.Duration"
  description: "Timeout for the shutdown of any phase (group of SmartLifecycle beans\
    \ with the same 'phase' value)."
  shortDescription: "Timeout for the shutdown of any phase (group of SmartLifecycle\
    \ beans with the same 'phase' value)."
  name: "spring.lifecycle.timeout-per-shutdown-phase"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Change log configuration path."
  shortDescription: "Change log configuration path."
  name: "spring.liquibase.change-log"
  defaultValue: "classpath:/db/changelog/db.changelog-master.yaml"
- type: "java.lang.Boolean"
  description: "Check the change log location exists."
  shortDescription: "Check the change log location exists."
  name: "spring.liquibase.check-change-log-location"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Liquibase has it's own check that checks if the change log location\
    \ exists making this property redundant."
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.Boolean"
  description: "Whether to clear all checksums in the current changelog, so they will\
    \ be recalculated upon the next update."
  shortDescription: "Whether to clear all checksums in the current changelog, so they\
    \ will be recalculated upon the next update."
  name: "spring.liquibase.clear-checksums"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Comma-separated list of runtime contexts to use."
  shortDescription: "Comma-separated list of runtime contexts to use."
  name: "spring.liquibase.contexts"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Name of table to use for tracking concurrent Liquibase usage."
  shortDescription: "Name of table to use for tracking concurrent Liquibase usage."
  name: "spring.liquibase.database-change-log-lock-table"
  defaultValue: "DATABASECHANGELOGLOCK"
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Name of table to use for tracking change history."
  shortDescription: "Name of table to use for tracking change history."
  name: "spring.liquibase.database-change-log-table"
  defaultValue: "DATABASECHANGELOG"
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Default database schema."
  shortDescription: "Default database schema."
  name: "spring.liquibase.default-schema"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Fully qualified name of the JDBC driver. Auto-detected based on the\
    \ URL by default."
  shortDescription: "Fully qualified name of the JDBC driver."
  name: "spring.liquibase.driver-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.Boolean"
  description: "Whether to first drop the database schema."
  shortDescription: "Whether to first drop the database schema."
  name: "spring.liquibase.drop-first"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable Liquibase support."
  shortDescription: "Whether to enable Liquibase support."
  name: "spring.liquibase.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Comma-separated list of runtime labels to use."
  shortDescription: "Comma-separated list of runtime labels to use."
  name: "spring.liquibase.labels"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Schema to use for Liquibase objects."
  shortDescription: "Schema to use for Liquibase objects."
  name: "spring.liquibase.liquibase-schema"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Tablespace to use for Liquibase objects."
  shortDescription: "Tablespace to use for Liquibase objects."
  name: "spring.liquibase.liquibase-tablespace"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Change log parameters."
  shortDescription: "Change log parameters."
  name: "spring.liquibase.parameters"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Login password of the database to migrate."
  shortDescription: "Login password of the database to migrate."
  name: "spring.liquibase.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.io.File"
  description: "File to which rollback SQL is written when an update is performed."
  shortDescription: "File to which rollback SQL is written when an update is performed."
  name: "spring.liquibase.rollback-file"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Tag name to use when applying database changes. Can also be used with\
    \ \"rollbackFile\" to generate a rollback script for all existing changes associated\
    \ with that tag."
  shortDescription: "Tag name to use when applying database changes."
  name: "spring.liquibase.tag"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.Boolean"
  description: "Whether rollback should be tested before update is performed."
  shortDescription: "Whether rollback should be tested before update is performed."
  name: "spring.liquibase.test-rollback-on-update"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "JDBC URL of the database to migrate. If not set, the primary configured\
    \ data source is used."
  shortDescription: "JDBC URL of the database to migrate."
  name: "spring.liquibase.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Login user of the database to migrate."
  shortDescription: "Login user of the database to migrate."
  name: "spring.liquibase.user"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.nio.charset.Charset"
  description: "Default MimeMessage encoding."
  shortDescription: "Default MimeMessage encoding."
  name: "spring.mail.default-encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "SMTP server host. For instance, `smtp.example.com`."
  shortDescription: "SMTP server host."
  name: "spring.mail.host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "Session JNDI name. When set, takes precedence over other Session settings."
  shortDescription: "Session JNDI name."
  name: "spring.mail.jndi-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "Login password of the SMTP server."
  shortDescription: "Login password of the SMTP server."
  name: "spring.mail.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.Integer"
  description: "SMTP server port."
  shortDescription: "SMTP server port."
  name: "spring.mail.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional JavaMail Session properties."
  shortDescription: "Additional JavaMail Session properties."
  name: "spring.mail.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "Protocol used by the SMTP server."
  shortDescription: "Protocol used by the SMTP server."
  name: "spring.mail.protocol"
  defaultValue: "smtp"
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.Boolean"
  description: "Whether to test that the mail server is available on startup."
  shortDescription: "Whether to test that the mail server is available on startup."
  name: "spring.mail.test-connection"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "Login user of the SMTP server."
  shortDescription: "Login user of the SMTP server."
  name: "spring.mail.username"
  defaultValue: ""
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Whether bean definition overriding, by registering a definition with\
    \ the same name as an existing definition, is allowed."
  shortDescription: "Whether bean definition overriding, by registering a definition\
    \ with the same name as an existing definition, is allowed."
  name: "spring.main.allow-bean-definition-overriding"
  defaultValue: false
- owner: "org.springframework.boot.SpringApplication"
  type: "org.springframework.boot.Banner$Mode"
  description: "Mode used to display the banner when the application runs."
  shortDescription: "Mode used to display the banner when the application runs."
  name: "spring.main.banner-mode"
  defaultValue: "console"
- type: "org.springframework.boot.cloud.CloudPlatform"
  description: "Override the Cloud Platform auto-detection."
  shortDescription: "Override the Cloud Platform auto-detection."
  name: "spring.main.cloud-platform"
  defaultValue: ""
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Whether initialization should be performed lazily."
  shortDescription: "Whether initialization should be performed lazily."
  name: "spring.main.lazy-initialization"
  defaultValue: false
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Whether to log information about the application when it starts."
  shortDescription: "Whether to log information about the application when it starts."
  name: "spring.main.log-startup-info"
  defaultValue: true
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Whether the application should have a shutdown hook registered."
  shortDescription: "Whether the application should have a shutdown hook registered."
  name: "spring.main.register-shutdown-hook"
  defaultValue: true
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Display the banner when the application runs."
  shortDescription: "Display the banner when the application runs."
  name: "spring.main.show-banner"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.main.banner-mode"
- owner: "org.springframework.boot.SpringApplication"
  type: "java.util.Set<java.lang.String>"
  description: "Sources (class names, package names, or XML resource locations) to\
    \ include in the ApplicationContext."
  shortDescription: "Sources (class names, package names, or XML resource locations)\
    \ to include in the ApplicationContext."
  name: "spring.main.sources"
  defaultValue: ""
- owner: "org.springframework.boot.SpringApplication"
  type: "org.springframework.boot.WebApplicationType"
  description: "Flag to explicitly request a specific type of web application. If\
    \ not set, auto-detected based on the classpath."
  shortDescription: "Flag to explicitly request a specific type of web application."
  name: "spring.main.web-application-type"
  defaultValue: ""
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Run the application in a web environment (auto-detected by default)."
  shortDescription: "Run the application in a web environment (auto-detected by default)."
  name: "spring.main.web-environment"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.main.web-application-type"
- owner: "org.springframework.boot.context.FileEncodingApplicationListener"
  type: "java.nio.charset.Charset"
  description: "Expected character encoding the application must use."
  shortDescription: "Expected character encoding the application must use."
  name: "spring.mandatory-file-encoding"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to always apply the MessageFormat rules, parsing even messages\
    \ without arguments."
  shortDescription: "Whether to always apply the MessageFormat rules, parsing even\
    \ messages without arguments."
  name: "spring.messages.always-use-message-format"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.lang.String"
  description: "Comma-separated list of basenames (essentially a fully-qualified classpath\
    \ location), each following the ResourceBundle convention with relaxed support\
    \ for slash based locations. If it doesn't contain a package qualifier (such as\
    \ \"org.mypackage\"), it will be resolved from the classpath root."
  shortDescription: "Comma-separated list of basenames (essentially a fully-qualified\
    \ classpath location), each following the ResourceBundle convention with relaxed\
    \ support for slash based locations."
  name: "spring.messages.basename"
  defaultValue: "messages"
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.time.Duration"
  description: "Loaded resource bundle files cache duration. When not set, bundles\
    \ are cached forever. If a duration suffix is not specified, seconds will be used."
  shortDescription: "Loaded resource bundle files cache duration."
  name: "spring.messages.cache-duration"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.nio.charset.Charset"
  description: "Message bundles encoding."
  shortDescription: "Message bundles encoding."
  name: "spring.messages.encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to fall back to the system Locale if no files for a specific\
    \ Locale have been found. if this is turned off, the only fallback will be the\
    \ default file (e.g. \"messages.properties\" for basename \"messages\")."
  shortDescription: "Whether to fall back to the system Locale if no files for a specific\
    \ Locale have been found. if this is turned off, the only fallback will be the\
    \ default file (e.g."
  name: "spring.messages.fallback-to-system-locale"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to use the message code as the default message instead of\
    \ throwing a \"NoSuchMessageException\". Recommended during development only."
  shortDescription: "Whether to use the message code as the default message instead\
    \ of throwing a \"NoSuchMessageException\"."
  name: "spring.messages.use-code-as-default-message"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties"
  type: "java.util.Set<de.flapdoodle.embed.mongo.distribution.Feature>"
  description: "Comma-separated list of features to enable. Uses the defaults of the\
    \ configured version by default."
  shortDescription: "Comma-separated list of features to enable."
  name: "spring.mongodb.embedded.features"
  defaultValue:
  - "sync_delay"
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties$Storage"
  type: "java.lang.String"
  description: "Directory used for data storage."
  shortDescription: "Directory used for data storage."
  name: "spring.mongodb.embedded.storage.database-dir"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties$Storage"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the oplog."
  shortDescription: "Maximum size of the oplog."
  name: "spring.mongodb.embedded.storage.oplog-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties$Storage"
  type: "java.lang.String"
  description: "Name of the replica set."
  shortDescription: "Name of the replica set."
  name: "spring.mongodb.embedded.storage.repl-set-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties"
  type: "java.lang.String"
  description: "Version of Mongo to use."
  shortDescription: "Version of Mongo to use."
  name: "spring.mongodb.embedded.version"
  defaultValue: "3.5.5"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpServletRequest attributes are allowed to override (hide)\
    \ controller generated model attributes of the same name."
  shortDescription: "Whether HttpServletRequest attributes are allowed to override\
    \ (hide) controller generated model attributes of the same name."
  name: "spring.mustache.allow-request-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpSession attributes are allowed to override (hide) controller\
    \ generated model attributes of the same name."
  shortDescription: "Whether HttpSession attributes are allowed to override (hide)\
    \ controller generated model attributes of the same name."
  name: "spring.mustache.allow-session-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable template caching."
  shortDescription: "Whether to enable template caching."
  name: "spring.mustache.cache"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.nio.charset.Charset"
  description: "Template encoding."
  shortDescription: "Template encoding."
  name: "spring.mustache.charset"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the templates location exists."
  shortDescription: "Whether to check that the templates location exists."
  name: "spring.mustache.check-template-location"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "org.springframework.util.MimeType"
  description: "Content-Type value."
  shortDescription: "Content-Type value."
  name: "spring.mustache.content-type"
  defaultValue: "text/html"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable MVC view resolution for this technology."
  shortDescription: "Whether to enable MVC view resolution for this technology."
  name: "spring.mustache.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether all request attributes should be added to the model prior\
    \ to merging with the template."
  shortDescription: "Whether all request attributes should be added to the model prior\
    \ to merging with the template."
  name: "spring.mustache.expose-request-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether all HttpSession attributes should be added to the model prior\
    \ to merging with the template."
  shortDescription: "Whether all HttpSession attributes should be added to the model\
    \ prior to merging with the template."
  name: "spring.mustache.expose-session-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether to expose a RequestContext for use by Spring's macro library,\
    \ under the name \"springMacroRequestContext\"."
  shortDescription: "Whether to expose a RequestContext for use by Spring's macro\
    \ library, under the name \"springMacroRequestContext\"."
  name: "spring.mustache.expose-spring-macro-helpers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.String"
  description: "Prefix to apply to template names."
  shortDescription: "Prefix to apply to template names."
  name: "spring.mustache.prefix"
  defaultValue: "classpath:/templates/"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.String"
  description: "Name of the RequestContext attribute for all views."
  shortDescription: "Name of the RequestContext attribute for all views."
  name: "spring.mustache.request-context-attribute"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.String"
  description: "Suffix to apply to template names."
  shortDescription: "Suffix to apply to template names."
  name: "spring.mustache.suffix"
  defaultValue: ".mustache"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.String[]"
  description: "View names that can be resolved."
  shortDescription: "View names that can be resolved."
  name: "spring.mustache.view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async"
  type: "java.time.Duration"
  description: "Amount of time before asynchronous request handling times out. If\
    \ this value is not set, the default timeout of the underlying implementation\
    \ is used."
  shortDescription: "Amount of time before asynchronous request handling times out."
  name: "spring.mvc.async.request-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  type: "java.lang.Boolean"
  description: "Whether a request parameter (\"format\" by default) should be used\
    \ to determine the requested media type."
  shortDescription: "Whether a request parameter (\"format\" by default) should be\
    \ used to determine the requested media type."
  name: "spring.mvc.contentnegotiation.favor-parameter"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  type: "java.lang.Boolean"
  description: "Whether the path extension in the URL path should be used to determine\
    \ the requested media type. If enabled a request \"/users.pdf\" will be interpreted\
    \ as a request for \"application/pdf\" regardless of the 'Accept' header."
  shortDescription: "Whether the path extension in the URL path should be used to\
    \ determine the requested media type."
  name: "spring.mvc.contentnegotiation.favor-path-extension"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReason: "Use of path extensions for request mapping and for content negotiation\
    \ is discouraged."
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  type: "java.util.Map<java.lang.String,org.springframework.http.MediaType>"
  description: "Map file extensions to media types for content negotiation. For instance,\
    \ yml to text/yaml."
  shortDescription: "Map file extensions to media types for content negotiation."
  name: "spring.mvc.contentnegotiation.media-types"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  type: "java.lang.String"
  description: "Query parameter name to use when \"favor-parameter\" is enabled."
  shortDescription: "Query parameter name to use when \"favor-parameter\" is enabled."
  name: "spring.mvc.contentnegotiation.parameter-name"
  defaultValue: ""
- type: "java.lang.String"
  description: "Preferred JSON mapper to use for HTTP message conversion. By default,\
    \ auto-detected according to the environment."
  shortDescription: "Preferred JSON mapper to use for HTTP message conversion."
  name: "spring.mvc.converters.preferred-json-mapper"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.String"
  name: "spring.mvc.date-format"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.mvc.format.date"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether to dispatch OPTIONS requests to the FrameworkServlet doService\
    \ method."
  shortDescription: "Whether to dispatch OPTIONS requests to the FrameworkServlet\
    \ doService method."
  name: "spring.mvc.dispatch-options-request"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether to dispatch TRACE requests to the FrameworkServlet doService\
    \ method."
  shortDescription: "Whether to dispatch TRACE requests to the FrameworkServlet doService\
    \ method."
  name: "spring.mvc.dispatch-trace-request"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Whether to enable resolution of favicon.ico."
  shortDescription: "Whether to enable resolution of favicon.ico."
  name: "spring.mvc.favicon.enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
  type: "java.lang.String"
  description: "Date format to use, for example `dd/MM/yyyy`."
  shortDescription: "Date format to use, for example `dd/MM/yyyy`."
  name: "spring.mvc.format.date"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
  type: "java.lang.String"
  description: "Date-time format to use, for example `yyyy-MM-dd HH:mm:ss`."
  shortDescription: "Date-time format to use, for example `yyyy-MM-dd HH:mm:ss`."
  name: "spring.mvc.format.date-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
  type: "java.lang.String"
  description: "Time format to use, for example `HH:mm:ss`."
  shortDescription: "Time format to use, for example `HH:mm:ss`."
  name: "spring.mvc.format.time"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable Spring's FormContentFilter."
  shortDescription: "Whether to enable Spring's FormContentFilter."
  name: "spring.mvc.formcontent.filter.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Spring's HttpPutFormContentFilter."
  shortDescription: "Whether to enable Spring's HttpPutFormContentFilter."
  name: "spring.mvc.formcontent.putfilter.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.mvc.formcontent.filter.enabled"
- type: "java.lang.Boolean"
  description: "Whether to enable Spring's HiddenHttpMethodFilter."
  shortDescription: "Whether to enable Spring's HiddenHttpMethodFilter."
  name: "spring.mvc.hiddenmethod.filter.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether the content of the \"default\" model should be ignored during\
    \ redirect scenarios."
  shortDescription: "Whether the content of the \"default\" model should be ignored\
    \ during redirect scenarios."
  name: "spring.mvc.ignore-default-model-on-redirect"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.util.Locale"
  description: "Locale to use. By default, this locale is overridden by the \"Accept-Language\"\
    \ header."
  shortDescription: "Locale to use."
  name: "spring.mvc.locale"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.locale"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$LocaleResolver"
  description: "Define how the locale should be resolved."
  shortDescription: "Define how the locale should be resolved."
  name: "spring.mvc.locale-resolver"
  defaultValue: "accept-header"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.locale-resolver"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether logging of (potentially sensitive) request details at DEBUG\
    \ and TRACE level is allowed."
  shortDescription: "Whether logging of (potentially sensitive) request details at\
    \ DEBUG and TRACE level is allowed."
  name: "spring.mvc.log-request-details"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable warn logging of exceptions resolved by a \"HandlerExceptionResolver\"\
    , except for \"DefaultHandlerExceptionResolver\"."
  shortDescription: "Whether to enable warn logging of exceptions resolved by a \"\
    HandlerExceptionResolver\", except for \"DefaultHandlerExceptionResolver\"."
  name: "spring.mvc.log-resolved-exception"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "org.springframework.validation.DefaultMessageCodesResolver$Format"
  description: "Formatting strategy for message codes. For instance, `PREFIX_ERROR_CODE`."
  shortDescription: "Formatting strategy for message codes."
  name: "spring.mvc.message-codes-resolver-format"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
  type: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
  description: "Choice of strategy for matching request paths against registered mappings."
  shortDescription: "Choice of strategy for matching request paths against registered\
    \ mappings."
  name: "spring.mvc.pathmatch.matching-strategy"
  defaultValue: "ant-path-matcher"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
  type: "java.lang.Boolean"
  description: "Whether suffix pattern matching should work only against extensions\
    \ registered with \"spring.mvc.contentnegotiation.media-types.*\". This is generally\
    \ recommended to reduce ambiguity and to avoid issues such as when a \".\" appears\
    \ in the path for other reasons. Enabling this option is not compatible with the\
    \ PathPatternParser matching strategy."
  shortDescription: "Whether suffix pattern matching should work only against extensions\
    \ registered with \"spring.mvc.contentnegotiation.media-types.*\"."
  name: "spring.mvc.pathmatch.use-registered-suffix-pattern"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReason: "Use of path extensions for request mapping and for content negotiation\
    \ is discouraged."
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
  type: "java.lang.Boolean"
  description: "Whether to use suffix pattern match (\".*\") when matching patterns\
    \ to requests. If enabled a method mapped to \"/users\" also matches to \"/users.*\"\
    . Enabling this option is not compatible with the PathPatternParser matching strategy."
  shortDescription: "Whether to use suffix pattern match (\".*\") when matching patterns\
    \ to requests."
  name: "spring.mvc.pathmatch.use-suffix-pattern"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReason: "Use of path extensions for request mapping and for content negotiation\
    \ is discouraged."
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether to publish a ServletRequestHandledEvent at the end of each\
    \ request."
  shortDescription: "Whether to publish a ServletRequestHandledEvent at the end of\
    \ each request."
  name: "spring.mvc.publish-request-handled-events"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
  type: "java.lang.Integer"
  description: "Load on startup priority of the dispatcher servlet."
  shortDescription: "Load on startup priority of the dispatcher servlet."
  name: "spring.mvc.servlet.load-on-startup"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
  type: "java.lang.String"
  description: "Path of the dispatcher servlet. Setting a custom value for this property\
    \ is not compatible with the PathPatternParser matching strategy."
  shortDescription: "Path of the dispatcher servlet."
  name: "spring.mvc.servlet.path"
  defaultValue: "/"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.String"
  description: "Path pattern used for static resources."
  shortDescription: "Path pattern used for static resources."
  name: "spring.mvc.static-path-pattern"
  defaultValue: "/**"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether a \"NoHandlerFoundException\" should be thrown if no Handler\
    \ was found to process a request."
  shortDescription: "Whether a \"NoHandlerFoundException\" should be thrown if no\
    \ Handler was found to process a request."
  name: "spring.mvc.throw-exception-if-no-handler-found"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
  type: "java.lang.String"
  description: "Spring MVC view prefix."
  shortDescription: "Spring MVC view prefix."
  name: "spring.mvc.view.prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
  type: "java.lang.String"
  description: "Spring MVC view suffix."
  shortDescription: "Spring MVC view suffix."
  name: "spring.mvc.view.suffix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Authentication"
  type: "java.lang.String"
  description: "Kerberos ticket for connecting to the database. Mutual exclusive with\
    \ a given username."
  shortDescription: "Kerberos ticket for connecting to the database."
  name: "spring.neo4j.authentication.kerberos-ticket"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Authentication"
  type: "java.lang.String"
  description: "Login password of the server."
  shortDescription: "Login password of the server."
  name: "spring.neo4j.authentication.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Authentication"
  type: "java.lang.String"
  description: "Realm to connect to."
  shortDescription: "Realm to connect to."
  name: "spring.neo4j.authentication.realm"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Authentication"
  type: "java.lang.String"
  description: "Login user of the server."
  shortDescription: "Login user of the server."
  name: "spring.neo4j.authentication.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties"
  type: "java.time.Duration"
  description: "Timeout for borrowing connections from the pool."
  shortDescription: "Timeout for borrowing connections from the pool."
  name: "spring.neo4j.connection-timeout"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties"
  type: "java.time.Duration"
  description: "Maximum time transactions are allowed to retry."
  shortDescription: "Maximum time transactions are allowed to retry."
  name: "spring.neo4j.max-transaction-retry-time"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.time.Duration"
  description: "Acquisition of new connections will be attempted for at most configured\
    \ timeout."
  shortDescription: "Acquisition of new connections will be attempted for at most\
    \ configured timeout."
  name: "spring.neo4j.pool.connection-acquisition-timeout"
  defaultValue: "60s"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.time.Duration"
  description: "Pooled connections that have been idle in the pool for longer than\
    \ this threshold will be tested before they are used again."
  shortDescription: "Pooled connections that have been idle in the pool for longer\
    \ than this threshold will be tested before they are used again."
  name: "spring.neo4j.pool.idle-time-before-connection-test"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.lang.Boolean"
  description: "Whether to log leaked sessions."
  shortDescription: "Whether to log leaked sessions."
  name: "spring.neo4j.pool.log-leaked-sessions"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.time.Duration"
  description: "Pooled connections older than this threshold will be closed and removed\
    \ from the pool."
  shortDescription: "Pooled connections older than this threshold will be closed and\
    \ removed from the pool."
  name: "spring.neo4j.pool.max-connection-lifetime"
  defaultValue: "1h"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum amount of connections in the connection pool towards a single\
    \ database."
  shortDescription: "Maximum amount of connections in the connection pool towards\
    \ a single database."
  name: "spring.neo4j.pool.max-connection-pool-size"
  defaultValue: 100
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.lang.Boolean"
  description: "Whether to enable metrics."
  shortDescription: "Whether to enable metrics."
  name: "spring.neo4j.pool.metrics-enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security"
  type: "java.io.File"
  description: "Path to the file that holds the trusted certificates."
  shortDescription: "Path to the file that holds the trusted certificates."
  name: "spring.neo4j.security.cert-file"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security"
  type: "java.lang.Boolean"
  description: "Whether the driver should use encrypted traffic."
  shortDescription: "Whether the driver should use encrypted traffic."
  name: "spring.neo4j.security.encrypted"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security"
  type: "java.lang.Boolean"
  description: "Whether hostname verification is required."
  shortDescription: "Whether hostname verification is required."
  name: "spring.neo4j.security.hostname-verification-enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security"
  type: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security$TrustStrategy"
  description: "Trust strategy to use."
  shortDescription: "Trust strategy to use."
  name: "spring.neo4j.security.trust-strategy"
  defaultValue: "trust-system-ca-signed-certificates"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties"
  type: "java.net.URI"
  description: "URI used by the driver."
  shortDescription: "URI used by the driver."
  name: "spring.neo4j.uri"
  defaultValue: "bolt://localhost:7687"
- owner: "org.springframework.boot.autoconfigure.netty.NettyProperties"
  type: "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
  description: "Level of leak detection for reference-counted buffers."
  shortDescription: "Level of leak detection for reference-counted buffers."
  name: "spring.netty.leak-detection"
  defaultValue: "disabled"
- type: "org.springframework.boot.ansi.AnsiOutput$Enabled"
  description: "Configures the ANSI output."
  shortDescription: "Configures the ANSI output."
  name: "spring.output.ansi.enabled"
  defaultValue: "detect"
- owner: "org.springframework.boot.context.ApplicationPidFileWriter"
  type: "java.lang.Boolean"
  description: "Fails if ApplicationPidFileWriter is used but it cannot write the\
    \ PID file."
  shortDescription: "Fails if ApplicationPidFileWriter is used but it cannot write\
    \ the PID file."
  name: "spring.pid.fail-on-write-error"
  defaultValue: ""
- owner: "org.springframework.boot.context.ApplicationPidFileWriter"
  type: "java.lang.String"
  description: "Location of the PID file to write (if ApplicationPidFileWriter is\
    \ used)."
  shortDescription: "Location of the PID file to write (if ApplicationPidFileWriter\
    \ is used)."
  name: "spring.pid.file"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of profile expressions that at least one should\
    \ match for the document to be included."
  shortDescription: "Comma-separated list of profile expressions that at least one\
    \ should match for the document to be included."
  name: "spring.profiles"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.config.activate.on-profile"
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of active profiles. Can be overridden by a command\
    \ line switch."
  shortDescription: "Comma-separated list of active profiles."
  name: "spring.profiles.active"
  defaultValue: ""
- type: "java.lang.String"
  description: "Name of the profile to enable if no profile is active."
  shortDescription: "Name of the profile to enable if no profile is active."
  name: "spring.profiles.default"
  defaultValue: "default"
- owner: "org.springframework.boot.context.config.Profiles"
  type: "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  description: "Profile groups to define a logical name for a related group of profiles."
  shortDescription: "Profile groups to define a logical name for a related group of\
    \ profiles."
  name: "spring.profiles.group"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.Profiles"
  type: "java.util.List<java.lang.String>"
  description: "Unconditionally activate the specified comma-separated list of profiles\
    \ (or list of profiles if using YAML)."
  shortDescription: "Unconditionally activate the specified comma-separated list of\
    \ profiles (or list of profiles if using YAML)."
  name: "spring.profiles.include"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically start the scheduler after initialization."
  shortDescription: "Whether to automatically start the scheduler after initialization."
  name: "spring.quartz.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties$Jdbc"
  type: "java.util.List<java.lang.String>"
  description: "Prefixes for single-line comments in SQL initialization scripts."
  shortDescription: "Prefixes for single-line comments in SQL initialization scripts."
  name: "spring.quartz.jdbc.comment-prefix"
  defaultValue:
  - "#"
  - "--"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties$Jdbc"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Database schema initialization mode."
  shortDescription: "Database schema initialization mode."
  name: "spring.quartz.jdbc.initialize-schema"
  defaultValue: "embedded"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties$Jdbc"
  type: "java.lang.String"
  description: "Path to the SQL file to use to initialize the database schema."
  shortDescription: "Path to the SQL file to use to initialize the database schema."
  name: "spring.quartz.jdbc.schema"
  defaultValue: "classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "org.springframework.boot.autoconfigure.quartz.JobStoreType"
  description: "Quartz job store type."
  shortDescription: "Quartz job store type."
  name: "spring.quartz.job-store-type"
  defaultValue: "memory"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.lang.Boolean"
  description: "Whether configured jobs should overwrite existing job definitions."
  shortDescription: "Whether configured jobs should overwrite existing job definitions."
  name: "spring.quartz.overwrite-existing-jobs"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional Quartz Scheduler properties."
  shortDescription: "Additional Quartz Scheduler properties."
  name: "spring.quartz.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.lang.String"
  description: "Name of the scheduler."
  shortDescription: "Name of the scheduler."
  name: "spring.quartz.scheduler-name"
  defaultValue: "quartzScheduler"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.time.Duration"
  description: "Delay after which the scheduler is started once initialization completes.\
    \ Setting this property makes sense if no jobs should be run before the entire\
    \ application has started up."
  shortDescription: "Delay after which the scheduler is started once initialization\
    \ completes."
  name: "spring.quartz.startup-delay"
  defaultValue: "0s"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.lang.Boolean"
  description: "Whether to wait for running jobs to complete on shutdown."
  shortDescription: "Whether to wait for running jobs to complete on shutdown."
  name: "spring.quartz.wait-for-jobs-to-complete-on-shutdown"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.Boolean"
  description: "Whether to generate a random database name. Ignore any configured\
    \ name when enabled."
  shortDescription: "Whether to generate a random database name."
  name: "spring.r2dbc.generate-unique-name"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.String"
  description: "Database name. Set if no name is specified in the url. Default to\
    \ \"testdb\" when using an embedded database."
  shortDescription: "Database name."
  name: "spring.r2dbc.name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.String"
  description: "Login password of the database. Set if no password is specified in\
    \ the url."
  shortDescription: "Login password of the database."
  name: "spring.r2dbc.password"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether pooling is enabled. Enabled automatically if \"r2dbc-pool\"\
    \ is on the classpath."
  shortDescription: "Whether pooling is enabled."
  name: "spring.r2dbc.pool.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.lang.Integer"
  description: "Initial connection pool size."
  shortDescription: "Initial connection pool size."
  name: "spring.r2dbc.pool.initial-size"
  defaultValue: 10
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum time to acquire a connection from the pool. By default, wait\
    \ indefinitely."
  shortDescription: "Maximum time to acquire a connection from the pool."
  name: "spring.r2dbc.pool.max-acquire-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum time to wait to create a new connection. By default, wait\
    \ indefinitely."
  shortDescription: "Maximum time to wait to create a new connection."
  name: "spring.r2dbc.pool.max-create-connection-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum amount of time that a connection is allowed to sit idle in\
    \ the pool."
  shortDescription: "Maximum amount of time that a connection is allowed to sit idle\
    \ in the pool."
  name: "spring.r2dbc.pool.max-idle-time"
  defaultValue: "30m"
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum lifetime of a connection in the pool. By default, connections\
    \ have an infinite lifetime."
  shortDescription: "Maximum lifetime of a connection in the pool."
  name: "spring.r2dbc.pool.max-life-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximal connection pool size."
  shortDescription: "Maximal connection pool size."
  name: "spring.r2dbc.pool.max-size"
  defaultValue: 10
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "io.r2dbc.spi.ValidationDepth"
  description: "Validation depth."
  shortDescription: "Validation depth."
  name: "spring.r2dbc.pool.validation-depth"
  defaultValue: "local"
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.lang.String"
  description: "Validation query."
  shortDescription: "Validation query."
  name: "spring.r2dbc.pool.validation-query"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional R2DBC options."
  shortDescription: "Additional R2DBC options."
  name: "spring.r2dbc.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.String"
  description: "R2DBC URL of the database. database name, username, password and pooling\
    \ options specified in the url take precedence over individual options."
  shortDescription: "R2DBC URL of the database. database name, username, password\
    \ and pooling options specified in the url take precedence over individual options."
  name: "spring.r2dbc.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.String"
  description: "Login username of the database. Set if no username is specified in\
    \ the url."
  shortDescription: "Login username of the database."
  name: "spring.r2dbc.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "org.springframework.amqp.rabbit.connection.AbstractConnectionFactory$AddressShuffleMode"
  description: "Mode used to shuffle configured addresses."
  shortDescription: "Mode used to shuffle configured addresses."
  name: "spring.rabbitmq.address-shuffle-mode"
  defaultValue: "none"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "Comma-separated list of addresses to which the client should connect.\
    \ When set, the host and port are ignored."
  shortDescription: "Comma-separated list of addresses to which the client should\
    \ connect."
  name: "spring.rabbitmq.addresses"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache$Channel"
  type: "java.time.Duration"
  description: "Duration to wait to obtain a channel if the cache size has been reached.\
    \ If 0, always create a new channel."
  shortDescription: "Duration to wait to obtain a channel if the cache size has been\
    \ reached."
  name: "spring.rabbitmq.cache.channel.checkout-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache$Channel"
  type: "java.lang.Integer"
  description: "Number of channels to retain in the cache. When \"check-timeout\"\
    \ > 0, max channels per connection."
  shortDescription: "Number of channels to retain in the cache."
  name: "spring.rabbitmq.cache.channel.size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache$Connection"
  type: "org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CacheMode"
  description: "Connection factory cache mode."
  shortDescription: "Connection factory cache mode."
  name: "spring.rabbitmq.cache.connection.mode"
  defaultValue: "channel"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache$Connection"
  type: "java.lang.Integer"
  description: "Number of connections to cache. Only applies when mode is CONNECTION."
  shortDescription: "Number of connections to cache."
  name: "spring.rabbitmq.cache.connection.size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.time.Duration"
  description: "Continuation timeout for RPC calls in channels. Set it to zero to\
    \ wait forever."
  shortDescription: "Continuation timeout for RPC calls in channels."
  name: "spring.rabbitmq.channel-rpc-timeout"
  defaultValue: "10m"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.time.Duration"
  description: "Connection timeout. Set it to zero to wait forever."
  shortDescription: "Connection timeout."
  name: "spring.rabbitmq.connection-timeout"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to create an AmqpAdmin bean."
  shortDescription: "Whether to create an AmqpAdmin bean."
  name: "spring.rabbitmq.dynamic"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "RabbitMQ host. Ignored if an address is set."
  shortDescription: "RabbitMQ host."
  name: "spring.rabbitmq.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "org.springframework.amqp.core.AcknowledgeMode"
  description: "Acknowledge mode of container."
  shortDescription: "Acknowledge mode of container."
  name: "spring.rabbitmq.listener.direct.acknowledge-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Boolean"
  description: "Whether to start the container automatically on startup."
  shortDescription: "Whether to start the container automatically on startup."
  name: "spring.rabbitmq.listener.direct.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Integer"
  description: "Number of consumers per queue."
  shortDescription: "Number of consumers per queue."
  name: "spring.rabbitmq.listener.direct.consumers-per-queue"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Boolean"
  description: "Whether the container should present batched messages as discrete\
    \ messages or call the listener with the batch."
  shortDescription: "Whether the container should present batched messages as discrete\
    \ messages or call the listener with the batch."
  name: "spring.rabbitmq.listener.direct.de-batching-enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Boolean"
  description: "Whether rejected deliveries are re-queued by default."
  shortDescription: "Whether rejected deliveries are re-queued by default."
  name: "spring.rabbitmq.listener.direct.default-requeue-rejected"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.time.Duration"
  description: "How often idle container events should be published."
  shortDescription: "How often idle container events should be published."
  name: "spring.rabbitmq.listener.direct.idle-event-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Boolean"
  description: "Whether to fail if the queues declared by the container are not available\
    \ on the broker."
  shortDescription: "Whether to fail if the queues declared by the container are not\
    \ available on the broker."
  name: "spring.rabbitmq.listener.direct.missing-queues-fatal"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Integer"
  description: "Maximum number of unacknowledged messages that can be outstanding\
    \ at each consumer."
  shortDescription: "Maximum number of unacknowledged messages that can be outstanding\
    \ at each consumer."
  name: "spring.rabbitmq.listener.direct.prefetch"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Boolean"
  description: "Whether publishing retries are enabled."
  shortDescription: "Whether publishing retries are enabled."
  name: "spring.rabbitmq.listener.direct.retry.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.time.Duration"
  description: "Duration between the first and second attempt to deliver a message."
  shortDescription: "Duration between the first and second attempt to deliver a message."
  name: "spring.rabbitmq.listener.direct.retry.initial-interval"
  defaultValue: "1000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Integer"
  description: "Maximum number of attempts to deliver a message."
  shortDescription: "Maximum number of attempts to deliver a message."
  name: "spring.rabbitmq.listener.direct.retry.max-attempts"
  defaultValue: 3
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.time.Duration"
  description: "Maximum duration between attempts."
  shortDescription: "Maximum duration between attempts."
  name: "spring.rabbitmq.listener.direct.retry.max-interval"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Double"
  description: "Multiplier to apply to the previous retry interval."
  shortDescription: "Multiplier to apply to the previous retry interval."
  name: "spring.rabbitmq.listener.direct.retry.multiplier"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Boolean"
  description: "Whether retries are stateless or stateful."
  shortDescription: "Whether retries are stateless or stateful."
  name: "spring.rabbitmq.listener.direct.retry.stateless"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "org.springframework.amqp.core.AcknowledgeMode"
  description: "Acknowledge mode of container."
  shortDescription: "Acknowledge mode of container."
  name: "spring.rabbitmq.listener.simple.acknowledge-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether to start the container automatically on startup."
  shortDescription: "Whether to start the container automatically on startup."
  name: "spring.rabbitmq.listener.simple.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Integer"
  description: "Batch size, expressed as the number of physical messages, to be used\
    \ by the container."
  shortDescription: "Batch size, expressed as the number of physical messages, to\
    \ be used by the container."
  name: "spring.rabbitmq.listener.simple.batch-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Integer"
  description: "Minimum number of listener invoker threads."
  shortDescription: "Minimum number of listener invoker threads."
  name: "spring.rabbitmq.listener.simple.concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether the container creates a batch of messages based on the 'receive-timeout'\
    \ and 'batch-size'. Coerces 'de-batching-enabled' to true to include the contents\
    \ of a producer created batch in the batch as discrete records."
  shortDescription: "Whether the container creates a batch of messages based on the\
    \ 'receive-timeout' and 'batch-size'."
  name: "spring.rabbitmq.listener.simple.consumer-batch-enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether the container should present batched messages as discrete\
    \ messages or call the listener with the batch."
  shortDescription: "Whether the container should present batched messages as discrete\
    \ messages or call the listener with the batch."
  name: "spring.rabbitmq.listener.simple.de-batching-enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether rejected deliveries are re-queued by default."
  shortDescription: "Whether rejected deliveries are re-queued by default."
  name: "spring.rabbitmq.listener.simple.default-requeue-rejected"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.time.Duration"
  description: "How often idle container events should be published."
  shortDescription: "How often idle container events should be published."
  name: "spring.rabbitmq.listener.simple.idle-event-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Integer"
  description: "Maximum number of listener invoker threads."
  shortDescription: "Maximum number of listener invoker threads."
  name: "spring.rabbitmq.listener.simple.max-concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether to fail if the queues declared by the container are not available\
    \ on the broker and/or whether to stop the container if one or more queues are\
    \ deleted at runtime."
  shortDescription: "Whether to fail if the queues declared by the container are not\
    \ available on the broker and/or whether to stop the container if one or more\
    \ queues are deleted at runtime."
  name: "spring.rabbitmq.listener.simple.missing-queues-fatal"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Integer"
  description: "Maximum number of unacknowledged messages that can be outstanding\
    \ at each consumer."
  shortDescription: "Maximum number of unacknowledged messages that can be outstanding\
    \ at each consumer."
  name: "spring.rabbitmq.listener.simple.prefetch"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Boolean"
  description: "Whether publishing retries are enabled."
  shortDescription: "Whether publishing retries are enabled."
  name: "spring.rabbitmq.listener.simple.retry.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.time.Duration"
  description: "Duration between the first and second attempt to deliver a message."
  shortDescription: "Duration between the first and second attempt to deliver a message."
  name: "spring.rabbitmq.listener.simple.retry.initial-interval"
  defaultValue: "1000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Integer"
  description: "Maximum number of attempts to deliver a message."
  shortDescription: "Maximum number of attempts to deliver a message."
  name: "spring.rabbitmq.listener.simple.retry.max-attempts"
  defaultValue: 3
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.time.Duration"
  description: "Maximum duration between attempts."
  shortDescription: "Maximum duration between attempts."
  name: "spring.rabbitmq.listener.simple.retry.max-interval"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Double"
  description: "Multiplier to apply to the previous retry interval."
  shortDescription: "Multiplier to apply to the previous retry interval."
  name: "spring.rabbitmq.listener.simple.retry.multiplier"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Boolean"
  description: "Whether retries are stateless or stateful."
  shortDescription: "Whether retries are stateless or stateful."
  name: "spring.rabbitmq.listener.simple.retry.stateless"
  defaultValue: true
- type: "java.lang.Integer"
  name: "spring.rabbitmq.listener.simple.transaction-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Listener"
  type: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ContainerType"
  description: "Listener container type."
  shortDescription: "Listener container type."
  name: "spring.rabbitmq.listener.type"
  defaultValue: "simple"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "Login to authenticate against the broker."
  shortDescription: "Login to authenticate against the broker."
  name: "spring.rabbitmq.password"
  defaultValue: "guest"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.Integer"
  description: "RabbitMQ port. Ignored if an address is set. Default to 5672, or 5671\
    \ if SSL is enabled."
  shortDescription: "RabbitMQ port."
  name: "spring.rabbitmq.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ConfirmType"
  description: "Type of publisher confirms to use."
  shortDescription: "Type of publisher confirms to use."
  name: "spring.rabbitmq.publisher-confirm-type"
  defaultValue: ""
- type: "java.lang.Boolean"
  name: "spring.rabbitmq.publisher-confirms"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable publisher returns."
  shortDescription: "Whether to enable publisher returns."
  name: "spring.rabbitmq.publisher-returns"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.Integer"
  description: "Number of channels per connection requested by the client. Use 0 for\
    \ unlimited."
  shortDescription: "Number of channels per connection requested by the client."
  name: "spring.rabbitmq.requested-channel-max"
  defaultValue: 2047
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.time.Duration"
  description: "Requested heartbeat timeout; zero for none. If a duration suffix is\
    \ not specified, seconds will be used."
  shortDescription: "Requested heartbeat timeout; zero for none."
  name: "spring.rabbitmq.requested-heartbeat"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "SSL algorithm to use. By default, configured by the Rabbit client\
    \ library."
  shortDescription: "SSL algorithm to use."
  name: "spring.rabbitmq.ssl.algorithm"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support. Determined automatically if an address\
    \ is provided with the protocol (amqp:// vs. amqps://)."
  shortDescription: "Whether to enable SSL support."
  name: "spring.rabbitmq.ssl.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Path to the key store that holds the SSL certificate."
  shortDescription: "Path to the key store that holds the SSL certificate."
  name: "spring.rabbitmq.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Key store algorithm."
  shortDescription: "Key store algorithm."
  name: "spring.rabbitmq.ssl.key-store-algorithm"
  defaultValue: "SunX509"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  shortDescription: "Password used to access the key store."
  name: "spring.rabbitmq.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Key store type."
  shortDescription: "Key store type."
  name: "spring.rabbitmq.ssl.key-store-type"
  defaultValue: "PKCS12"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Trust store that holds SSL certificates."
  shortDescription: "Trust store that holds SSL certificates."
  name: "spring.rabbitmq.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Trust store algorithm."
  shortDescription: "Trust store algorithm."
  name: "spring.rabbitmq.ssl.trust-store-algorithm"
  defaultValue: "SunX509"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the trust store."
  shortDescription: "Password used to access the trust store."
  name: "spring.rabbitmq.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Trust store type."
  shortDescription: "Trust store type."
  name: "spring.rabbitmq.ssl.trust-store-type"
  defaultValue: "JKS"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable server side certificate validation."
  shortDescription: "Whether to enable server side certificate validation."
  name: "spring.rabbitmq.ssl.validate-server-certificate"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable hostname verification."
  shortDescription: "Whether to enable hostname verification."
  name: "spring.rabbitmq.ssl.verify-hostname"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.lang.String"
  description: "Name of the default queue to receive messages from when none is specified\
    \ explicitly."
  shortDescription: "Name of the default queue to receive messages from when none\
    \ is specified explicitly."
  name: "spring.rabbitmq.template.default-receive-queue"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.lang.String"
  description: "Name of the default exchange to use for send operations."
  shortDescription: "Name of the default exchange to use for send operations."
  name: "spring.rabbitmq.template.exchange"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether to enable mandatory messages."
  shortDescription: "Whether to enable mandatory messages."
  name: "spring.rabbitmq.template.mandatory"
  defaultValue: ""
- type: "java.lang.String"
  name: "spring.rabbitmq.template.queue"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.rabbitmq.template.default-receive-queue"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.time.Duration"
  description: "Timeout for `receive()` operations."
  shortDescription: "Timeout for `receive()` operations."
  name: "spring.rabbitmq.template.receive-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.time.Duration"
  description: "Timeout for `sendAndReceive()` operations."
  shortDescription: "Timeout for `sendAndReceive()` operations."
  name: "spring.rabbitmq.template.reply-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.lang.Boolean"
  description: "Whether publishing retries are enabled."
  shortDescription: "Whether publishing retries are enabled."
  name: "spring.rabbitmq.template.retry.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.time.Duration"
  description: "Duration between the first and second attempt to deliver a message."
  shortDescription: "Duration between the first and second attempt to deliver a message."
  name: "spring.rabbitmq.template.retry.initial-interval"
  defaultValue: "1000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.lang.Integer"
  description: "Maximum number of attempts to deliver a message."
  shortDescription: "Maximum number of attempts to deliver a message."
  name: "spring.rabbitmq.template.retry.max-attempts"
  defaultValue: 3
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.time.Duration"
  description: "Maximum duration between attempts."
  shortDescription: "Maximum duration between attempts."
  name: "spring.rabbitmq.template.retry.max-interval"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.lang.Double"
  description: "Multiplier to apply to the previous retry interval."
  shortDescription: "Multiplier to apply to the previous retry interval."
  name: "spring.rabbitmq.template.retry.multiplier"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.lang.String"
  description: "Value of a default routing key to use for send operations."
  shortDescription: "Value of a default routing key to use for send operations."
  name: "spring.rabbitmq.template.routing-key"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "Login user to authenticate to the broker."
  shortDescription: "Login user to authenticate to the broker."
  name: "spring.rabbitmq.username"
  defaultValue: "guest"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "Virtual host to use when connecting to the broker."
  shortDescription: "Virtual host to use when connecting to the broker."
  name: "spring.rabbitmq.virtual-host"
  defaultValue: ""
- owner: "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor"
  type: "java.lang.Boolean"
  description: "Whether the Reactor Debug Agent should be enabled when reactor-tools\
    \ is present."
  shortDescription: "Whether the Reactor Debug Agent should be enabled when reactor-tools\
    \ is present."
  name: "spring.reactor.debug-agent.enabled"
  defaultValue: true
- description: "Whether Reactor should collect stacktrace information at runtime."
  shortDescription: "Whether Reactor should collect stacktrace information at runtime."
  name: "spring.reactor.stacktrace-mode.enabled"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.reactor.debug-agent.enabled"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Client name to be set on connections with CLIENT SETNAME."
  shortDescription: "Client name to be set on connections with CLIENT SETNAME."
  name: "spring.redis.client-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType"
  description: "Type of client to use. By default, auto-detected according to the\
    \ classpath."
  shortDescription: "Type of client to use."
  name: "spring.redis.client-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
  type: "java.lang.Integer"
  description: "Maximum number of redirects to follow when executing commands across\
    \ the cluster."
  shortDescription: "Maximum number of redirects to follow when executing commands\
    \ across the cluster."
  name: "spring.redis.cluster.max-redirects"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of \"host:port\" pairs to bootstrap from. This\
    \ represents an \"initial\" list of cluster nodes and is required to have at least\
    \ one entry."
  shortDescription: "Comma-separated list of \"host:port\" pairs to bootstrap from."
  name: "spring.redis.cluster.nodes"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.time.Duration"
  description: "Connection timeout."
  shortDescription: "Connection timeout."
  name: "spring.redis.connect-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.Integer"
  description: "Database index used by the connection factory."
  shortDescription: "Database index used by the connection factory."
  name: "spring.redis.database"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Redis server host."
  shortDescription: "Redis server host."
  name: "spring.redis.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum number of connections that can be allocated by the pool at\
    \ a given time. Use a negative value for no limit."
  shortDescription: "Maximum number of connections that can be allocated by the pool\
    \ at a given time."
  name: "spring.redis.jedis.pool.max-active"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum number of \"idle\" connections in the pool. Use a negative\
    \ value to indicate an unlimited number of idle connections."
  shortDescription: "Maximum number of \"idle\" connections in the pool."
  name: "spring.redis.jedis.pool.max-idle"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum amount of time a connection allocation should block before\
    \ throwing an exception when the pool is exhausted. Use a negative value to block\
    \ indefinitely."
  shortDescription: "Maximum amount of time a connection allocation should block before\
    \ throwing an exception when the pool is exhausted."
  name: "spring.redis.jedis.pool.max-wait"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if both it and time between eviction runs\
    \ are positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "spring.redis.jedis.pool.min-idle"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.time.Duration"
  description: "Time between runs of the idle object evictor thread. When positive,\
    \ the idle object evictor thread starts, otherwise no idle object eviction is\
    \ performed."
  shortDescription: "Time between runs of the idle object evictor thread."
  name: "spring.redis.jedis.pool.time-between-eviction-runs"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "spring.redis.lettuce.cluster.refresh.adaptive"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "spring.redis.lettuce.cluster.refresh.dynamic-refresh-sources"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh"
  type: "java.time.Duration"
  description: "Cluster topology refresh period."
  shortDescription: "Cluster topology refresh period."
  name: "spring.redis.lettuce.cluster.refresh.period"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum number of connections that can be allocated by the pool at\
    \ a given time. Use a negative value for no limit."
  shortDescription: "Maximum number of connections that can be allocated by the pool\
    \ at a given time."
  name: "spring.redis.lettuce.pool.max-active"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum number of \"idle\" connections in the pool. Use a negative\
    \ value to indicate an unlimited number of idle connections."
  shortDescription: "Maximum number of \"idle\" connections in the pool."
  name: "spring.redis.lettuce.pool.max-idle"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum amount of time a connection allocation should block before\
    \ throwing an exception when the pool is exhausted. Use a negative value to block\
    \ indefinitely."
  shortDescription: "Maximum amount of time a connection allocation should block before\
    \ throwing an exception when the pool is exhausted."
  name: "spring.redis.lettuce.pool.max-wait"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if both it and time between eviction runs\
    \ are positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "spring.redis.lettuce.pool.min-idle"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.time.Duration"
  description: "Time between runs of the idle object evictor thread. When positive,\
    \ the idle object evictor thread starts, otherwise no idle object eviction is\
    \ performed."
  shortDescription: "Time between runs of the idle object evictor thread."
  name: "spring.redis.lettuce.pool.time-between-eviction-runs"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce"
  type: "java.time.Duration"
  description: "Shutdown timeout."
  shortDescription: "Shutdown timeout."
  name: "spring.redis.lettuce.shutdown-timeout"
  defaultValue: "100ms"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Login password of the redis server."
  shortDescription: "Login password of the redis server."
  name: "spring.redis.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.Integer"
  description: "Redis server port."
  shortDescription: "Redis server port."
  name: "spring.redis.port"
  defaultValue: 6379
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
  type: "java.lang.String"
  description: "Name of the Redis server."
  shortDescription: "Name of the Redis server."
  name: "spring.redis.sentinel.master"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of \"host:port\" pairs."
  shortDescription: "Comma-separated list of \"host:port\" pairs."
  name: "spring.redis.sentinel.nodes"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
  type: "java.lang.String"
  description: "Password for authenticating with sentinel(s)."
  shortDescription: "Password for authenticating with sentinel(s)."
  name: "spring.redis.sentinel.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support."
  shortDescription: "Whether to enable SSL support."
  name: "spring.redis.ssl"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.time.Duration"
  description: "Read timeout."
  shortDescription: "Read timeout."
  name: "spring.redis.timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Connection URL. Overrides host, port, and password. User is ignored.\
    \ Example: redis://user:password@example.com:6379"
  shortDescription: "Connection URL."
  name: "spring.redis.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Login username of the redis server."
  shortDescription: "Login username of the redis server."
  name: "spring.redis.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable default resource handling."
  shortDescription: "Whether to enable default resource handling."
  name: "spring.resources.add-mappings"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.add-mappings"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that the response message is intended for a single user and\
    \ must not be stored by a shared cache."
  shortDescription: "Indicate that the response message is intended for a single user\
    \ and must not be stored by a shared cache."
  name: "spring.resources.cache.cachecontrol.cache-private"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.cache-private"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that any cache may store the response."
  shortDescription: "Indicate that any cache may store the response."
  name: "spring.resources.cache.cachecontrol.cache-public"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.cache-public"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response should be cached, in seconds if no duration\
    \ suffix is not specified."
  shortDescription: "Maximum time the response should be cached, in seconds if no\
    \ duration suffix is not specified."
  name: "spring.resources.cache.cachecontrol.max-age"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.max-age"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that once it has become stale, a cache must not use the response\
    \ without re-validating it with the server."
  shortDescription: "Indicate that once it has become stale, a cache must not use\
    \ the response without re-validating it with the server."
  name: "spring.resources.cache.cachecontrol.must-revalidate"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.must-revalidate"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that the cached response can be reused only if re-validated\
    \ with the server."
  shortDescription: "Indicate that the cached response can be reused only if re-validated\
    \ with the server."
  name: "spring.resources.cache.cachecontrol.no-cache"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.no-cache"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate to not cache the response in any case."
  shortDescription: "Indicate to not cache the response in any case."
  name: "spring.resources.cache.cachecontrol.no-store"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.no-store"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate intermediaries (caches and others) that they should not transform\
    \ the response content."
  shortDescription: "Indicate intermediaries (caches and others) that they should\
    \ not transform the response content."
  name: "spring.resources.cache.cachecontrol.no-transform"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.no-transform"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Same meaning as the \"must-revalidate\" directive, except that it\
    \ does not apply to private caches."
  shortDescription: "Same meaning as the \"must-revalidate\" directive, except that\
    \ it does not apply to private caches."
  name: "spring.resources.cache.cachecontrol.proxy-revalidate"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.proxy-revalidate"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response should be cached by shared caches, in seconds\
    \ if no duration suffix is not specified."
  shortDescription: "Maximum time the response should be cached by shared caches,\
    \ in seconds if no duration suffix is not specified."
  name: "spring.resources.cache.cachecontrol.s-max-age"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.s-max-age"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response may be used when errors are encountered,\
    \ in seconds if no duration suffix is not specified."
  shortDescription: "Maximum time the response may be used when errors are encountered,\
    \ in seconds if no duration suffix is not specified."
  name: "spring.resources.cache.cachecontrol.stale-if-error"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.stale-if-error"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response can be served after it becomes stale, in\
    \ seconds if no duration suffix is not specified."
  shortDescription: "Maximum time the response can be served after it becomes stale,\
    \ in seconds if no duration suffix is not specified."
  name: "spring.resources.cache.cachecontrol.stale-while-revalidate"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.stale-while-revalidate"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache"
  type: "java.time.Duration"
  description: "Cache period for the resources served by the resource handler. If\
    \ a duration suffix is not specified, seconds will be used. Can be overridden\
    \ by the 'spring.web.resources.cache.cachecontrol' properties."
  shortDescription: "Cache period for the resources served by the resource handler."
  name: "spring.resources.cache.period"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.period"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache"
  type: "java.lang.Boolean"
  description: "Whether we should use the \"lastModified\" metadata of the files in\
    \ HTTP caching headers."
  shortDescription: "Whether we should use the \"lastModified\" metadata of the files\
    \ in HTTP caching headers."
  name: "spring.resources.cache.use-last-modified"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.use-last-modified"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable caching in the Resource chain."
  shortDescription: "Whether to enable caching in the Resource chain."
  name: "spring.resources.chain.cache"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.cache"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable resolution of already compressed resources (gzip,\
    \ brotli). Checks for a resource name with the '.gz' or '.br' file extensions."
  shortDescription: "Whether to enable resolution of already compressed resources\
    \ (gzip, brotli)."
  name: "spring.resources.chain.compressed"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.compressed"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable the Spring Resource Handling chain. By default,\
    \ disabled unless at least one strategy has been enabled."
  shortDescription: "Whether to enable the Spring Resource Handling chain."
  name: "spring.resources.chain.enabled"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.enabled"
- type: "java.lang.Boolean"
  description: "Whether to enable resolution of already gzipped resources. Checks\
    \ for a resource name variant with the \"*.gz\" extension."
  shortDescription: "Whether to enable resolution of already gzipped resources."
  name: "spring.resources.chain.gzipped"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.resources.chain.compressed"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable HTML5 application cache manifest rewriting."
  shortDescription: "Whether to enable HTML5 application cache manifest rewriting."
  name: "spring.resources.chain.html-application-cache"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReason: "The appcache manifest feature is being removed from browsers."
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Content"
  type: "java.lang.Boolean"
  description: "Whether to enable the content Version Strategy."
  shortDescription: "Whether to enable the content Version Strategy."
  name: "spring.resources.chain.strategy.content.enabled"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.content.enabled"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Content"
  type: "java.lang.String[]"
  description: "Comma-separated list of patterns to apply to the content Version Strategy."
  shortDescription: "Comma-separated list of patterns to apply to the content Version\
    \ Strategy."
  name: "spring.resources.chain.strategy.content.paths"
  defaultValue:
  - "/**"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.content.paths"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Fixed"
  type: "java.lang.Boolean"
  description: "Whether to enable the fixed Version Strategy."
  shortDescription: "Whether to enable the fixed Version Strategy."
  name: "spring.resources.chain.strategy.fixed.enabled"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.fixed.enabled"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Fixed"
  type: "java.lang.String[]"
  description: "Comma-separated list of patterns to apply to the fixed Version Strategy."
  shortDescription: "Comma-separated list of patterns to apply to the fixed Version\
    \ Strategy."
  name: "spring.resources.chain.strategy.fixed.paths"
  defaultValue:
  - "/**"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.fixed.paths"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Fixed"
  type: "java.lang.String"
  description: "Version string to use for the fixed Version Strategy."
  shortDescription: "Version string to use for the fixed Version Strategy."
  name: "spring.resources.chain.strategy.fixed.version"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.fixed.version"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties"
  type: "java.lang.String[]"
  description: "Locations of static resources. Defaults to classpath:[/META-INF/resources/,\
    \ /resources/, /static/, /public/]."
  shortDescription: "Locations of static resources."
  name: "spring.resources.static-locations"
  defaultValue:
  - "classpath:/META-INF/resources/"
  - "classpath:/resources/"
  - "classpath:/static/"
  - "classpath:/public/"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.static-locations"
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "java.net.InetAddress"
  description: "Network address to which the server should bind."
  shortDescription: "Network address to which the server should bind."
  name: "spring.rsocket.server.address"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum transmission unit. Frames larger than the specified value\
    \ are fragmented."
  shortDescription: "Maximum transmission unit."
  name: "spring.rsocket.server.fragment-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "java.lang.String"
  description: "Path under which RSocket handles requests (only works with websocket\
    \ transport)."
  shortDescription: "Path under which RSocket handles requests (only works with websocket\
    \ transport)."
  name: "spring.rsocket.server.mapping-path"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "java.lang.Integer"
  description: "Server port."
  shortDescription: "Server port."
  name: "spring.rsocket.server.port"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  name: "spring.rsocket.server.ssl.ciphers"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "org.springframework.boot.web.server.Ssl$ClientAuth"
  name: "spring.rsocket.server.ssl.client-auth"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.Boolean"
  name: "spring.rsocket.server.ssl.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  name: "spring.rsocket.server.ssl.enabled-protocols"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-alias"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.trust-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.trust-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "org.springframework.boot.rsocket.server.RSocketServer$Transport"
  description: "RSocket transport protocol."
  shortDescription: "RSocket transport protocol."
  name: "spring.rsocket.server.transport"
  defaultValue: "tcp"
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter"
  type: "java.util.Set<org.springframework.boot.web.servlet.DispatcherType>"
  description: "Security filter chain dispatcher types."
  shortDescription: "Security filter chain dispatcher types."
  name: "spring.security.filter.dispatcher-types"
  defaultValue:
  - "async"
  - "error"
  - "request"
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter"
  type: "java.lang.Integer"
  description: "Security filter chain order."
  shortDescription: "Security filter chain order."
  name: "spring.security.filter.order"
  defaultValue: -100
- owner: "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties"
  type: "java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties$Provider>"
  description: "OAuth provider details."
  shortDescription: "OAuth provider details."
  name: "spring.security.oauth2.client.provider"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties"
  type: "java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties$Registration>"
  description: "OAuth client registrations."
  shortDescription: "OAuth client registrations."
  name: "spring.security.oauth2.client.registration"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
  type: "java.lang.String"
  description: "URI that can either be an OpenID Connect discovery endpoint or an\
    \ OAuth 2.0 Authorization Server Metadata endpoint defined by RFC 8414."
  shortDescription: "URI that can either be an OpenID Connect discovery endpoint or\
    \ an OAuth 2.0 Authorization Server Metadata endpoint defined by RFC 8414."
  name: "spring.security.oauth2.resourceserver.jwt.issuer-uri"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
  type: "java.lang.String"
  description: "JSON Web Key URI to use to verify the JWT token."
  shortDescription: "JSON Web Key URI to use to verify the JWT token."
  name: "spring.security.oauth2.resourceserver.jwt.jwk-set-uri"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
  type: "java.lang.String"
  description: "JSON Web Algorithm used for verifying the digital signatures."
  shortDescription: "JSON Web Algorithm used for verifying the digital signatures."
  name: "spring.security.oauth2.resourceserver.jwt.jws-algorithm"
  defaultValue: "RS256"
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
  type: "org.springframework.core.io.Resource"
  description: "Location of the file containing the public key used to verify a JWT."
  shortDescription: "Location of the file containing the public key used to verify\
    \ a JWT."
  name: "spring.security.oauth2.resourceserver.jwt.public-key-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken"
  type: "java.lang.String"
  description: "Client id used to authenticate with the token introspection endpoint."
  shortDescription: "Client id used to authenticate with the token introspection endpoint."
  name: "spring.security.oauth2.resourceserver.opaquetoken.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken"
  type: "java.lang.String"
  description: "Client secret used to authenticate with the token introspection endpoint."
  shortDescription: "Client secret used to authenticate with the token introspection\
    \ endpoint."
  name: "spring.security.oauth2.resourceserver.opaquetoken.client-secret"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken"
  type: "java.lang.String"
  description: "OAuth 2.0 endpoint through which token introspection is accomplished."
  shortDescription: "OAuth 2.0 endpoint through which token introspection is accomplished."
  name: "spring.security.oauth2.resourceserver.opaquetoken.introspection-uri"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties"
  type: "java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties$Registration>"
  description: "SAML2 relying party registrations."
  shortDescription: "SAML2 relying party registrations."
  name: "spring.security.saml2.relyingparty.registration"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$User"
  type: "java.lang.String"
  description: "Default user name."
  shortDescription: "Default user name."
  name: "spring.security.user.name"
  defaultValue: "user"
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$User"
  type: "java.lang.String"
  description: "Password for the default user name."
  shortDescription: "Password for the default user name."
  name: "spring.security.user.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$User"
  type: "java.util.List<java.lang.String>"
  description: "Granted roles for the default user name."
  shortDescription: "Granted roles for the default user name."
  name: "spring.security.user.roles"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.sendgrid.SendGridProperties"
  type: "java.lang.String"
  description: "SendGrid API key."
  shortDescription: "SendGrid API key."
  name: "spring.sendgrid.api-key"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.sendgrid.SendGridProperties$Proxy"
  type: "java.lang.String"
  description: "SendGrid proxy host."
  shortDescription: "SendGrid proxy host."
  name: "spring.sendgrid.proxy.host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.sendgrid.SendGridProperties$Proxy"
  type: "java.lang.Integer"
  description: "SendGrid proxy port."
  shortDescription: "SendGrid proxy port."
  name: "spring.sendgrid.proxy.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable support of multipart uploads."
  shortDescription: "Whether to enable support of multipart uploads."
  name: "spring.servlet.multipart.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Threshold after which files are written to disk."
  shortDescription: "Threshold after which files are written to disk."
  name: "spring.servlet.multipart.file-size-threshold"
  defaultValue: "0B"
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "java.lang.String"
  description: "Intermediate location of uploaded files."
  shortDescription: "Intermediate location of uploaded files."
  name: "spring.servlet.multipart.location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Max file size."
  shortDescription: "Max file size."
  name: "spring.servlet.multipart.max-file-size"
  defaultValue: "1MB"
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Max request size."
  shortDescription: "Max request size."
  name: "spring.servlet.multipart.max-request-size"
  defaultValue: "10MB"
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "java.lang.Boolean"
  description: "Whether to resolve the multipart request lazily at the time of file\
    \ or parameter access."
  shortDescription: "Whether to resolve the multipart request lazily at the time of\
    \ file or parameter access."
  name: "spring.servlet.multipart.resolve-lazily"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.session.HazelcastSessionProperties"
  type: "org.springframework.session.FlushMode"
  description: "Sessions flush mode. Determines when session changes are written to\
    \ the session store."
  shortDescription: "Sessions flush mode."
  name: "spring.session.hazelcast.flush-mode"
  defaultValue: "on-save"
- owner: "org.springframework.boot.autoconfigure.session.HazelcastSessionProperties"
  type: "java.lang.String"
  description: "Name of the map used to store sessions."
  shortDescription: "Name of the map used to store sessions."
  name: "spring.session.hazelcast.map-name"
  defaultValue: "spring:session:sessions"
- owner: "org.springframework.boot.autoconfigure.session.HazelcastSessionProperties"
  type: "org.springframework.session.SaveMode"
  description: "Sessions save mode. Determines how session changes are tracked and\
    \ saved to the session store."
  shortDescription: "Sessions save mode."
  name: "spring.session.hazelcast.save-mode"
  defaultValue: "on-set-attribute"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "java.lang.String"
  description: "Cron expression for expired session cleanup job."
  shortDescription: "Cron expression for expired session cleanup job."
  name: "spring.session.jdbc.cleanup-cron"
  defaultValue: "0 * * * * *"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "org.springframework.session.FlushMode"
  description: "Sessions flush mode. Determines when session changes are written to\
    \ the session store."
  shortDescription: "Sessions flush mode."
  name: "spring.session.jdbc.flush-mode"
  defaultValue: "on-save"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Database schema initialization mode."
  shortDescription: "Database schema initialization mode."
  name: "spring.session.jdbc.initialize-schema"
  defaultValue: "embedded"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "org.springframework.session.SaveMode"
  description: "Sessions save mode. Determines how session changes are tracked and\
    \ saved to the session store."
  shortDescription: "Sessions save mode."
  name: "spring.session.jdbc.save-mode"
  defaultValue: "on-set-attribute"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "java.lang.String"
  description: "Path to the SQL file to use to initialize the database schema."
  shortDescription: "Path to the SQL file to use to initialize the database schema."
  name: "spring.session.jdbc.schema"
  defaultValue: "classpath:org/springframework/session/jdbc/schema-@@platform@@.sql"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "java.lang.String"
  description: "Name of the database table used to store sessions."
  shortDescription: "Name of the database table used to store sessions."
  name: "spring.session.jdbc.table-name"
  defaultValue: "SPRING_SESSION"
- owner: "org.springframework.boot.autoconfigure.session.MongoSessionProperties"
  type: "java.lang.String"
  description: "Collection name used to store sessions."
  shortDescription: "Collection name used to store sessions."
  name: "spring.session.mongodb.collection-name"
  defaultValue: "sessions"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "java.lang.String"
  description: "Cron expression for expired session cleanup job."
  shortDescription: "Cron expression for expired session cleanup job."
  name: "spring.session.redis.cleanup-cron"
  defaultValue: "0 * * * * *"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "org.springframework.boot.autoconfigure.session.RedisSessionProperties$ConfigureAction"
  description: "The configure action to apply when no user defined ConfigureRedisAction\
    \ bean is present."
  shortDescription: "The configure action to apply when no user defined ConfigureRedisAction\
    \ bean is present."
  name: "spring.session.redis.configure-action"
  defaultValue: "notify-keyspace-events"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "org.springframework.session.FlushMode"
  description: "Sessions flush mode. Determines when session changes are written to\
    \ the session store."
  shortDescription: "Sessions flush mode."
  name: "spring.session.redis.flush-mode"
  defaultValue: "on-save"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "java.lang.String"
  description: "Namespace for keys used to store sessions."
  shortDescription: "Namespace for keys used to store sessions."
  name: "spring.session.redis.namespace"
  defaultValue: "spring:session"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "org.springframework.session.SaveMode"
  description: "Sessions save mode. Determines how session changes are tracked and\
    \ saved to the session store."
  shortDescription: "Sessions save mode."
  name: "spring.session.redis.save-mode"
  defaultValue: "on-set-attribute"
- owner: "org.springframework.boot.autoconfigure.session.SessionProperties$Servlet"
  type: "java.util.Set<org.springframework.boot.web.servlet.DispatcherType>"
  description: "Session repository filter dispatcher types."
  shortDescription: "Session repository filter dispatcher types."
  name: "spring.session.servlet.filter-dispatcher-types"
  defaultValue:
  - "async"
  - "error"
  - "request"
- owner: "org.springframework.boot.autoconfigure.session.SessionProperties$Servlet"
  type: "java.lang.Integer"
  description: "Session repository filter order."
  shortDescription: "Session repository filter order."
  name: "spring.session.servlet.filter-order"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.session.SessionProperties"
  type: "org.springframework.boot.autoconfigure.session.StoreType"
  description: "Session store type."
  shortDescription: "Session store type."
  name: "spring.session.store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.session.SessionProperties"
  type: "java.time.Duration"
  description: "Session timeout. If a duration suffix is not specified, seconds will\
    \ be used."
  shortDescription: "Session timeout."
  name: "spring.session.timeout"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enable default AsyncConfigurer."
  shortDescription: "Enable default AsyncConfigurer."
  name: "spring.sleuth.async.configurer.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.async.SleuthAsyncProperties"
  type: "java.lang.Boolean"
  description: "Enable instrumenting async related components so that the tracing\
    \ information is passed between threads."
  shortDescription: "Enable instrumenting async related components so that the tracing\
    \ information is passed between threads."
  name: "spring.sleuth.async.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.async.SleuthAsyncProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of {@link java.util.concurrent.Executor} bean names that should\
    \ be ignored and not wrapped in a trace representation."
  shortDescription: "List of {@link java.util.concurrent.Executor} bean names that\
    \ should be ignored and not wrapped in a trace representation."
  name: "spring.sleuth.async.ignored-beans"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthBaggageProperties"
  type: "java.lang.Boolean"
  description: "Enables correlating the baggage context with logging contexts."
  shortDescription: "Enables correlating the baggage context with logging contexts."
  name: "spring.sleuth.baggage.correlation-enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthBaggageProperties"
  type: "java.util.List<java.lang.String>"
  name: "spring.sleuth.baggage.correlation-fields"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthBaggageProperties"
  type: "java.util.List<java.lang.String>"
  name: "spring.sleuth.baggage.local-fields"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthBaggageProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of fields that are referenced the same in-process as it is on\
    \ the wire. For example, the field \"x-vcap-request-id\" would be set as-is including\
    \ the prefix."
  shortDescription: "List of fields that are referenced the same in-process as it\
    \ is on the wire."
  name: "spring.sleuth.baggage.remote-fields"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthBaggageProperties"
  type: "java.util.List<java.lang.String>"
  name: "spring.sleuth.baggage.tag-fields"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.circuitbreaker.SleuthCircuitBreakerProperties"
  type: "java.lang.Boolean"
  description: "Enable Spring Cloud CircuitBreaker instrumentation."
  shortDescription: "Enable Spring Cloud CircuitBreaker instrumentation."
  name: "spring.sleuth.circuitbreaker.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.brave.SleuthProperties"
  type: "java.lang.Boolean"
  name: "spring.sleuth.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.client.feign.SleuthFeignProperties"
  type: "java.lang.Boolean"
  description: "Enable span information propagation when using Feign."
  shortDescription: "Enable span information propagation when using Feign."
  name: "spring.sleuth.feign.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable post processor that wraps Feign Context in its tracing representations."
  shortDescription: "Enable post processor that wraps Feign Context in its tracing\
    \ representations."
  name: "spring.sleuth.feign.processor.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable instrumenting of Spring Cloud Function and Spring Cloud Function\
    \ based projects (e.g. Spring Cloud Stream)."
  shortDescription: "Enable instrumenting of Spring Cloud Function and Spring Cloud\
    \ Function based projects (e.g."
  name: "spring.sleuth.function.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable span information propagation when using GRPC."
  shortDescription: "Enable span information propagation when using GRPC."
  name: "spring.sleuth.grpc.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthHttpProperties"
  type: "java.lang.Boolean"
  description: "Enables HTTP support."
  shortDescription: "Enables HTTP support."
  name: "spring.sleuth.http.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthIntegrationMessagingProperties"
  type: "java.lang.Boolean"
  description: "Enable Spring Integration sleuth instrumentation."
  shortDescription: "Enable Spring Integration sleuth instrumentation."
  name: "spring.sleuth.integration.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthIntegrationMessagingProperties"
  type: "java.lang.String[]"
  description: "An array of patterns against which channel names will be matched.\
    \ @see org.springframework.integration.config.GlobalChannelInterceptor#patterns()\
    \ Defaults to any channel name not matching the Hystrix Stream and functional\
    \ Stream channel names."
  shortDescription: "An array of patterns against which channel names will be matched."
  name: "spring.sleuth.integration.patterns"
  defaultValue:
  - "!hystrixStreamOutput*"
  - "*"
  - "!channel*"
- type: "java.lang.Boolean"
  description: "Enable tracing for WebSockets."
  shortDescription: "Enable tracing for WebSockets."
  name: "spring.sleuth.integration.websockets.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthMessagingProperties"
  type: "java.lang.Boolean"
  description: "Should messaging be turned on."
  shortDescription: "Should messaging be turned on."
  name: "spring.sleuth.messaging.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthMessagingProperties$Jms"
  type: "java.lang.Boolean"
  description: "Enable tracing of JMS."
  shortDescription: "Enable tracing of JMS."
  name: "spring.sleuth.messaging.jms.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthMessagingProperties$Jms"
  type: "java.lang.String"
  description: "JMS remote service name."
  shortDescription: "JMS remote service name."
  name: "spring.sleuth.messaging.jms.remote-service-name"
  defaultValue: "jms"
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthMessagingProperties$Kafka"
  type: "java.lang.Boolean"
  description: "Enable tracing of Kafka."
  shortDescription: "Enable tracing of Kafka."
  name: "spring.sleuth.messaging.kafka.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable DefaultKafkaHeaderMapper tracing for Kafka."
  shortDescription: "Enable DefaultKafkaHeaderMapper tracing for Kafka."
  name: "spring.sleuth.messaging.kafka.mapper.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthMessagingProperties$Kafka"
  type: "java.lang.String"
  description: "Kafka remote service name."
  shortDescription: "Kafka remote service name."
  name: "spring.sleuth.messaging.kafka.remote-service-name"
  defaultValue: "kafka"
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthMessagingProperties$Kafka$Streams"
  type: "java.lang.Boolean"
  description: "Should Kafka Streams be turned on."
  shortDescription: "Should Kafka Streams be turned on."
  name: "spring.sleuth.messaging.kafka.streams.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthMessagingProperties$Rabbit"
  type: "java.lang.Boolean"
  description: "Enable tracing of RabbitMQ."
  shortDescription: "Enable tracing of RabbitMQ."
  name: "spring.sleuth.messaging.rabbit.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.messaging.SleuthMessagingProperties$Rabbit"
  type: "java.lang.String"
  description: "Rabbit remote service name."
  shortDescription: "Rabbit remote service name."
  name: "spring.sleuth.messaging.rabbit.remote-service-name"
  defaultValue: "rabbitmq"
- type: "java.lang.Boolean"
  description: "Enable tracing for MongoDb."
  shortDescription: "Enable tracing for MongoDb."
  name: "spring.sleuth.mongodb.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthOpentracingProperties"
  type: "java.lang.Boolean"
  description: "Enables OpenTracing support."
  shortDescription: "Enables OpenTracing support."
  name: "spring.sleuth.opentracing.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.brave.SleuthPropagationProperties"
  type: "java.util.List<org.springframework.cloud.sleuth.brave.propagation.PropagationType>"
  description: "Tracing context propagation types."
  shortDescription: "Tracing context propagation types."
  name: "spring.sleuth.propagation.type"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enable tracing for Quartz."
  shortDescription: "Enable tracing for Quartz."
  name: "spring.sleuth.quartz.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.reactor.SleuthReactorProperties"
  type: "java.lang.Boolean"
  description: "When true decorates on each operator, will be less performing, but\
    \ logging will always contain the tracing entries in each operator. When false\
    \ decorates on last operator, will be more performing, but logging might not always\
    \ contain the tracing entries. @deprecated use explicit value via {@link SleuthReactorProperties#instrumentationType}"
  shortDescription: "When true decorates on each operator, will be less performing,\
    \ but logging will always contain the tracing entries in each operator."
  name: "spring.sleuth.reactor.decorate-on-each"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReason: "An enum is a more clear solution"
  deprecationReplacement: "spring.sleuth.reactor.instrumentation-type=DECORATE_ON_EACH"
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.reactor.SleuthReactorProperties"
  type: "java.lang.Boolean"
  description: "When true enables instrumentation for reactor."
  shortDescription: "When true enables instrumentation for reactor."
  name: "spring.sleuth.reactor.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.reactor.SleuthReactorProperties"
  type: "org.springframework.cloud.sleuth.autoconfig.instrument.reactor.SleuthReactorProperties$InstrumentationType"
  name: "spring.sleuth.reactor.instrumentation-type"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.brave.instrument.redis.TraceRedisProperties"
  type: "java.lang.Boolean"
  description: "Enable span information propagation when using Redis."
  shortDescription: "Enable span information propagation when using Redis."
  name: "spring.sleuth.redis.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.brave.instrument.redis.TraceRedisProperties"
  type: "java.lang.String"
  description: "Service name for the remote Redis endpoint."
  shortDescription: "Service name for the remote Redis endpoint."
  name: "spring.sleuth.redis.remote-service-name"
  defaultValue: "redis"
- type: "java.lang.Boolean"
  description: "Enable tracing of RPC."
  shortDescription: "Enable tracing of RPC."
  name: "spring.sleuth.rpc.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.rxjava.SleuthRxJavaSchedulersProperties$Hook"
  type: "java.lang.Boolean"
  description: "Enable support for RxJava via RxJavaSchedulersHook."
  shortDescription: "Enable support for RxJava via RxJavaSchedulersHook."
  name: "spring.sleuth.rxjava.schedulers.hook.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.rxjava.SleuthRxJavaSchedulersProperties"
  type: "java.lang.String[]"
  description: "Thread names for which spans will not be sampled."
  shortDescription: "Thread names for which spans will not be sampled."
  name: "spring.sleuth.rxjava.schedulers.ignoredthreads"
  defaultValue:
  - "HystrixMetricPoller"
  - "^RxComputation.*$"
- owner: "org.springframework.cloud.sleuth.autoconfig.brave.SamplerProperties"
  type: "java.lang.Float"
  description: "Probability of requests that should be sampled. E.g. 1.0 - 100% requests\
    \ should be sampled. The precision is whole-numbers only (i.e. there's no support\
    \ for 0.1% of the traces)."
  shortDescription: "Probability of requests that should be sampled."
  name: "spring.sleuth.sampler.probability"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.brave.SamplerProperties"
  type: "java.lang.Integer"
  description: "A rate per second can be a nice choice for low-traffic endpoints as\
    \ it allows you surge protection. For example, you may never expect the endpoint\
    \ to get more than 50 requests per second. If there was a sudden surge of traffic,\
    \ to 5000 requests per second, you would still end up with 50 traces per second.\
    \ Conversely, if you had a percentage, like 10%, the same surge would end up with\
    \ 500 traces per second, possibly overloading your storage. Amazon X-Ray includes\
    \ a rate-limited sampler (named Reservoir) for this purpose. Brave has taken the\
    \ same approach via the {@link brave.sampler.RateLimitingSampler}."
  shortDescription: "A rate per second can be a nice choice for low-traffic endpoints\
    \ as it allows you surge protection."
  name: "spring.sleuth.sampler.rate"
  defaultValue: 10
- type: "java.lang.Boolean"
  description: "Enable refresh scope for sampler."
  shortDescription: "Enable refresh scope for sampler."
  name: "spring.sleuth.sampler.refresh.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.scheduling.SleuthSchedulingProperties"
  type: "java.lang.Boolean"
  description: "Enable tracing for {@link org.springframework.scheduling.annotation.Scheduled}."
  shortDescription: "Enable tracing for {@link org.springframework.scheduling.annotation.Scheduled}."
  name: "spring.sleuth.scheduled.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.scheduling.SleuthSchedulingProperties"
  type: "java.lang.String"
  description: "Pattern for the fully qualified name of a class that should be skipped."
  shortDescription: "Pattern for the fully qualified name of a class that should be\
    \ skipped."
  name: "spring.sleuth.scheduled.skip-pattern"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthSpanFilterProperties"
  type: "java.util.List<java.lang.String>"
  description: "Additional list of span names to ignore. Will be appended to {@link\
    \ #spanNamePatternsToSkip}."
  shortDescription: "Additional list of span names to ignore."
  name: "spring.sleuth.span-filter.additional-span-name-patterns-to-ignore"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthSpanFilterProperties"
  type: "java.lang.Boolean"
  description: "Will turn on the default Sleuth handler mechanism. Might ignore exporting\
    \ of certain spans;"
  shortDescription: "Will turn on the default Sleuth handler mechanism."
  name: "spring.sleuth.span-filter.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthSpanFilterProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of span names to ignore. They will not be sent to external systems."
  shortDescription: "List of span names to ignore."
  name: "spring.sleuth.span-filter.span-name-patterns-to-skip"
  defaultValue: "^catalogWatchTaskScheduler$"
- owner: "org.springframework.cloud.sleuth.autoconfig.brave.SleuthProperties"
  type: "java.lang.Boolean"
  description: "True means the tracing system supports sharing a span ID between a\
    \ client and server."
  shortDescription: "True means the tracing system supports sharing a span ID between\
    \ a client and server."
  name: "spring.sleuth.supports-join"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.brave.SleuthProperties"
  type: "java.lang.Boolean"
  description: "When true, generate 128-bit trace IDs instead of 64-bit ones."
  shortDescription: "When true, generate 128-bit trace IDs instead of 64-bit ones."
  name: "spring.sleuth.trace-id128"
  defaultValue: false
- owner: "org.springframework.cloud.sleuth.autoconfig.SleuthTracerProperties"
  type: "org.springframework.cloud.sleuth.autoconfig.SleuthTracerProperties$TracerMode"
  description: "Set which tracer implementation should be picked."
  shortDescription: "Set which tracer implementation should be picked."
  name: "spring.sleuth.tracer.mode"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties"
  type: "java.lang.String"
  description: "Additional pattern for URLs that should be skipped in tracing. This\
    \ will be appended to the {@link SleuthWebProperties#skipPattern}."
  shortDescription: "Additional pattern for URLs that should be skipped in tracing."
  name: "spring.sleuth.web.additional-skip-pattern"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties$Client"
  type: "java.lang.Boolean"
  description: "Enable interceptor injecting into {@link org.springframework.web.client.RestTemplate}."
  shortDescription: "Enable interceptor injecting into {@link org.springframework.web.client.RestTemplate}."
  name: "spring.sleuth.web.client.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties$Client"
  type: "java.lang.String"
  description: "Pattern for URLs that should be skipped in client side tracing."
  shortDescription: "Pattern for URLs that should be skipped in client side tracing."
  name: "spring.sleuth.web.client.skip-pattern"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties"
  type: "java.lang.Boolean"
  description: "When true enables instrumentation for web applications."
  shortDescription: "When true enables instrumentation for web applications."
  name: "spring.sleuth.web.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties"
  type: "java.lang.Integer"
  description: "Order in which the tracing filters should be registered."
  shortDescription: "Order in which the tracing filters should be registered."
  name: "spring.sleuth.web.filter-order"
  defaultValue: 0
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties"
  type: "java.lang.Boolean"
  description: "If set to true, auto-configured skip patterns will be ignored."
  shortDescription: "If set to true, auto-configured skip patterns will be ignored."
  name: "spring.sleuth.web.ignore-auto-configured-skip-patterns"
  defaultValue: false
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties$Servlet"
  type: "java.lang.Boolean"
  description: "Enable servlet instrumentation."
  shortDescription: "Enable servlet instrumentation."
  name: "spring.sleuth.web.servlet.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties"
  type: "java.lang.String"
  description: "Pattern for URLs that should be skipped in tracing."
  shortDescription: "Pattern for URLs that should be skipped in tracing."
  name: "spring.sleuth.web.skip-pattern"
  defaultValue: "/api-docs.*|/swagger.*|.*\\.png|.*\\.css|.*\\.js|.*\\.html|/favicon.ico|/hystrix.stream"
- type: "java.lang.Boolean"
  description: "Enable tracing instrumentation for WebClient."
  shortDescription: "Enable tracing instrumentation for WebClient."
  name: "spring.sleuth.web.webclient.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
  type: "java.lang.Boolean"
  description: "Whether initialization should continue when an error occurs."
  shortDescription: "Whether initialization should continue when an error occurs."
  name: "spring.sql.init.continue-on-error"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
  type: "java.util.List<java.lang.String>"
  description: "Locations of the data (DML) scripts to apply to the database."
  shortDescription: "Locations of the data (DML) scripts to apply to the database."
  name: "spring.sql.init.data-locations"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether basic script-based initialization of an SQL database is enabled."
  shortDescription: "Whether basic script-based initialization of an SQL database\
    \ is enabled."
  name: "spring.sql.init.enabled"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.sql.init.mode"
- owner: "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
  type: "java.nio.charset.Charset"
  description: "Encoding of the schema and data scripts."
  shortDescription: "Encoding of the schema and data scripts."
  name: "spring.sql.init.encoding"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
  type: "org.springframework.boot.sql.init.DatabaseInitializationMode"
  description: "Mode to apply when determining whether initialization should be performed."
  shortDescription: "Mode to apply when determining whether initialization should\
    \ be performed."
  name: "spring.sql.init.mode"
  defaultValue: "embedded"
- owner: "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
  type: "java.lang.String"
  description: "Password of the database to use when applying initialization scripts\
    \ (if different)."
  shortDescription: "Password of the database to use when applying initialization\
    \ scripts (if different)."
  name: "spring.sql.init.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
  type: "java.lang.String"
  description: "Platform to use in the default schema or data script locations, schema-${platform}.sql\
    \ and data-${platform}.sql."
  shortDescription: "Platform to use in the default schema or data script locations,\
    \ schema-${platform}.sql and data-${platform}.sql."
  name: "spring.sql.init.platform"
  defaultValue: "all"
- owner: "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
  type: "java.util.List<java.lang.String>"
  description: "Locations of the schema (DDL) scripts to apply to the database."
  shortDescription: "Locations of the schema (DDL) scripts to apply to the database."
  name: "spring.sql.init.schema-locations"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
  type: "java.lang.String"
  description: "Statement separator in the schema and data scripts."
  shortDescription: "Statement separator in the schema and data scripts."
  name: "spring.sql.init.separator"
  defaultValue: ";"
- owner: "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
  type: "java.lang.String"
  description: "Username of the database to use when applying initialization scripts\
    \ (if different)."
  shortDescription: "Username of the database to use when applying initialization\
    \ scripts (if different)."
  name: "spring.sql.init.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.lang.Boolean"
  description: "Whether core threads are allowed to time out. This enables dynamic\
    \ growing and shrinking of the pool."
  shortDescription: "Whether core threads are allowed to time out."
  name: "spring.task.execution.pool.allow-core-thread-timeout"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.lang.Integer"
  description: "Core number of threads."
  shortDescription: "Core number of threads."
  name: "spring.task.execution.pool.core-size"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.time.Duration"
  description: "Time limit for which threads may remain idle before being terminated."
  shortDescription: "Time limit for which threads may remain idle before being terminated."
  name: "spring.task.execution.pool.keep-alive"
  defaultValue: "60s"
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum allowed number of threads. If tasks are filling up the queue,\
    \ the pool can expand up to that size to accommodate the load. Ignored if the\
    \ queue is unbounded."
  shortDescription: "Maximum allowed number of threads."
  name: "spring.task.execution.pool.max-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.lang.Integer"
  description: "Queue capacity. An unbounded capacity does not increase the pool and\
    \ therefore ignores the \"max-size\" property."
  shortDescription: "Queue capacity."
  name: "spring.task.execution.pool.queue-capacity"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
  type: "java.lang.Boolean"
  description: "Whether the executor should wait for scheduled tasks to complete on\
    \ shutdown."
  shortDescription: "Whether the executor should wait for scheduled tasks to complete\
    \ on shutdown."
  name: "spring.task.execution.shutdown.await-termination"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
  type: "java.time.Duration"
  description: "Maximum time the executor should wait for remaining tasks to complete."
  shortDescription: "Maximum time the executor should wait for remaining tasks to\
    \ complete."
  name: "spring.task.execution.shutdown.await-termination-period"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties"
  type: "java.lang.String"
  description: "Prefix to use for the names of newly created threads."
  shortDescription: "Prefix to use for the names of newly created threads."
  name: "spring.task.execution.thread-name-prefix"
  defaultValue: "task-"
- owner: "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum allowed number of threads."
  shortDescription: "Maximum allowed number of threads."
  name: "spring.task.scheduling.pool.size"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
  type: "java.lang.Boolean"
  description: "Whether the executor should wait for scheduled tasks to complete on\
    \ shutdown."
  shortDescription: "Whether the executor should wait for scheduled tasks to complete\
    \ on shutdown."
  name: "spring.task.scheduling.shutdown.await-termination"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
  type: "java.time.Duration"
  description: "Maximum time the executor should wait for remaining tasks to complete."
  shortDescription: "Maximum time the executor should wait for remaining tasks to\
    \ complete."
  name: "spring.task.scheduling.shutdown.await-termination-period"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties"
  type: "java.lang.String"
  description: "Prefix to use for the names of newly created threads."
  shortDescription: "Prefix to use for the names of newly created threads."
  name: "spring.task.scheduling.thread-name-prefix"
  defaultValue: "scheduling-"
- type: "org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase$Replace"
  description: "Type of existing DataSource to replace."
  shortDescription: "Type of existing DataSource to replace."
  name: "spring.test.database.replace"
  defaultValue: "any"
- type: "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrint"
  description: "MVC Print option."
  shortDescription: "MVC Print option."
  name: "spring.test.mockmvc.print"
  defaultValue: "default"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable template caching."
  shortDescription: "Whether to enable template caching."
  name: "spring.thymeleaf.cache"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the template exists before rendering it."
  shortDescription: "Whether to check that the template exists before rendering it."
  name: "spring.thymeleaf.check-template"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the templates location exists."
  shortDescription: "Whether to check that the templates location exists."
  name: "spring.thymeleaf.check-template-location"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Enable the SpringEL compiler in SpringEL expressions."
  shortDescription: "Enable the SpringEL compiler in SpringEL expressions."
  name: "spring.thymeleaf.enable-spring-el-compiler"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable Thymeleaf view resolution for Web frameworks."
  shortDescription: "Whether to enable Thymeleaf view resolution for Web frameworks."
  name: "spring.thymeleaf.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.nio.charset.Charset"
  description: "Template files encoding."
  shortDescription: "Template files encoding."
  name: "spring.thymeleaf.encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String[]"
  description: "Comma-separated list of view names (patterns allowed) that should\
    \ be excluded from resolution."
  shortDescription: "Comma-separated list of view names (patterns allowed) that should\
    \ be excluded from resolution."
  name: "spring.thymeleaf.excluded-view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String"
  description: "Template mode to be applied to templates. See also Thymeleaf's TemplateMode\
    \ enum."
  shortDescription: "Template mode to be applied to templates."
  name: "spring.thymeleaf.mode"
  defaultValue: "HTML"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String"
  description: "Prefix that gets prepended to view names when building a URL."
  shortDescription: "Prefix that gets prepended to view names when building a URL."
  name: "spring.thymeleaf.prefix"
  defaultValue: "classpath:/templates/"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  type: "java.lang.String[]"
  description: "Comma-separated list of view names (patterns allowed) that should\
    \ be the only ones executed in CHUNKED mode when a max chunk size is set."
  shortDescription: "Comma-separated list of view names (patterns allowed) that should\
    \ be the only ones executed in CHUNKED mode when a max chunk size is set."
  name: "spring.thymeleaf.reactive.chunked-mode-view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  type: "java.lang.String[]"
  description: "Comma-separated list of view names (patterns allowed) that should\
    \ be executed in FULL mode even if a max chunk size is set."
  shortDescription: "Comma-separated list of view names (patterns allowed) that should\
    \ be executed in FULL mode even if a max chunk size is set."
  name: "spring.thymeleaf.reactive.full-mode-view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of data buffers used for writing to the response. Templates\
    \ will execute in CHUNKED mode by default if this is set."
  shortDescription: "Maximum size of data buffers used for writing to the response."
  name: "spring.thymeleaf.reactive.max-chunk-size"
  defaultValue: "0B"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  type: "java.util.List<org.springframework.http.MediaType>"
  description: "Media types supported by the view technology."
  shortDescription: "Media types supported by the view technology."
  name: "spring.thymeleaf.reactive.media-types"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether hidden form inputs acting as markers for checkboxes should\
    \ be rendered before the checkbox element itself."
  shortDescription: "Whether hidden form inputs acting as markers for checkboxes should\
    \ be rendered before the checkbox element itself."
  name: "spring.thymeleaf.render-hidden-markers-before-checkboxes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet"
  type: "org.springframework.util.MimeType"
  description: "Content-Type value written to HTTP responses."
  shortDescription: "Content-Type value written to HTTP responses."
  name: "spring.thymeleaf.servlet.content-type"
  defaultValue: "text/html"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet"
  type: "java.lang.Boolean"
  description: "Whether Thymeleaf should start writing partial output as soon as possible\
    \ or buffer until template processing is finished."
  shortDescription: "Whether Thymeleaf should start writing partial output as soon\
    \ as possible or buffer until template processing is finished."
  name: "spring.thymeleaf.servlet.produce-partial-output-while-processing"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String"
  description: "Suffix that gets appended to view names when building a URL."
  shortDescription: "Suffix that gets appended to view names when building a URL."
  name: "spring.thymeleaf.suffix"
  defaultValue: ".html"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Integer"
  description: "Order of the template resolver in the chain. By default, the template\
    \ resolver is first in the chain. Order start at 1 and should only be set if you\
    \ have defined additional \"TemplateResolver\" beans."
  shortDescription: "Order of the template resolver in the chain."
  name: "spring.thymeleaf.template-resolver-order"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String[]"
  description: "Comma-separated list of view names (patterns allowed) that can be\
    \ resolved."
  shortDescription: "Comma-separated list of view names (patterns allowed) that can\
    \ be resolved."
  name: "spring.thymeleaf.view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.transaction.TransactionProperties"
  type: "java.time.Duration"
  description: "Default transaction timeout. If a duration suffix is not specified,\
    \ seconds will be used."
  shortDescription: "Default transaction timeout."
  name: "spring.transaction.default-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.transaction.TransactionProperties"
  type: "java.lang.Boolean"
  description: "Whether to roll back on commit failures."
  shortDescription: "Whether to roll back on commit failures."
  name: "spring.transaction.rollback-on-commit-failure"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties"
  type: "java.util.Locale"
  description: "Locale to use. By default, this locale is overridden by the \"Accept-Language\"\
    \ header."
  shortDescription: "Locale to use."
  name: "spring.web.locale"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties"
  type: "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
  description: "Define how the locale should be resolved."
  shortDescription: "Define how the locale should be resolved."
  name: "spring.web.locale-resolver"
  defaultValue: "accept-header"
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources"
  type: "java.lang.Boolean"
  description: "Whether to enable default resource handling."
  shortDescription: "Whether to enable default resource handling."
  name: "spring.web.resources.add-mappings"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that the response message is intended for a single user and\
    \ must not be stored by a shared cache."
  shortDescription: "Indicate that the response message is intended for a single user\
    \ and must not be stored by a shared cache."
  name: "spring.web.resources.cache.cachecontrol.cache-private"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that any cache may store the response."
  shortDescription: "Indicate that any cache may store the response."
  name: "spring.web.resources.cache.cachecontrol.cache-public"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response should be cached, in seconds if no duration\
    \ suffix is not specified."
  shortDescription: "Maximum time the response should be cached, in seconds if no\
    \ duration suffix is not specified."
  name: "spring.web.resources.cache.cachecontrol.max-age"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that once it has become stale, a cache must not use the response\
    \ without re-validating it with the server."
  shortDescription: "Indicate that once it has become stale, a cache must not use\
    \ the response without re-validating it with the server."
  name: "spring.web.resources.cache.cachecontrol.must-revalidate"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that the cached response can be reused only if re-validated\
    \ with the server."
  shortDescription: "Indicate that the cached response can be reused only if re-validated\
    \ with the server."
  name: "spring.web.resources.cache.cachecontrol.no-cache"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate to not cache the response in any case."
  shortDescription: "Indicate to not cache the response in any case."
  name: "spring.web.resources.cache.cachecontrol.no-store"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate intermediaries (caches and others) that they should not transform\
    \ the response content."
  shortDescription: "Indicate intermediaries (caches and others) that they should\
    \ not transform the response content."
  name: "spring.web.resources.cache.cachecontrol.no-transform"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Same meaning as the \"must-revalidate\" directive, except that it\
    \ does not apply to private caches."
  shortDescription: "Same meaning as the \"must-revalidate\" directive, except that\
    \ it does not apply to private caches."
  name: "spring.web.resources.cache.cachecontrol.proxy-revalidate"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response should be cached by shared caches, in seconds\
    \ if no duration suffix is not specified."
  shortDescription: "Maximum time the response should be cached by shared caches,\
    \ in seconds if no duration suffix is not specified."
  name: "spring.web.resources.cache.cachecontrol.s-max-age"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response may be used when errors are encountered,\
    \ in seconds if no duration suffix is not specified."
  shortDescription: "Maximum time the response may be used when errors are encountered,\
    \ in seconds if no duration suffix is not specified."
  name: "spring.web.resources.cache.cachecontrol.stale-if-error"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response can be served after it becomes stale, in\
    \ seconds if no duration suffix is not specified."
  shortDescription: "Maximum time the response can be served after it becomes stale,\
    \ in seconds if no duration suffix is not specified."
  name: "spring.web.resources.cache.cachecontrol.stale-while-revalidate"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache"
  type: "java.time.Duration"
  description: "Cache period for the resources served by the resource handler. If\
    \ a duration suffix is not specified, seconds will be used. Can be overridden\
    \ by the 'spring.web.resources.cache.cachecontrol' properties."
  shortDescription: "Cache period for the resources served by the resource handler."
  name: "spring.web.resources.cache.period"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache"
  type: "java.lang.Boolean"
  description: "Whether we should use the \"lastModified\" metadata of the files in\
    \ HTTP caching headers."
  shortDescription: "Whether we should use the \"lastModified\" metadata of the files\
    \ in HTTP caching headers."
  name: "spring.web.resources.cache.use-last-modified"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable caching in the Resource chain."
  shortDescription: "Whether to enable caching in the Resource chain."
  name: "spring.web.resources.chain.cache"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable resolution of already compressed resources (gzip,\
    \ brotli). Checks for a resource name with the '.gz' or '.br' file extensions."
  shortDescription: "Whether to enable resolution of already compressed resources\
    \ (gzip, brotli)."
  name: "spring.web.resources.chain.compressed"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable the Spring Resource Handling chain. By default,\
    \ disabled unless at least one strategy has been enabled."
  shortDescription: "Whether to enable the Spring Resource Handling chain."
  name: "spring.web.resources.chain.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content"
  type: "java.lang.Boolean"
  description: "Whether to enable the content Version Strategy."
  shortDescription: "Whether to enable the content Version Strategy."
  name: "spring.web.resources.chain.strategy.content.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content"
  type: "java.lang.String[]"
  description: "Comma-separated list of patterns to apply to the content Version Strategy."
  shortDescription: "Comma-separated list of patterns to apply to the content Version\
    \ Strategy."
  name: "spring.web.resources.chain.strategy.content.paths"
  defaultValue:
  - "/**"
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed"
  type: "java.lang.Boolean"
  description: "Whether to enable the fixed Version Strategy."
  shortDescription: "Whether to enable the fixed Version Strategy."
  name: "spring.web.resources.chain.strategy.fixed.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed"
  type: "java.lang.String[]"
  description: "Comma-separated list of patterns to apply to the fixed Version Strategy."
  shortDescription: "Comma-separated list of patterns to apply to the fixed Version\
    \ Strategy."
  name: "spring.web.resources.chain.strategy.fixed.paths"
  defaultValue:
  - "/**"
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed"
  type: "java.lang.String"
  description: "Version string to use for the fixed Version Strategy."
  shortDescription: "Version string to use for the fixed Version Strategy."
  name: "spring.web.resources.chain.strategy.fixed.version"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources"
  type: "java.lang.String[]"
  description: "Locations of static resources. Defaults to classpath:[/META-INF/resources/,\
    \ /resources/, /static/, /public/]."
  shortDescription: "Locations of static resources."
  name: "spring.web.resources.static-locations"
  defaultValue:
  - "classpath:/META-INF/resources/"
  - "classpath:/resources/"
  - "classpath:/static/"
  - "classpath:/public/"
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
  type: "java.lang.String"
  description: "Base path for all web handlers."
  shortDescription: "Base path for all web handlers."
  name: "spring.webflux.base-path"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format"
  type: "java.lang.String"
  description: "Date format to use, for example `dd/MM/yyyy`."
  shortDescription: "Date format to use, for example `dd/MM/yyyy`."
  name: "spring.webflux.format.date"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format"
  type: "java.lang.String"
  description: "Date-time format to use, for example `yyyy-MM-dd HH:mm:ss`."
  shortDescription: "Date-time format to use, for example `yyyy-MM-dd HH:mm:ss`."
  name: "spring.webflux.format.date-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format"
  type: "java.lang.String"
  description: "Time format to use, for example `HH:mm:ss`."
  shortDescription: "Time format to use, for example `HH:mm:ss`."
  name: "spring.webflux.format.time"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable Spring's HiddenHttpMethodFilter."
  shortDescription: "Whether to enable Spring's HiddenHttpMethodFilter."
  name: "spring.webflux.hiddenmethod.filter.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Cookie"
  type: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$SameSite"
  description: "SameSite attribute value for session Cookies."
  shortDescription: "SameSite attribute value for session Cookies."
  name: "spring.webflux.session.cookie.same-site"
  defaultValue: "lax"
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
  type: "java.lang.String"
  description: "Path pattern used for static resources."
  shortDescription: "Path pattern used for static resources."
  name: "spring.webflux.static-path-pattern"
  defaultValue: "/**"
- owner: "org.springframework.boot.autoconfigure.webservices.WebServicesProperties"
  type: "java.lang.String"
  description: "Path that serves as the base URI for the services."
  shortDescription: "Path that serves as the base URI for the services."
  name: "spring.webservices.path"
  defaultValue: "/services"
- owner: "org.springframework.boot.autoconfigure.webservices.WebServicesProperties$Servlet"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Servlet init parameters to pass to Spring Web Services."
  shortDescription: "Servlet init parameters to pass to Spring Web Services."
  name: "spring.webservices.servlet.init"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.webservices.WebServicesProperties$Servlet"
  type: "java.lang.Integer"
  description: "Load on startup priority of the Spring Web Services servlet."
  shortDescription: "Load on startup priority of the Spring Web Services servlet."
  name: "spring.webservices.servlet.load-on-startup"
  defaultValue: -1
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of locations of WSDLs and accompanying XSDs to\
    \ be exposed as beans."
  shortDescription: "Comma-separated list of locations of WSDLs and accompanying XSDs\
    \ to be exposed as beans."
  name: "spring.webservices.wsdl-locations"
  defaultValue: ""
- type: "java.lang.String"
  description: "Maximum number of bytes for a given message with spans sent to Zipkin\
    \ over ActiveMQ."
  shortDescription: "Maximum number of bytes for a given message with spans sent to\
    \ Zipkin over ActiveMQ."
  name: "spring.zipkin.activemq.message-max-bytes"
  defaultValue: 100000
- type: "java.lang.String"
  description: "Name of the ActiveMQ queue where spans should be sent to Zipkin."
  shortDescription: "Name of the ActiveMQ queue where spans should be sent to Zipkin."
  name: "spring.zipkin.activemq.queue"
  defaultValue: "zipkin"
- owner: "org.springframework.cloud.sleuth.zipkin2.ZipkinProperties"
  type: "java.lang.String"
  description: "The API path to append to baseUrl (above) as suffix. This applies\
    \ if you use other monitoring tools, such as New Relic. The trace API doesn't\
    \ need the API path, so you can set it to blank (\"\") in the configuration."
  shortDescription: "The API path to append to baseUrl (above) as suffix."
  name: "spring.zipkin.api-path"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.zipkin2.ZipkinProperties"
  type: "java.lang.String"
  description: "URL of the zipkin query server instance. You can also provide the\
    \ service id of the Zipkin server if Zipkin's registered in service discovery\
    \ (e.g. https://zipkinserver/)."
  shortDescription: "URL of the zipkin query server instance."
  name: "spring.zipkin.base-url"
  defaultValue: "http://localhost:9411/"
- owner: "org.springframework.cloud.sleuth.zipkin2.ZipkinProperties$Compression"
  type: "java.lang.Boolean"
  name: "spring.zipkin.compression.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.sleuth.zipkin2.ZipkinProperties"
  type: "java.lang.Boolean"
  description: "If set to {@code false}, will treat the {@link ZipkinProperties#baseUrl}\
    \ as a URL always."
  shortDescription: "If set to {@code false}, will treat the {@link ZipkinProperties#baseUrl}\
    \ as a URL always."
  name: "spring.zipkin.discovery-client-enabled"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.zipkin2.ZipkinProperties"
  type: "java.lang.Boolean"
  description: "Enables sending spans to Zipkin."
  shortDescription: "Enables sending spans to Zipkin."
  name: "spring.zipkin.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.sleuth.zipkin2.ZipkinProperties"
  type: "zipkin2.codec.SpanBytesEncoder"
  description: "Encoding type of spans sent to Zipkin. Set to {@link SpanBytesEncoder#JSON_V1}\
    \ if your server is not recent."
  shortDescription: "Encoding type of spans sent to Zipkin."
  name: "spring.zipkin.encoder"
  defaultValue: ""
- type: "java.lang.String"
  description: "Name of the Kafka topic where spans should be sent to Zipkin."
  shortDescription: "Name of the Kafka topic where spans should be sent to Zipkin."
  name: "spring.zipkin.kafka.topic"
  defaultValue: "zipkin"
- owner: "org.springframework.cloud.sleuth.zipkin2.ZipkinProperties$Locator$Discovery"
  type: "java.lang.Boolean"
  description: "Enabling of locating the host name via service discovery."
  shortDescription: "Enabling of locating the host name via service discovery."
  name: "spring.zipkin.locator.discovery.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.sleuth.zipkin2.ZipkinProperties"
  type: "java.lang.Integer"
  description: "Timeout in seconds before pending spans will be sent in batches to\
    \ Zipkin."
  shortDescription: "Timeout in seconds before pending spans will be sent in batches\
    \ to Zipkin."
  name: "spring.zipkin.message-timeout"
  defaultValue: 1
- type: "java.lang.String"
  description: "Addresses of the RabbitMQ brokers used to send spans to Zipkin"
  shortDescription: "Addresses of the RabbitMQ brokers used to send spans to Zipkin"
  name: "spring.zipkin.rabbitmq.addresses"
  defaultValue: ""
- type: "java.lang.String"
  description: "Name of the RabbitMQ queue where spans should be sent to Zipkin."
  shortDescription: "Name of the RabbitMQ queue where spans should be sent to Zipkin."
  name: "spring.zipkin.rabbitmq.queue"
  defaultValue: "zipkin"
- owner: "org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinSenderProperties"
  type: "org.springframework.cloud.sleuth.autoconfig.zipkin2.ZipkinSenderProperties$SenderType"
  description: "Means of sending spans to Zipkin."
  shortDescription: "Means of sending spans to Zipkin."
  name: "spring.zipkin.sender.type"
  defaultValue: ""
- owner: "org.springframework.cloud.sleuth.zipkin2.ZipkinProperties$Service"
  type: "java.lang.String"
  description: "The name of the service, from which the Span was sent via HTTP, that\
    \ should appear in Zipkin."
  shortDescription: "The name of the service, from which the Span was sent via HTTP,\
    \ that should appear in Zipkin."
  name: "spring.zipkin.service.name"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties$ApiDocs"
  type: "java.lang.Boolean"
  description: "Whether to generate and serve an OpenAPI document."
  shortDescription: "Whether to generate and serve an OpenAPI document."
  name: "springdoc.api-docs.enabled"
  defaultValue: true
- owner: "org.springdoc.core.SpringDocConfigProperties$Groups"
  type: "java.lang.Boolean"
  description: "The Enabled."
  shortDescription: "The Enabled."
  name: "springdoc.api-docs.groups.enabled"
  defaultValue: false
- owner: "org.springdoc.core.SpringDocConfigProperties$ApiDocs"
  type: "java.lang.String"
  description: "Path to the generated OpenAPI documentation. For a yaml file, append\
    \ \".yaml\" to the path."
  shortDescription: "Path to the generated OpenAPI documentation."
  name: "springdoc.api-docs.path"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties$ApiDocs"
  type: "java.lang.Boolean"
  description: "The Resolve schema properties."
  shortDescription: "The Resolve schema properties."
  name: "springdoc.api-docs.resolve-schema-properties"
  defaultValue: false
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "The Auto tag classes."
  shortDescription: "The Auto tag classes."
  name: "springdoc.auto-tag-classes"
  defaultValue: true
- owner: "org.springdoc.core.SpringDocConfigProperties$Cache"
  type: "java.lang.Boolean"
  description: "The Disabled."
  shortDescription: "The Disabled."
  name: "springdoc.cache.disabled"
  defaultValue: false
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.util.List<java.lang.String>"
  description: "The Consumes to match."
  shortDescription: "The Consumes to match."
  name: "springdoc.consumes-to-match"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.String"
  description: "The Default consumes media type."
  shortDescription: "The Default consumes media type."
  name: "springdoc.default-consumes-media-type"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.String"
  description: "The Default produces media type."
  shortDescription: "The Default produces media type."
  name: "springdoc.default-produces-media-type"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "The Enable native support."
  shortDescription: "The Enable native support."
  name: "springdoc.enable-native-image-support"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.util.List<org.springdoc.core.SpringDocConfigProperties$GroupConfig>"
  description: "The Group configs."
  shortDescription: "The Group configs."
  name: "springdoc.group-configs"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.util.List<java.lang.String>"
  description: "The Headers to match."
  shortDescription: "The Headers to match."
  name: "springdoc.headers-to-match"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "The Model and view allowed."
  shortDescription: "The Model and view allowed."
  name: "springdoc.model-and-view-allowed"
  defaultValue: false
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "The Override with generic response."
  shortDescription: "The Override with generic response."
  name: "springdoc.override-with-generic-response"
  defaultValue: true
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.util.List<java.lang.String>"
  description: "The Packages to exclude."
  shortDescription: "The Packages to exclude."
  name: "springdoc.packages-to-exclude"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.util.List<java.lang.String>"
  description: "The Packages to scan."
  shortDescription: "The Packages to scan."
  name: "springdoc.packages-to-scan"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.util.List<java.lang.String>"
  description: "The Paths to exclude."
  shortDescription: "The Paths to exclude."
  name: "springdoc.paths-to-exclude"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.util.List<java.lang.String>"
  description: "The Paths to match."
  shortDescription: "The Paths to match."
  name: "springdoc.paths-to-match"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "Allow for pre-loading OpenAPI"
  shortDescription: "Allow for pre-loading OpenAPI"
  name: "springdoc.pre-loading-enabled"
  defaultValue: false
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.util.List<java.lang.String>"
  description: "The Produces to match."
  shortDescription: "The Produces to match."
  name: "springdoc.produces-to-match"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "The Remove broken reference definitions."
  shortDescription: "The Remove broken reference definitions."
  name: "springdoc.remove-broken-reference-definitions"
  defaultValue: true
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "The Show actuator."
  shortDescription: "The Show actuator."
  name: "springdoc.show-actuator"
  defaultValue: false
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "The Show login endpoint."
  shortDescription: "The Show login endpoint."
  name: "springdoc.show-login-endpoint"
  defaultValue: false
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "URL to fetch external configuration document from."
  shortDescription: "URL to fetch external configuration document from."
  name: "springdoc.swagger-ui.config-url"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties$Csrf"
  type: "java.lang.String"
  description: "The Cookie name."
  shortDescription: "The Cookie name."
  name: "springdoc.swagger-ui.csrf.cookie-name"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties$Csrf"
  type: "java.lang.Boolean"
  description: "The Enabled."
  shortDescription: "The Enabled."
  name: "springdoc.swagger-ui.csrf.enabled"
  defaultValue: false
- owner: "org.springdoc.core.SwaggerUiConfigProperties$Csrf"
  type: "java.lang.String"
  description: "The Header name."
  shortDescription: "The Header name."
  name: "springdoc.swagger-ui.csrf.header-name"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "Enables or disables deep linking for tags and operations. @see  <a\
    \ href=\"https://github.com/swagger-api/swagger-ui/blob/master/docs/usage/deep-linking.md\"\
    >deep-linking.md</a>"
  shortDescription: "Enables or disables deep linking for tags and operations."
  name: "springdoc.swagger-ui.deep-linking"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Integer"
  description: "The default expansion depth for the model on the model-example section."
  shortDescription: "The default expansion depth for the model on the model-example\
    \ section."
  name: "springdoc.swagger-ui.default-model-expand-depth"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "Controls how the model is shown when the API is first rendered."
  shortDescription: "Controls how the model is shown when the API is first rendered."
  name: "springdoc.swagger-ui.default-model-rendering"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Integer"
  description: "The default expansion depth for models (set to -1 completely hide\
    \ the models)."
  shortDescription: "The default expansion depth for models (set to -1 completely\
    \ hide the models)."
  name: "springdoc.swagger-ui.default-models-expand-depth"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "The Disable swagger default url."
  shortDescription: "The Disable swagger default url."
  name: "springdoc.swagger-ui.disable-swagger-default-url"
  defaultValue: false
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "Controls the display of operationId in operations list."
  shortDescription: "Controls the display of operationId in operations list."
  name: "springdoc.swagger-ui.display-operation-id"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "The Display query params."
  shortDescription: "The Display query params."
  name: "springdoc.swagger-ui.display-query-params"
  defaultValue: false
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "The Display query params without oauth 2."
  shortDescription: "The Display query params without oauth 2."
  name: "springdoc.swagger-ui.display-query-params-without-oauth2"
  defaultValue: false
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "Controls the display of the request duration (in milliseconds) for\
    \ Try-It-Out requests."
  shortDescription: "Controls the display of the request duration (in milliseconds)\
    \ for Try-It-Out requests."
  name: "springdoc.swagger-ui.display-request-duration"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "Controls the default expansion setting for the operations and tags."
  shortDescription: "Controls the default expansion setting for the operations and\
    \ tags."
  name: "springdoc.swagger-ui.doc-expansion"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "Whether to generate and serve an OpenAPI document."
  shortDescription: "Whether to generate and serve an OpenAPI document."
  name: "springdoc.swagger-ui.enabled"
  defaultValue: true
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "If set, enables filtering. The top bar will show an edit box that\
    \ could be used to filter the tagged operations that are shown."
  shortDescription: "If set, enables filtering."
  name: "springdoc.swagger-ui.filter"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "org.springdoc.core.AbstractSwaggerUiConfigProperties$Direction"
  description: "The Groups order."
  shortDescription: "The Groups order."
  name: "springdoc.swagger-ui.groups-order"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "The name of a component available via the plugin system to use as\
    \ the top-level layout for Swagger UI."
  shortDescription: "The name of a component available via the plugin system to use\
    \ as the top-level layout for Swagger UI."
  name: "springdoc.swagger-ui.layout"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Integer"
  description: "If set, limits the number of tagged operations displayed to at most\
    \ this many."
  shortDescription: "If set, limits the number of tagged operations displayed to at\
    \ most this many."
  name: "springdoc.swagger-ui.max-displayed-tags"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "The Additional query string params."
  shortDescription: "The Additional query string params."
  name: "springdoc.swagger-ui.oauth.additional-query-string-params"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.lang.String"
  description: "The App name."
  shortDescription: "The App name."
  name: "springdoc.swagger-ui.oauth.app-name"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.lang.String"
  description: "The Client id."
  shortDescription: "The Client id."
  name: "springdoc.swagger-ui.oauth.client-id"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.lang.String"
  description: "The Client secret."
  shortDescription: "The Client secret."
  name: "springdoc.swagger-ui.oauth.client-secret"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.util.Map<java.lang.String,java.lang.Object>"
  name: "springdoc.swagger-ui.oauth.config-parameters"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.lang.String"
  description: "The Realm."
  shortDescription: "The Realm."
  name: "springdoc.swagger-ui.oauth.realm"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.lang.String"
  description: "The Scope separator."
  shortDescription: "The Scope separator."
  name: "springdoc.swagger-ui.oauth.scope-separator"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.util.List<java.lang.String>"
  description: "The Scopes selected by default upon authentication."
  shortDescription: "The Scopes selected by default upon authentication."
  name: "springdoc.swagger-ui.oauth.scopes"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.lang.String"
  description: "The Use basic authentication with access code grant."
  shortDescription: "The Use basic authentication with access code grant."
  name: "springdoc.swagger-ui.oauth.use-basic-authentication-with-access-code-grant"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiOAuthProperties"
  type: "java.lang.Boolean"
  description: "The Use pkce with authorization code grant."
  shortDescription: "The Use pkce with authorization code grant."
  name: "springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "OAuth redirect URL."
  shortDescription: "OAuth redirect URL."
  name: "springdoc.swagger-ui.oauth2-redirect-url"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "Apply a sort to the operation list of each API"
  shortDescription: "Apply a sort to the operation list of each API"
  name: "springdoc.swagger-ui.operations-sorter"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "The path for the Swagger UI pages to load. Will redirect to the springdoc.webjars.prefix\
    \ property."
  shortDescription: "The path for the Swagger UI pages to load."
  name: "springdoc.swagger-ui.path"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "The Persist authorization."
  shortDescription: "The Persist authorization."
  name: "springdoc.swagger-ui.persist-authorization"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "Controls the display of extensions"
  shortDescription: "Controls the display of extensions"
  name: "springdoc.swagger-ui.show-common-extensions"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "Controls the display of vendor extension (x-) fields and values."
  shortDescription: "Controls the display of vendor extension (x-) fields and values."
  name: "springdoc.swagger-ui.show-extensions"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.util.List<java.lang.String>"
  description: "The supported try it out methods"
  shortDescription: "The supported try it out methods"
  name: "springdoc.swagger-ui.supported-submit-methods"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties$SyntaxHighlight"
  type: "java.lang.Boolean"
  description: "The Activated."
  shortDescription: "The Activated."
  name: "springdoc.swagger-ui.syntax-highlight.activated"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties$SyntaxHighlight"
  type: "java.lang.String"
  description: "The Theme."
  shortDescription: "The Theme."
  name: "springdoc.swagger-ui.syntax-highlight.theme"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "Apply a sort to the tag list of each API"
  shortDescription: "Apply a sort to the tag list of each API"
  name: "springdoc.swagger-ui.tags-sorter"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "Try it out enabled"
  shortDescription: "Try it out enabled"
  name: "springdoc.swagger-ui.try-it-out-enabled"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "The Url."
  shortDescription: "The Url."
  name: "springdoc.swagger-ui.url"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.util.Set<org.springdoc.core.AbstractSwaggerUiConfigProperties$SwaggerUrl>"
  description: "The Urls."
  shortDescription: "The Urls."
  name: "springdoc.swagger-ui.urls"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "The Urls primary name."
  shortDescription: "The Urls primary name."
  name: "springdoc.swagger-ui.urls-primary-name"
  defaultValue: ""
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.Boolean"
  description: "The Use root path."
  shortDescription: "The Use root path."
  name: "springdoc.swagger-ui.use-root-path"
  defaultValue: false
- owner: "org.springdoc.core.SwaggerUiConfigProperties"
  type: "java.lang.String"
  description: "URL to validate specs against."
  shortDescription: "URL to validate specs against."
  name: "springdoc.swagger-ui.validator-url"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "Use fully qualified name"
  shortDescription: "Use fully qualified name"
  name: "springdoc.use-fqn"
  defaultValue: false
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "If set to true, exposes the swagger-ui on the actuator management\
    \ port."
  shortDescription: "If set to true, exposes the swagger-ui on the actuator management\
    \ port."
  name: "springdoc.use-management-port"
  defaultValue: false
- owner: "org.springdoc.core.SpringDocConfigProperties$Webjars"
  type: "java.lang.String"
  description: "The Prefix."
  shortDescription: "The Prefix."
  name: "springdoc.webjars.prefix"
  defaultValue: ""
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "The Writer with default pretty printer."
  shortDescription: "The Writer with default pretty printer."
  name: "springdoc.writer-with-default-pretty-printer"
  defaultValue: false
- owner: "org.springdoc.core.SpringDocConfigProperties"
  type: "java.lang.Boolean"
  description: "The Writer with order by keys."
  shortDescription: "The Writer with order by keys."
  name: "springdoc.writer-with-order-by-keys"
  defaultValue: false
- owner: "com.microsoft.azure.telemetry.TelemetryProperties"
  type: "java.lang.String"
  name: "telemetry.instrumentation-key"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Enable trace logs."
  shortDescription: "Enable trace logs."
  name: "trace"
  defaultValue: false
- owner: "de.codecentric.boot.admin.client.config.CloudFoundryApplicationProperties"
  type: "java.lang.String"
  name: "vcap.application.application-id"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.CloudFoundryApplicationProperties"
  type: "java.lang.String"
  name: "vcap.application.instance-index"
  defaultValue: ""
- owner: "de.codecentric.boot.admin.client.config.CloudFoundryApplicationProperties"
  type: "java.util.List<java.lang.String>"
  name: "vcap.application.uris"
  defaultValue: ""
