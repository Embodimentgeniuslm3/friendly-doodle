---
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.Boolean"
  description: "Configure the authentication flow to allow web-authn to be used as\
    \ the first primary factor for authentication. Registered accounts with a valid\
    \ webauthn registration record can choose to login using their device as the first\
    \ step."
  shortDescription: "Configure the authentication flow to allow web-authn to be used\
    \ as the first primary factor for authentication."
  name: "cas.authn.mfa.web-authn.core.allow-primary-authentication"
  defaultValue: false
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.Boolean"
  description: "If {@code true} finish registration op and finish assertion will accept\
    \ responses containing extension outputs for which there was no extension input."
  shortDescription: "If {@code true} finish registration op and finish assertion will\
    \ accept responses containing extension outputs for which there was no extension\
    \ input."
  name: "cas.authn.mfa.web-authn.core.allow-unrequested-extensions"
  defaultValue: false
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.Boolean"
  description: "If false finish registration op will only allow registrations where\
    \ the attestation signature can be linked to a trusted attestation root. This\
    \ excludes self attestation and none attestation. Regardless of the value of this\
    \ option, invalid attestation statements of supported formats will always be rejected.\
    \ For example, a \"packed\" attestation statement with an invalid signature will\
    \ be rejected even if this option is set to true."
  shortDescription: "If false finish registration op will only allow registrations\
    \ where the attestation signature can be linked to a trusted attestation root."
  name: "cas.authn.mfa.web-authn.core.allow-untrusted-attestation"
  defaultValue: false
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.String"
  description: "The allowed origins that returned authenticator responses will be\
    \ compared against. The default is set to the server name. A successful registration\
    \ or authentication operation requires origins to exactly equal one of these values."
  shortDescription: "The allowed origins that returned authenticator responses will\
    \ be compared against."
  name: "cas.authn.mfa.web-authn.core.allowed-origins"
  defaultValue: ""
- required: true
  module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.String"
  description: "The extension input to set for the {@code appid} extension when initiating\
    \ authentication operations. If this member is set, starting an assertion op will\
    \ automatically set the {@code appid} extension input, and finish assertion op\
    \ will adjust its verification logic to also accept this AppID as an alternative\
    \ to the RP ID. By default, this is not set."
  shortDescription: "The extension input to set for the {@code appid} extension when\
    \ initiating authentication operations."
  name: "cas.authn.mfa.web-authn.core.application-id"
  defaultValue: ""
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.String"
  description: "Accepted values are: {@code DIRECT}, {@code INDIRECT}, {@code NONE}.\
    \ The argument for the attestation parameter in registration operations. Unless\
    \ your application has a concrete policy for authenticator attestation, it is\
    \ recommended to leave this parameter undefined."
  shortDescription: "Accepted values are: {@code DIRECT}, {@code INDIRECT}, {@code\
    \ NONE}."
  name: "cas.authn.mfa.web-authn.core.attestation-conveyance-preference"
  defaultValue: "DIRECT"
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.String"
  description: "Name of the principal attribute that indicates the principal's display\
    \ name, primarily used for device registration."
  shortDescription: "Name of the principal attribute that indicates the principal's\
    \ display name, primarily used for device registration."
  name: "cas.authn.mfa.web-authn.core.display-name-attribute"
  defaultValue: "displayName"
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.Boolean"
  description: "Whether WebAuthn functionality should be activated and enabled."
  shortDescription: "Whether WebAuthn functionality should be activated and enabled."
  name: "cas.authn.mfa.web-authn.core.enabled"
  defaultValue: true
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.Long"
  description: "Expire and forget device registration records after this period."
  shortDescription: "Expire and forget device registration records after this period."
  name: "cas.authn.mfa.web-authn.core.expire-devices"
  defaultValue: 30
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "Device registration record expiration time unit."
  shortDescription: "Device registration record expiration time unit."
  name: "cas.authn.mfa.web-authn.core.expire-devices-time-unit"
  defaultValue: ""
- required: true
  module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.String"
  description: "The id that will be set as the rp parameter when initiating registration\
    \ operations, and which id hash will be compared against. This is a required parameter.\
    \ A successful registration or authentication operation requires rp id hash to\
    \ exactly equal the SHA-256 hash of this id member. Alternatively, it may instead\
    \ equal the SHA-256 hash of application id if the latter is present."
  shortDescription: "The id that will be set as the rp parameter when initiating registration\
    \ operations, and which id hash will be compared against."
  name: "cas.authn.mfa.web-authn.core.relying-party-id"
  defaultValue: ""
- required: true
  module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.String"
  description: "The human-palatable name of the Relaying Party."
  shortDescription: "The human-palatable name of the Relaying Party."
  name: "cas.authn.mfa.web-authn.core.relying-party-name"
  defaultValue: ""
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.Boolean"
  description: "Indicates whether this provider should support trusted devices."
  shortDescription: "Indicates whether this provider should support trusted devices."
  name: "cas.authn.mfa.web-authn.core.trusted-device-enabled"
  defaultValue: false
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationCoreProperties"
  type: "java.lang.Boolean"
  description: "If true, finish assertion op will fail if the  signature counter value\
    \ in the response is not strictly greater than the stored signature counter value."
  shortDescription: "If true, finish assertion op will fail if the  signature counter\
    \ value in the response is not strictly greater than the stored signature counter\
    \ value."
  name: "cas.authn.mfa.web-authn.core.validate-signature-counter"
  defaultValue: true
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties"
  type: "org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes"
  description: "The failure mode policy for this MFA provider. The authentication\
    \ policy by default supports fail-closed mode, which means that if you attempt\
    \ to exercise a particular provider available to CAS and the provider cannot be\
    \ reached, authentication will be stopped and an error will be displayed. You\
    \ can of course change this behavior so that authentication proceeds without exercising\
    \ the provider functionality, if that provider cannot respond. Each defined multifactor\
    \ authentication provider can set its own failure mode policy. Failure modes set\
    \ at this location will override the global failure mode, but defer to any failure\
    \ mode set by the registered service.\nAvailable values are as follows:\n<ul><li>{@code\
    \ OPEN}: Disallow MFA, proceed with authentication but don't communicate MFA to\
    \ the RP.</li><li>{@code CLOSED}: Disallow MFA, block with authentication.</li><li>{@code\
    \ PHANTOM}: Disallow MFA, proceed with authentication and communicate MFA to the\
    \ RP.</li><li>{@code NONE}: Do not check for failure at all.</li><li>{@code UNDEFINED}:\
    \ The default one indicating that no failure mode is set at all.</li></ul>"
  shortDescription: "The failure mode policy for this MFA provider."
  name: "cas.authn.mfa.web-authn.failure-mode"
  defaultValue: "CLOSED"
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "The identifier for the multifactor provider. In most cases, this need\
    \ not be configured explicitly, unless multiple instances of the same provider\
    \ type are configured in CAS."
  shortDescription: "The identifier for the multifactor provider."
  name: "cas.authn.mfa.web-authn.id"
  defaultValue: ""
- required: true
  module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnJsonMultifactorProperties"
  type: "org.springframework.core.io.Resource"
  description: "The location of the resource. Resources can be URLS, or files found\
    \ either on the classpath or outside somewhere in the file system."
  shortDescription: "The location of the resource."
  name: "cas.authn.mfa.web-authn.json.location"
  defaultValue: ""
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "The name of the authentication handler used to verify credentials\
    \ in MFA."
  shortDescription: "The name of the authentication handler used to verify credentials\
    \ in MFA."
  name: "cas.authn.mfa.web-authn.name"
  defaultValue: ""
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties"
  type: "java.lang.Integer"
  description: "The order of the authentication handler in the chain."
  shortDescription: "The order of the authentication handler in the chain."
  name: "cas.authn.mfa.web-authn.order"
  defaultValue: ""
- module: "cas-server-support-webauthn"
  owner: "org.apereo.cas.configuration.model.support.mfa.webauthn.WebAuthnMultifactorAuthenticationProperties"
  type: "java.lang.Integer"
  description: "At times, CAS needs to determine the correct provider when step-up\
    \ authentication is required. Consider for a moment that CAS already has established\
    \ an SSO session with/without a provider and has reached a level of authentication.\
    \ Another incoming request attempts to exercise that SSO session with a different\
    \ and often competing authentication requirement that may differ from the authentication\
    \ level CAS has already established. Concretely, examples may be: <ul> <li>CAS\
    \ has achieved an SSO session, but a separate request now requires step-up authentication\
    \ with DuoSecurity.</li> <li>CAS has achieved an SSO session with an authentication\
    \ level satisfied by DuoSecurity, but a separate request now requires step-up\
    \ authentication with YubiKey. </li> </ul> In certain scenarios, CAS will attempt\
    \ to rank authentication levels and compare them with each other. If CAS already\
    \ has achieved a level that is higher than what the incoming request requires,\
    \ no step-up authentication will be performed. If the opposite is true, CAS will\
    \ route the authentication flow to the required authentication level and upon\
    \ success, will adjust the SSO session with the new higher authentication level\
    \ now satisfied. Ranking of authentication methods is done per provider via specific\
    \ properties for each. Note that the higher the rank value is, the higher on the\
    \ security scale it remains. A provider that ranks higher with a larger weight\
    \ value trumps and override others with a lower value."
  shortDescription: "At times, CAS needs to determine the correct provider when step-up\
    \ authentication is required."
  name: "cas.authn.mfa.web-authn.rank"
  defaultValue: 0
