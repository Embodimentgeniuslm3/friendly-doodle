---
- required: true
  module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "Base URL for API calls to authenticate, fetch channels or verify responses."
  shortDescription: "Base URL for API calls to authenticate, fetch channels or verify\
    \ responses."
  name: "cas.authn.mfa.acceptto.api-url"
  defaultValue: "https://mfa.acceptto.com/api/v9/"
- required: true
  module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "Identifier of the application. When an organization creates an application\
    \ in eGuardian dashboard this id gets generated."
  shortDescription: "Identifier of the application."
  name: "cas.authn.mfa.acceptto.application-id"
  defaultValue: ""
- required: true
  module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "URL of the Acceptto instance for authn discovery. This page allows\
    \ the user to choose their second-factor authentication method. Based on the policies\
    \ defined by relying party user has the option of using Push Notification, Text\
    \ Message, Voice Call, TOTP for replying to the authentication request. As soon\
    \ as users select Accept or Decline with the push, or verifies with a one-time\
    \ passcode, they will get redirected back to callback url that was passed by the\
    \ relying party."
  shortDescription: "URL of the Acceptto instance for authn discovery."
  name: "cas.authn.mfa.acceptto.authn-selection-url"
  defaultValue: "https://mfa.acceptto.com/mfa/index"
- required: true
  module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "The user attribute that collects the user's email address which the\
    \ relying party wants to authenticate."
  shortDescription: "The user attribute that collects the user's email address which\
    \ the relying party wants to authenticate."
  name: "cas.authn.mfa.acceptto.email-attribute"
  defaultValue: "mail"
- module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "org.apereo.cas.configuration.model.support.mfa.BaseMultifactorAuthenticationProviderProperties$MultifactorAuthenticationProviderFailureModes"
  description: "The failure mode policy for this MFA provider. The authentication\
    \ policy by default supports fail-closed mode, which means that if you attempt\
    \ to exercise a particular provider available to CAS and the provider cannot be\
    \ reached, authentication will be stopped and an error will be displayed. You\
    \ can of course change this behavior so that authentication proceeds without exercising\
    \ the provider functionality, if that provider cannot respond. Each defined multifactor\
    \ authentication provider can set its own failure mode policy. Failure modes set\
    \ at this location will override the global failure mode, but defer to any failure\
    \ mode set by the registered service.\nAvailable values are as follows:\n<ul><li>{@code\
    \ OPEN}: Disallow MFA, proceed with authentication but don't communicate MFA to\
    \ the RP.</li><li>{@code CLOSED}: Disallow MFA, block with authentication.</li><li>{@code\
    \ PHANTOM}: Disallow MFA, proceed with authentication and communicate MFA to the\
    \ RP.</li><li>{@code NONE}: Do not check for failure at all.</li><li>{@code UNDEFINED}:\
    \ The default one indicating that no failure mode is set at all.</li></ul>"
  shortDescription: "The failure mode policy for this MFA provider."
  name: "cas.authn.mfa.acceptto.failure-mode"
  defaultValue: "CLOSED"
- module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "List of active directory group GUIDs that user is a member of. This\
    \ is used for Group based policies. If undefined, will ignore passing the groups\
    \ to Acceptto."
  shortDescription: "List of active directory group GUIDs that user is a member of."
  name: "cas.authn.mfa.acceptto.group-attribute"
  defaultValue: ""
- module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "The identifier for the multifactor provider. In most cases, this need\
    \ not be configured explicitly, unless multiple instances of the same provider\
    \ type are configured in CAS."
  shortDescription: "The identifier for the multifactor provider."
  name: "cas.authn.mfa.acceptto.id"
  defaultValue: ""
- module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "Message to deliver to the user. This message gets delivered to the\
    \ user device via push notification. e.g \"Would you like to sign in?\"."
  shortDescription: "Message to deliver to the user."
  name: "cas.authn.mfa.acceptto.message"
  defaultValue: "Would you like to sign into CAS?"
- module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "The name of the authentication handler used to verify credentials\
    \ in MFA."
  shortDescription: "The name of the authentication handler used to verify credentials\
    \ in MFA."
  name: "cas.authn.mfa.acceptto.name"
  defaultValue: ""
- module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.Integer"
  description: "The order of the authentication handler in the chain."
  shortDescription: "The order of the authentication handler in the chain."
  name: "cas.authn.mfa.acceptto.order"
  defaultValue: ""
- required: true
  module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "Organization identifier."
  shortDescription: "Organization identifier."
  name: "cas.authn.mfa.acceptto.organization-id"
  defaultValue: ""
- required: true
  module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "Organization secret."
  shortDescription: "Organization secret."
  name: "cas.authn.mfa.acceptto.organization-secret"
  defaultValue: ""
- module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.Boolean"
  description: "Whether QR Code login should be enabled."
  shortDescription: "Whether QR Code login should be enabled."
  name: "cas.authn.mfa.acceptto.qr-login-enabled"
  defaultValue: true
- module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.Integer"
  description: "At times, CAS needs to determine the correct provider when step-up\
    \ authentication is required. Consider for a moment that CAS already has established\
    \ an SSO session with/without a provider and has reached a level of authentication.\
    \ Another incoming request attempts to exercise that SSO session with a different\
    \ and often competing authentication requirement that may differ from the authentication\
    \ level CAS has already established. Concretely, examples may be: <ul> <li>CAS\
    \ has achieved an SSO session, but a separate request now requires step-up authentication\
    \ with DuoSecurity.</li> <li>CAS has achieved an SSO session with an authentication\
    \ level satisfied by DuoSecurity, but a separate request now requires step-up\
    \ authentication with YubiKey. </li> </ul> In certain scenarios, CAS will attempt\
    \ to rank authentication levels and compare them with each other. If CAS already\
    \ has achieved a level that is higher than what the incoming request requires,\
    \ no step-up authentication will be performed. If the opposite is true, CAS will\
    \ route the authentication flow to the required authentication level and upon\
    \ success, will adjust the SSO session with the new higher authentication level\
    \ now satisfied. Ranking of authentication methods is done per provider via specific\
    \ properties for each. Note that the higher the rank value is, the higher on the\
    \ security scale it remains. A provider that ranks higher with a larger weight\
    \ value trumps and override others with a lower value."
  shortDescription: "At times, CAS needs to determine the correct provider when step-up\
    \ authentication is required."
  name: "cas.authn.mfa.acceptto.rank"
  defaultValue: 0
- required: true
  module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "URL to the enrollment/registration API."
  shortDescription: "URL to the enrollment/registration API."
  name: "cas.authn.mfa.acceptto.registration-api-url"
  defaultValue: "https://mfa.acceptto.com/api/integration/v1/mfa/authenticate"
- required: true
  module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.String"
  description: "Secret of the application. When an organization creates an application\
    \ in eGuardian dashboard this secret gets generated."
  shortDescription: "Secret of the application."
  name: "cas.authn.mfa.acceptto.secret"
  defaultValue: ""
- module: "cas-server-support-acceptto-mfa"
  owner: "org.apereo.cas.configuration.model.support.mfa.AccepttoMultifactorAuthenticationProperties"
  type: "java.lang.Long"
  description: "Timeout value for the authentication request is in seconds. If the\
    \ user does not respond in the specified time period, an authentication request\
    \ expires. The max value is 600 seconds. Setting the value any higher will cause\
    \ it to revert back to 600 seconds."
  shortDescription: "Timeout value for the authentication request is in seconds."
  name: "cas.authn.mfa.acceptto.timeout"
  defaultValue: 120
