---
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The column to store the AUP attribute. May differ from the profile\
    \ attribute defined by {@link AcceptableUsagePolicyCoreProperties#getAupAttributeName()}.\
    \ SQL query can be further customized by setting {@link #sqlUpdate}."
  shortDescription: "The column to store the AUP attribute."
  name: "cas.acceptable-usage-policy.jdbc.aup-column"
  defaultValue: ""
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.Boolean"
  description: "The default auto-commit behavior of connections in the pool. Determined\
    \ whether queries such as update/insert should be immediately executed without\
    \ waiting for an underlying transaction."
  shortDescription: "The default auto-commit behavior of connections in the pool."
  name: "cas.acceptable-usage-policy.jdbc.autocommit"
  defaultValue: false
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.Integer"
  description: "A non-zero value enables use of JDBC2 batch updates by Hibernate.\
    \ e.g. recommended values between 5 and 30."
  shortDescription: "A non-zero value enables use of JDBC2 batch updates by Hibernate.\
    \ e.g. recommended values between 5 and 30."
  name: "cas.acceptable-usage-policy.jdbc.batch-size"
  defaultValue: 100
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "Attempts to do a JNDI data source look up for the data source name\
    \ specified. Will attempt to locate the data source object as is."
  shortDescription: "Attempts to do a JNDI data source look up for the data source\
    \ name specified."
  name: "cas.acceptable-usage-policy.jdbc.data-source-name"
  defaultValue: ""
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "Hibernate feature to automatically validate and exports DDL to the\
    \ schema. By default, creates and drops the schema automatically when a session\
    \ is starts and ends. Setting the value to {@code validate} or {@code none} may\
    \ be more desirable for production, but any of the following options can be used:\
    \ <ul>     <li>{@code validate}: Validate the schema, but make no changes to the\
    \ database.</li>     <li>{@code update}: Update the schema.</li>     <li>{@code\
    \ create}: Create the schema, destroying previous data.</li>     <li>{@code create-drop}:\
    \ Drop the schema at the end of the session.</li>     <li>{@code none}: Do nothing.</li>\
    \ </ul> <p> Note that during a version migration where any schema has changed\
    \ {@code create-drop} will result in the loss of all data as soon as CAS is started.\
    \ For transient data like tickets this is probably not an issue, but in cases\
    \ like the audit table important data could be lost. Using `update`, while safe\
    \ for data, is confirmed to result in invalid database state. {@code validate}\
    \ or {@code none} settings are likely the only safe options for production use.\
    \ </p> For more info, <a href=\"http://docs.spring.io/spring-framework/docs/current/javadoc-api\"\
    >see this</a>."
  shortDescription: "Hibernate feature to automatically validate and exports DDL to\
    \ the schema."
  name: "cas.acceptable-usage-policy.jdbc.ddl-auto"
  defaultValue: "update"
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "Qualifies unqualified table names with the given catalog in generated\
    \ SQL."
  shortDescription: "Qualifies unqualified table names with the given catalog in generated\
    \ SQL."
  name: "cas.acceptable-usage-policy.jdbc.default-catalog"
  defaultValue: ""
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "Qualify unqualified table names with the given schema/tablespace in\
    \ generated SQL."
  shortDescription: "Qualify unqualified table names with the given schema/tablespace\
    \ in generated SQL."
  name: "cas.acceptable-usage-policy.jdbc.default-schema"
  defaultValue: ""
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The database dialect is a configuration setting for platform independent\
    \ software (JPA, Hibernate, etc) which allows such software to translate its generic\
    \ SQL statements into vendor specific DDL, DML."
  shortDescription: "The database dialect is a configuration setting for platform\
    \ independent software (JPA, Hibernate, etc) which allows such software to translate\
    \ its generic SQL statements into vendor specific DDL, DML."
  name: "cas.acceptable-usage-policy.jdbc.dialect"
  defaultValue: "org.hibernate.dialect.HSQLDialect"
- required: true
  module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The JDBC driver used to connect to the database."
  shortDescription: "The JDBC driver used to connect to the database."
  name: "cas.acceptable-usage-policy.jdbc.driver-class"
  defaultValue: "org.hsqldb.jdbcDriver"
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.Long"
  description: "Set the pool initialization failure timeout. <ul> <li>Any value greater\
    \ than zero will be treated as a timeout for pool initialization. The calling\
    \ thread will be blocked from continuing until a successful connection to the\
    \ database, or until the timeout is reached.  If the timeout is reached, then\
    \ a {@code PoolInitializationException} will be thrown. </li> <li>A value of zero\
    \ will <i>not</i>  prevent the pool from starting in the case that a connection\
    \ cannot be obtained. However, upon start the pool will attempt to obtain a connection\
    \ and validate that the {@code connectionTestQuery} and {@code connectionInitSql}\
    \ are valid.  If those validations fail, an exception will be thrown.  If a connection\
    \ cannot be obtained, the validation is skipped and the the pool will start and\
    \ continue to try to obtain connections in the background. This can mean that\
    \ callers to {@code DataSource#getConnection()} may encounter exceptions. </li>\
    \ <li>A value less than zero will <i>not</i> bypass any connection attempt and\
    \ validation during startup, and therefore the pool will start immediately.  The\
    \ pool will continue to try to obtain connections in the background. This can\
    \ mean that callers to {@code DataSource#getConnection()} may encounter exceptions.\
    \ </li> </ul> Note that if this timeout value is greater than or equal to zero\
    \ (0), and therefore an initial connection validation is performed, this timeout\
    \ does not override the {@code connectionTimeout} or {@code validationTimeout};\
    \ they will be honored before this timeout is applied.  The default value is one\
    \ millisecond."
  shortDescription: "Set the pool initialization failure timeout."
  name: "cas.acceptable-usage-policy.jdbc.fail-fast-timeout"
  defaultValue: 1
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.Integer"
  description: "Used to specify number of rows to be fetched in a select query."
  shortDescription: "Used to specify number of rows to be fetched in a select query."
  name: "cas.acceptable-usage-policy.jdbc.fetch-size"
  defaultValue: 100
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.Boolean"
  description: "Allow hibernate to generate query statistics."
  shortDescription: "Allow hibernate to generate query statistics."
  name: "cas.acceptable-usage-policy.jdbc.generate-statistics"
  defaultValue: false
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The SQL query to be executed to test the validity of connections."
  shortDescription: "The SQL query to be executed to test the validity of connections."
  name: "cas.acceptable-usage-policy.jdbc.health-query"
  defaultValue: ""
- duration: true
  module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "Controls the maximum amount of time that a connection is allowed to\
    \ sit idle in the pool."
  shortDescription: "Controls the maximum amount of time that a connection is allowed\
    \ to sit idle in the pool."
  name: "cas.acceptable-usage-policy.jdbc.idle-timeout"
  defaultValue: "PT10M"
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.Boolean"
  description: "This property determines whether data source isolates internal pool\
    \ queries, such as the connection alive test, in their own transaction. <p> Since\
    \ these are typically read-only queries, it is rarely necessary to encapsulate\
    \ them in their own transaction. This property only applies if {@link #autocommit}\
    \ is disabled."
  shortDescription: "This property determines whether data source isolates internal\
    \ pool queries, such as the connection alive test, in their own transaction."
  name: "cas.acceptable-usage-policy.jdbc.isolate-internal-queries"
  defaultValue: false
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "Defines the isolation level for transactions. @see org.springframework.transaction.TransactionDefinition"
  shortDescription: "Defines the isolation level for transactions."
  name: "cas.acceptable-usage-policy.jdbc.isolation-level-name"
  defaultValue: "ISOLATION_READ_COMMITTED"
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.Integer"
  description: "Controls the amount of time that a connection can be out of the pool\
    \ before a message is logged indicating a possible connection leak."
  shortDescription: "Controls the amount of time that a connection can be out of the\
    \ pool before a message is logged indicating a possible connection leak."
  name: "cas.acceptable-usage-policy.jdbc.leak-threshold"
  defaultValue: 3000
- required: true
  module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The database connection password."
  shortDescription: "The database connection password."
  name: "cas.acceptable-usage-policy.jdbc.password"
  defaultValue: ""
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "Fully-qualified name of the class that can control the physical naming\
    \ strategy of hibernate."
  shortDescription: "Fully-qualified name of the class that can control the physical\
    \ naming strategy of hibernate."
  name: "cas.acceptable-usage-policy.jdbc.physical-naming-strategy-class-name"
  defaultValue: "org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy"
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The profile attribute to extract the value for the {@link #principalIdColumn}\
    \ used in the WHERE clause of {@link #sqlUpdate}. If empty, the principal ID will\
    \ be used."
  shortDescription: "The profile attribute to extract the value for the {@link #principalIdColumn}\
    \ used in the WHERE clause of {@link #sqlUpdate}."
  name: "cas.acceptable-usage-policy.jdbc.principal-id-attribute"
  defaultValue: ""
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The column to identify the principal. SQL query can be further customized\
    \ by setting {@link #sqlUpdate}."
  shortDescription: "The column to identify the principal."
  name: "cas.acceptable-usage-policy.jdbc.principal-id-column"
  defaultValue: "username"
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "Defines the propagation behavior for transactions. @see org.springframework.transaction.TransactionDefinition"
  shortDescription: "Defines the propagation behavior for transactions."
  name: "cas.acceptable-usage-policy.jdbc.propagation-behavior-name"
  defaultValue: "PROPAGATION_REQUIRED"
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional settings provided by Hibernate in form of key-value pairs."
  shortDescription: "Additional settings provided by Hibernate in form of key-value\
    \ pairs."
  name: "cas.acceptable-usage-policy.jdbc.properties"
  defaultValue: ""
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The query template to search for the AUP attribute. %s placeholders\
    \ represent {@link #aupColumn}, {@link #tableName}, {@link #principalIdColumn}\
    \ settings."
  shortDescription: "The query template to search for the AUP attribute."
  name: "cas.acceptable-usage-policy.jdbc.sql-select"
  defaultValue: "SELECT %s FROM %s WHERE %s=?"
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The query template to update the AUP attribute. %s placeholders represent\
    \ {@link #tableName}, {@link #aupColumn}, {@link #principalIdColumn} settings."
  shortDescription: "The query template to update the AUP attribute."
  name: "cas.acceptable-usage-policy.jdbc.sql-update"
  defaultValue: "UPDATE %s SET %s=true WHERE %s=?"
- module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The table name in the database that holds the AUP attribute to update\
    \ for the user."
  shortDescription: "The table name in the database that holds the AUP attribute to\
    \ update for the user."
  name: "cas.acceptable-usage-policy.jdbc.table-name"
  defaultValue: ""
- expressionLanguage: true
  required: true
  module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The database connection URL."
  shortDescription: "The database connection URL."
  name: "cas.acceptable-usage-policy.jdbc.url"
  defaultValue: "jdbc:hsqldb:mem:cas-hsql-database"
- required: true
  module: "cas-server-support-aup-jdbc"
  owner: "org.apereo.cas.configuration.model.support.aup.JdbcAcceptableUsagePolicyProperties"
  type: "java.lang.String"
  description: "The database user. <p> The database user must have sufficient permissions\
    \ to be able to handle schema changes and updates, when needed."
  shortDescription: "The database user."
  name: "cas.acceptable-usage-policy.jdbc.user"
  defaultValue: "sa"
