---
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.acceptable-usage-policy.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.acceptable-usage-policy.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.acceptable-usage-policy.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.acceptable-usage-policy.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.acceptable-usage-policy.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.acceptable-usage-policy.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.acceptable-usage-policy.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.acceptable-usage-policy.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.acceptable-usage-policy.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.acceptable-usage-policy.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.acceptable-usage-policy.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.acceptable-usage-policy.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.acceptable-usage-policy.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.acceptable-usage-policy.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.acceptable-usage-policy.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.acceptable-usage-policy.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.acceptable-usage-policy.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.acceptable-usage-policy.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.acceptable-usage-policy.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.acceptable-usage-policy.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.acceptable-usage-policy.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.acceptable-usage-policy.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.acceptable-usage-policy.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.acceptable-usage-policy.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.acceptable-usage-policy.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.acceptable-usage-policy.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.acceptable-usage-policy.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.acceptable-usage-policy.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.audit.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.audit.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.audit.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.audit.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.audit.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.audit.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.audit.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.audit.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.audit.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.audit.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.audit.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.audit.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.audit.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.audit.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.audit.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.audit.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.audit.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.audit.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.audit.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.audit.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.audit.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.audit.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.audit.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.audit.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.audit.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.audit.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.audit.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.audit.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.authn.attribute-repository.redis[].cluster.adaptive-topology-refresh"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\n\
    cluster topology. When set to false, only the initial seed nodes are\nused as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.authn.attribute-repository.redis[].cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "int"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.authn.attribute-repository.redis[].cluster.max-redirects"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.authn.attribute-repository.redis[].cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.authn.attribute-repository.redis[].cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.authn.attribute-repository.redis[].cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.authn.attribute-repository.redis[].pool.enabled"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\n\
    fairly. True means that waiting threads are served as if waiting in a FIFO\nqueue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.authn.attribute-repository.redis[].pool.fairness"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect\nto idle objects - always returning the most recently used object from\
    \ the\npool, or as a FIFO (first in, first out) queue, where the pool always returns\n\
    the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.authn.attribute-repository.redis[].pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "int"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time.\nUse a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.authn.attribute-repository.redis[].pool.max-active"
  defaultValue: "8"
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "int"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to\nindicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.authn.attribute-repository.redis[].pool.max-idle"
  defaultValue: "8"
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "int"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block\nbefore throwing an exception when the pool is exhausted. Use a negative\
    \ value\nto block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.authn.attribute-repository.redis[].pool.max-wait"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it\nis eligible for eviction by the idle object evictor (if any - see\n\
    setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\n\
    be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.attribute-repository.redis[].pool.min-evictable-idle-time-millis"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "int"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool.\nThis setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.authn.attribute-repository.redis[].pool.min-idle"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "int"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the\nidle object evictor thread. When positive, the number of tests\
    \ performed for\na run will be the minimum of the configured value and the number\
    \ of idle\ninstances in the pool. When negative, the number of tests performed\
    \ will be\nceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that\
    \ when\nthe value is -n roughly one nth of the idle objects will be tested per\
    \ run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.authn.attribute-repository.redis[].pool.num-tests-per-eviction-run"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it\nis eligible for eviction by the idle object evictor (if any - see\n\
    setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\nleast\
    \ minIdle object instances remain in the pool. This setting is overridden\nby\
    \ getMinEvictableIdleTimeMillis() (that is, if\ngetMinEvictableIdleTimeMillis()\
    \ is positive, then\ngetSoftMinEvictableIdleTimeMillis() is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.authn.attribute-repository.redis[].pool.soft-min-evictable-idle-time-millis"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being\nreturned from the borrowObject() method. Validation is performed by the\n\
    validateObject() method of the factory associated with the pool. If the\nobject\
    \ fails to validate, it will be removed from the pool and destroyed, and\na new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.attribute-repository.redis[].pool.test-on-borrow"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being\nreturned from the borrowObject() method. Validation is performed by the\n\
    validateObject() method of the factory associated with the pool. If the\nobject\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.attribute-repository.redis[].pool.test-on-create"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they\nare returned to the pool via the returnObject() method. Validation is\n\
    performed by the validateObject() method of the factory associated with the\n\
    pool. Returning objects that fail validation are destroyed rather then being\n\
    returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.authn.attribute-repository.redis[].pool.test-on-return"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the\nidle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\n\
    Validation is performed by the validateObject() method of the factory\nassociated\
    \ with the pool. If the object fails to validate, it will be removed\nfrom the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.attribute-repository.redis[].pool.test-while-idle"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.authn.attribute-repository.redis[].sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.authn.attribute-repository.redis[].sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.authn.mfa.gauth.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.authn.mfa.gauth.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.authn.mfa.gauth.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.authn.mfa.gauth.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.authn.mfa.gauth.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.authn.mfa.gauth.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.authn.mfa.gauth.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.authn.mfa.gauth.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.authn.mfa.gauth.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.authn.mfa.gauth.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.authn.mfa.gauth.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.authn.mfa.gauth.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.authn.mfa.gauth.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.authn.mfa.gauth.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.authn.mfa.gauth.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.authn.mfa.gauth.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.authn.mfa.gauth.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.authn.mfa.gauth.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.gauth.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.authn.mfa.gauth.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.authn.mfa.gauth.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.authn.mfa.gauth.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.gauth.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.gauth.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.authn.mfa.gauth.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.gauth.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.authn.mfa.gauth.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.authn.mfa.gauth.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.authn.mfa.trusted.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.authn.mfa.trusted.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.authn.mfa.trusted.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.authn.mfa.trusted.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.authn.mfa.trusted.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.authn.mfa.trusted.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.authn.mfa.trusted.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.authn.mfa.trusted.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.authn.mfa.trusted.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.authn.mfa.trusted.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.authn.mfa.trusted.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.authn.mfa.trusted.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.authn.mfa.trusted.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.authn.mfa.trusted.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.authn.mfa.trusted.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.authn.mfa.trusted.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.authn.mfa.trusted.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.authn.mfa.trusted.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.trusted.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.authn.mfa.trusted.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.authn.mfa.trusted.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.authn.mfa.trusted.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.trusted.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.trusted.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.authn.mfa.trusted.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.trusted.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.authn.mfa.trusted.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.authn.mfa.trusted.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.authn.mfa.u2f.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.authn.mfa.u2f.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.authn.mfa.u2f.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.authn.mfa.u2f.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.authn.mfa.u2f.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.authn.mfa.u2f.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.authn.mfa.u2f.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.authn.mfa.u2f.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.authn.mfa.u2f.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.authn.mfa.u2f.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.authn.mfa.u2f.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.authn.mfa.u2f.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.authn.mfa.u2f.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.authn.mfa.u2f.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.authn.mfa.u2f.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.authn.mfa.u2f.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.authn.mfa.u2f.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.authn.mfa.u2f.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.u2f.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.authn.mfa.u2f.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.authn.mfa.u2f.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.authn.mfa.u2f.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.u2f.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.u2f.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.authn.mfa.u2f.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.u2f.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.authn.mfa.u2f.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.authn.mfa.u2f.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.authn.mfa.web-authn.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.authn.mfa.web-authn.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.authn.mfa.web-authn.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.authn.mfa.web-authn.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.authn.mfa.web-authn.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.authn.mfa.web-authn.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.authn.mfa.web-authn.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.authn.mfa.web-authn.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.authn.mfa.web-authn.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.authn.mfa.web-authn.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.authn.mfa.web-authn.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.authn.mfa.web-authn.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.authn.mfa.web-authn.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.authn.mfa.web-authn.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.authn.mfa.web-authn.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.authn.mfa.web-authn.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.authn.mfa.web-authn.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.authn.mfa.web-authn.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.web-authn.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.authn.mfa.web-authn.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.authn.mfa.web-authn.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.authn.mfa.web-authn.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.web-authn.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.web-authn.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.authn.mfa.web-authn.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.web-authn.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.authn.mfa.web-authn.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.authn.mfa.web-authn.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.authn.mfa.yubikey.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.authn.mfa.yubikey.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.authn.mfa.yubikey.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.authn.mfa.yubikey.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.authn.mfa.yubikey.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.authn.mfa.yubikey.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.authn.mfa.yubikey.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.authn.mfa.yubikey.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.authn.mfa.yubikey.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.authn.mfa.yubikey.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.authn.mfa.yubikey.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.authn.mfa.yubikey.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.authn.mfa.yubikey.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.authn.mfa.yubikey.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.authn.mfa.yubikey.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.authn.mfa.yubikey.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.authn.mfa.yubikey.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.authn.mfa.yubikey.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.yubikey.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.authn.mfa.yubikey.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.authn.mfa.yubikey.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.authn.mfa.yubikey.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.yubikey.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.mfa.yubikey.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.authn.mfa.yubikey.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.mfa.yubikey.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.authn.mfa.yubikey.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.authn.mfa.yubikey.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.authn.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.authn.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.authn.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.authn.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.authn.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.authn.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.authn.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.authn.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.authn.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.authn.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.authn.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.authn.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.authn.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.authn.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.authn.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.authn.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.authn.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.authn.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.authn.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.authn.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.authn.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.authn.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.authn.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.authn.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.authn.saml-idp.metadata.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.authn.saml-idp.metadata.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.authn.saml-idp.metadata.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.authn.saml-idp.metadata.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.authn.saml-idp.metadata.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.authn.saml-idp.metadata.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.authn.saml-idp.metadata.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.authn.saml-idp.metadata.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.authn.saml-idp.metadata.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.authn.saml-idp.metadata.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.authn.saml-idp.metadata.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.authn.saml-idp.metadata.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.authn.saml-idp.metadata.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.authn.saml-idp.metadata.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.authn.saml-idp.metadata.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.authn.saml-idp.metadata.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.authn.saml-idp.metadata.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.authn.saml-idp.metadata.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.saml-idp.metadata.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.authn.saml-idp.metadata.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.authn.saml-idp.metadata.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.authn.saml-idp.metadata.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.saml-idp.metadata.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.authn.saml-idp.metadata.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.authn.saml-idp.metadata.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.authn.saml-idp.metadata.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.authn.saml-idp.metadata.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.authn.saml-idp.metadata.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.consent.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.consent.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.consent.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.consent.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.consent.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.consent.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.consent.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.consent.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.consent.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.consent.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.consent.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.consent.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.consent.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.consent.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.consent.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.consent.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.consent.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.consent.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.consent.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.consent.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.consent.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.consent.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.consent.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.consent.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.consent.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.consent.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.consent.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.consent.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.events.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.events.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.events.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.events.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.events.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.events.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.events.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.events.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.events.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.events.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.events.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.events.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.events.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.events.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.events.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.events.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.events.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.events.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.events.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.events.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.events.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.events.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.events.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.events.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.events.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.events.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.events.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.events.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.service-registry.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.service-registry.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.service-registry.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.service-registry.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.service-registry.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.service-registry.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.service-registry.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.service-registry.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.service-registry.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.service-registry.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.service-registry.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.service-registry.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.service-registry.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.service-registry.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.service-registry.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.service-registry.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.service-registry.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.service-registry.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.service-registry.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.service-registry.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.service-registry.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.service-registry.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.service-registry.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.service-registry.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.service-registry.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.service-registry.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.service-registry.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.service-registry.redis.sentinel.node"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  shortDescription: "Whether adaptive topology refreshing using all available refresh\
    \ triggers should be used."
  name: "cas.ticket.registry.redis.cluster.adaptive-topology-refresh"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  shortDescription: "Whether to discover and query all cluster nodes for obtaining\
    \ the cluster topology."
  name: "cas.ticket.registry.redis.cluster.dynamic-refresh-sources"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.Integer"
  description: "The max number of redirects to follow."
  shortDescription: "The max number of redirects to follow."
  name: "cas.ticket.registry.redis.cluster.max-redirects"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.util.List<org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties>"
  description: "List of nodes available in the redis cluster."
  shortDescription: "List of nodes available in the redis cluster."
  name: "cas.ticket.registry.redis.cluster.nodes"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Server's host address."
  shortDescription: "Server's host address."
  name: "cas.ticket.registry.redis.cluster.nodes[].host"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Identifier of this node."
  shortDescription: "Identifier of this node."
  name: "cas.ticket.registry.redis.cluster.nodes[].id"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Name of this node."
  shortDescription: "Name of this node."
  name: "cas.ticket.registry.redis.cluster.nodes[].name"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "int"
  description: "Server's port number."
  shortDescription: "Server's port number."
  name: "cas.ticket.registry.redis.cluster.nodes[].port"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Set the id of the master node."
  shortDescription: "Set the id of the master node."
  name: "cas.ticket.registry.redis.cluster.nodes[].replica-of"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterNodeProperties"
  type: "java.lang.String"
  description: "Indicate the type/role of this node.\nAccepted values are: {@code\
    \ MASTER, SLAVE}."
  shortDescription: "Indicate the type/role of this node."
  name: "cas.ticket.registry.redis.cluster.nodes[].type"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "The cluster connection's password."
  shortDescription: "The cluster connection's password."
  name: "cas.ticket.registry.redis.cluster.password"
  defaultValue: ""
- duration: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisClusterProperties"
  type: "java.lang.String"
  description: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  shortDescription: "Enables periodic refresh of cluster topology and sets the refresh\
    \ period."
  name: "cas.ticket.registry.redis.cluster.topology-refresh-period"
  defaultValue: ""
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Enable the pooling configuration."
  shortDescription: "Enable the pooling configuration."
  name: "cas.ticket.registry.redis.pool.enabled"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether or not the pool serves threads waiting to borrow objects\
    \ fairly. True means that waiting threads are served as if waiting in a FIFO queue."
  shortDescription: "Returns whether or not the pool serves threads waiting to borrow\
    \ objects fairly."
  name: "cas.ticket.registry.redis.pool.fairness"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether the pool has LIFO (last in, first out) behaviour with\
    \ respect to idle objects - always returning the most recently used object from\
    \ the pool, or as a FIFO (first in, first out) queue, where the pool always returns\
    \ the oldest object in the idle object pool."
  shortDescription: "Returns whether the pool has LIFO (last in, first out) behaviour\
    \ with respect to idle objects - always returning the most recently used object\
    \ from the pool, or as a FIFO (first in, first out) queue, where the pool always\
    \ returns the oldest object in the idle object pool."
  name: "cas.ticket.registry.redis.pool.lifo"
  defaultValue: true
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of connections that can be allocated by the pool at a given\
    \ time. Use a negative value for no limit."
  shortDescription: "Max number of connections that can be allocated by the pool at\
    \ a given time."
  name: "cas.ticket.registry.redis.pool.max-active"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Max number of \"idle\" connections in the pool. Use a negative value\
    \ to indicate an unlimited number of idle connections."
  shortDescription: "Max number of \"idle\" connections in the pool."
  name: "cas.ticket.registry.redis.pool.max-idle"
  defaultValue: 8
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Maximum amount of time (in milliseconds) a connection allocation should\
    \ block before throwing an exception when the pool is exhausted. Use a negative\
    \ value to block indefinitely."
  shortDescription: "Maximum amount of time (in milliseconds) a connection allocation\
    \ should block before throwing an exception when the pool is exhausted."
  name: "cas.ticket.registry.redis.pool.max-wait"
  defaultValue: -1
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)). When non-positive, no objects will\
    \ be evicted from the pool due to idle time alone."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.ticket.registry.redis.pool.min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if it is positive."
  shortDescription: "Target for the minimum number of idle connections to maintain\
    \ in the pool."
  name: "cas.ticket.registry.redis.pool.min-idle"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Integer"
  description: "Sets the maximum number of objects to examine during each run (if\
    \ any) of the idle object evictor thread. When positive, the number of tests performed\
    \ for a run will be the minimum of the configured value and the number of idle\
    \ instances in the pool. When negative, the number of tests performed will be\
    \ ceil(getNumIdle()/ abs(getNumTestsPerEvictionRun())) which means that when the\
    \ value is -n roughly one nth of the idle objects will be tested per run."
  shortDescription: "Sets the maximum number of objects to examine during each run\
    \ (if any) of the idle object evictor thread."
  name: "cas.ticket.registry.redis.pool.num-tests-per-eviction-run"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Long"
  description: "Sets the minimum amount of time an object may sit idle in the pool\
    \ before it is eligible for eviction by the idle object evictor (if any - see\
    \ setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at least\
    \ minIdle object instances remain in the pool. This setting is overridden by getMinEvictableIdleTimeMillis()\
    \ (that is, if getMinEvictableIdleTimeMillis() is positive, then getSoftMinEvictableIdleTimeMillis()\
    \ is ignored)."
  shortDescription: "Sets the minimum amount of time an object may sit idle in the\
    \ pool before it is eligible for eviction by the idle object evictor (if any -\
    \ see setTimeBetweenEvictionRunsMillis(long)), with the extra condition that at\
    \ least minIdle object instances remain in the pool."
  name: "cas.ticket.registry.redis.pool.soft-min-evictable-idle-time-millis"
  defaultValue: 0
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, it will be removed from the pool and destroyed, and a new\
    \ attempt will be made to borrow an object from the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.ticket.registry.redis.pool.test-on-borrow"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects created for the pool will be validated before\
    \ being returned from the borrowObject() method. Validation is performed by the\
    \ validateObject() method of the factory associated with the pool. If the object\
    \ fails to validate, then borrowObject() will fail."
  shortDescription: "Returns whether objects created for the pool will be validated\
    \ before being returned from the borrowObject() method."
  name: "cas.ticket.registry.redis.pool.test-on-create"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects borrowed from the pool will be validated when\
    \ they are returned to the pool via the returnObject() method. Validation is performed\
    \ by the validateObject() method of the factory associated with the pool. Returning\
    \ objects that fail validation are destroyed rather then being returned the pool."
  shortDescription: "Returns whether objects borrowed from the pool will be validated\
    \ when they are returned to the pool via the returnObject() method."
  name: "cas.ticket.registry.redis.pool.test-on-return"
  defaultValue: false
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisPoolProperties"
  type: "java.lang.Boolean"
  description: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long)).\
    \ Validation is performed by the validateObject() method of the factory associated\
    \ with the pool. If the object fails to validate, it will be removed from the\
    \ pool and destroyed."
  shortDescription: "Returns whether objects sitting idle in the pool will be validated\
    \ by the idle object evictor ( if any - see setTimeBetweenEvictionRunsMillis(long))."
  name: "cas.ticket.registry.redis.pool.test-while-idle"
  defaultValue: false
- required: true
  module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.lang.String"
  description: "Name of Redis server."
  shortDescription: "Name of Redis server."
  name: "cas.ticket.registry.redis.sentinel.master"
  defaultValue: ""
- module: "cas-server-support-redis-core"
  owner: "org.apereo.cas.configuration.model.support.redis.RedisSentinelProperties"
  type: "java.util.List<java.lang.String>"
  description: "list of host:port pairs."
  shortDescription: "list of host:port pairs."
  name: "cas.ticket.registry.redis.sentinel.node"
  defaultValue: ""
